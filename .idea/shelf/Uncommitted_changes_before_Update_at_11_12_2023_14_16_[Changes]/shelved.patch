Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n    <string name=\"app_name\">SampleChat</string>\r\n    <string name=\"title_home\">Главная</string>\r\n    <string name=\"title_settings\">Настройки</string>\r\n\r\n    <string name=\"menu_item_1\">Home</string>\r\n    <string name=\"menu_item_2\">Chat</string>\r\n    <string name=\"menu_item_3\">Settings</string>\r\n\r\n<!--    <string name=\"urlChatScheme\">https</string>-->\r\n<!--    <string name=\"urlChatHost\">presale.craft-talk.com</string>-->\r\n<!--    <string name=\"urlChatNameSpace\">webchat_presale</string>-->\r\n\r\n    <string name=\"chat_bottom_sheet_file_viewer_image_from_gallery\">Изображение</string>\r\n    <string name=\"chat_bottom_sheet_file_viewer_image_from_camera\">Камера</string>\r\n    <string name=\"chat_bottom_sheet_file_viewer_document_from_gallery\">Документ</string>\r\n\r\n    <string name=\"urlChatScheme\">https</string>\r\n    <string name=\"urlChatHost\">release.craft-talk.com</string>\r\n    <string name=\"urlChatNameSpace\">webchat_ASDK</string>\r\n\r\n    <string name=\"webUrlChatScheme\">https</string>\r\n    <string name=\"webUrlChatHost\">release.craft-talk.com</string>\r\n    <string name=\"webUrlChatNameSpace\">wwebchat_test</string>\r\n\r\n    <string name=\"salt\">C~kW]cq76(a?m[UbJ)drw+Wh6>W[3Wsj</string>\r\n    <string name=\"default_notification_channel_id\">0</string>\r\n    <string name=\"internet_connection_warning\">Нет доступа к сети…</string>\r\n    <string name=\"synchronization\">Синхронизация</string>\r\n\r\n    <string name=\"chat_file_provider_authorities\">com.crafttalk.chat.fileprovider</string>\r\n\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ b/app/src/main/res/values/strings.xml	(date 1701678983775)
@@ -16,12 +16,12 @@
     <string name="chat_bottom_sheet_file_viewer_document_from_gallery">Документ</string>
 
     <string name="urlChatScheme">https</string>
-    <string name="urlChatHost">release.craft-talk.com</string>
-    <string name="urlChatNameSpace">webchat_ASDK</string>
+    <string name="urlChatHost">cloud-dev-external.craft-talk.com</string>
+    <string name="urlChatNameSpace">channel_ce93c1</string>
 
     <string name="webUrlChatScheme">https</string>
-    <string name="webUrlChatHost">release.craft-talk.com</string>
-    <string name="webUrlChatNameSpace">wwebchat_test</string>
+    <string name="webUrlChatHost">cloud-dev-external.craft-talk.com</string>
+    <string name="webUrlChatNameSpace">channel_ce93c1</string>
 
     <string name="salt">C~kW]cq76(a?m[UbJ)drw+Wh6>W[3Wsj</string>
     <string name="default_notification_channel_id">0</string>
Index: chat/src/main/java/com/crafttalk/chat/domain/repository/IFeedbackRepository.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/repository/IFeedbackRepository.kt b/chat/src/main/java/com/crafttalk/chat/domain/repository/IFeedbackRepository.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/repository/IFeedbackRepository.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,5 +0,0 @@
-package com.crafttalk.chat.domain.repository
-
-interface IFeedbackRepository {
-    fun giveFeedbackOnOperator(countStars: Int)
-}
\ No newline at end of file
Index: chat/src/main/res/values/dimens.xml
===================================================================
diff --git a/chat/src/main/res/values/dimens.xml b/chat/src/main/res/values/dimens.xml
deleted file mode 100644
--- a/chat/src/main/res/values/dimens.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,55 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-
-    <dimen name="com_crafttalk_chat_padding_message">8dp</dimen>
-    <dimen name="com_crafttalk_chat_max_height_entry_field_message">100dp</dimen>
-
-    <dimen name="com_crafttalk_chat_default_size_title">20sp</dimen>
-    <dimen name="com_crafttalk_chat_default_size_user_message">14sp</dimen>
-    <dimen name="com_crafttalk_chat_default_size_user_replied_message">14sp</dimen>
-    <dimen name="com_crafttalk_chat_default_size_server_message">14sp</dimen>
-    <dimen name="com_crafttalk_chat_default_size_server_action">14sp</dimen>
-    <dimen name="com_crafttalk_chat_default_size_server_button">14sp</dimen>
-    <dimen name="com_crafttalk_chat_default_size_author">12sp</dimen>
-    <dimen name="com_crafttalk_chat_default_size_author_preview">24dp</dimen>
-    <dimen name="com_crafttalk_chat_default_size_time">12sp</dimen>
-    <dimen name="com_crafttalk_chat_default_size_warning">18sp</dimen>
-    <dimen name="com_crafttalk_chat_default_size_download">14sp</dimen>
-    <dimen name="com_crafttalk_chat_default_size_info">12sp</dimen>
-    <dimen name="com_crafttalk_chat_default_size_search_coincidence">14sp</dimen>
-    <dimen name="com_crafttalk_chat_default_size_feedback_title">16sp</dimen>
-
-    <dimen name="com_crafttalk_chat_horizontal_spacing_operator_button">4dp</dimen>
-    <dimen name="com_crafttalk_chat_vertical_spacing_operator_button">4dp</dimen>
-
-    <dimen name="com_crafttalk_chat_default_margin_start_media_file">14dp</dimen>
-    <dimen name="com_crafttalk_chat_default_margin_end_media_file">12dp</dimen>
-    <dimen name="com_crafttalk_chat_default_margin_top_media_file">12dp</dimen>
-    <dimen name="com_crafttalk_chat_default_margin_bottom_media_file">12dp</dimen>
-
-    <dimen name="com_crafttalk_chat_default_rounded_media_file_preview">5dp</dimen>
-    <dimen name="com_crafttalk_chat_default_rounded_gif_file_preview">2dp</dimen>
-
-    <dimen name="com_crafttalk_chat_message_margin_start">20dp</dimen>
-    <dimen name="com_crafttalk_chat_message_margin_top">10dp</dimen>
-    <dimen name="com_crafttalk_chat_message_margin_end">20dp</dimen>
-    <dimen name="com_crafttalk_chat_message_margin_bottom">10dp</dimen>
-    <dimen name="com_crafttalk_chat_message_content_padding_start">16dp</dimen>
-    <dimen name="com_crafttalk_chat_message_content_padding_top">12dp</dimen>
-    <dimen name="com_crafttalk_chat_message_content_padding_end">12dp</dimen>
-    <dimen name="com_crafttalk_chat_message_content_padding_bottom">12dp</dimen>
-
-    <dimen name="com_crafttalk_chat_message_replied_content_padding_start">8dp</dimen>
-    <dimen name="com_crafttalk_chat_message_replied_content_padding_top">6dp</dimen>
-    <dimen name="com_crafttalk_chat_message_replied_content_padding_end">6dp</dimen>
-    <dimen name="com_crafttalk_chat_message_replied_content_padding_bottom">6dp</dimen>
-
-    <dimen name="com_crafttalk_chat_message_replied_content_barrier_indent_start">-8dp</dimen>
-    <dimen name="com_crafttalk_chat_message_replied_content_barrier_indent_top">-6dp</dimen>
-    <dimen name="com_crafttalk_chat_message_replied_content_barrier_indent_end">6dp</dimen>
-    <dimen name="com_crafttalk_chat_message_replied_content_barrier_indent_bottom">6dp</dimen>
-
-    <dimen name="com_crafttalk_chat_download_btn_margin_top">16dp</dimen>
-    <dimen name="com_crafttalk_chat_message_info_margin_top">10dp</dimen>
-
-</resources>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/di/SdkComponent.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/di/SdkComponent.kt b/chat/src/main/java/com/crafttalk/chat/di/SdkComponent.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/di/SdkComponent.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,37 +0,0 @@
-package com.crafttalk.chat.di
-
-import android.content.Context
-import com.crafttalk.chat.di.modules.init.SharedPreferencesModule
-import com.crafttalk.chat.di.modules.init.DBModule
-import com.crafttalk.chat.di.modules.init.GsonModule
-import com.crafttalk.chat.di.modules.init.NetworkModule
-import com.crafttalk.chat.di.modules.init.RepositoryModule
-import com.crafttalk.chat.domain.repository.*
-import dagger.BindsInstance
-import dagger.Component
-import javax.inject.Singleton
-
-@Singleton
-@Component(
-    modules = [
-        NetworkModule::class,
-        RepositoryModule::class,
-        SharedPreferencesModule::class,
-        GsonModule::class,
-        DBModule::class
-    ]
-)
-interface SdkComponent {
-    @Component.Builder
-    interface Builder {
-        @BindsInstance fun context(context: Context): Builder
-        fun build(): SdkComponent
-    }
-    fun getConditionRepository(): IConditionRepository
-    fun getAuthRepository(): IAuthRepository
-    fun getVisitorRepository(): IVisitorRepository
-    fun getPersonRepository(): IPersonRepository
-    fun getNotificationRepository(): INotificationRepository
-
-    fun createChatComponent(): ChatComponent.Builder
-}
\ No newline at end of file
Index: chat/src/main/res/layout/com_crafttalk_chat_bottom_sheet_show_image.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_bottom_sheet_show_image.xml b/chat/src/main/res/layout/com_crafttalk_chat_bottom_sheet_show_image.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_bottom_sheet_show_image.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<RelativeLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent">
-
-    <com.github.chrisbanes.photoview.PhotoView
-        android:id="@+id/image_show"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent" />
-
-    <androidx.appcompat.widget.Toolbar
-        android:layout_width="match_parent"
-        android:layout_height="?attr/actionBarSize"
-        android:background="@color/com_crafttalk_chat_black_translucent">
-
-        <ImageView
-            android:id="@+id/image_navigate_back"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:src="@drawable/com_crafttalk_chat_ic_arrow_back" />
-
-        <ImageView
-            android:id="@+id/image_download"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:src="@drawable/com_crafttalk_chat_ic_file_download"
-            android:layout_gravity="end"
-            android:layout_marginEnd="16dp" />
-
-    </androidx.appcompat.widget.Toolbar>
-
-</RelativeLayout>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/feature/file_viewer/Adapter.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/feature/file_viewer/Adapter.kt b/chat/src/main/java/com/crafttalk/chat/presentation/feature/file_viewer/Adapter.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/feature/file_viewer/Adapter.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,38 +0,0 @@
-package com.crafttalk.chat.presentation.feature.file_viewer
-
-import android.view.LayoutInflater
-import android.view.ViewGroup
-import androidx.recyclerview.widget.RecyclerView
-import com.crafttalk.chat.R
-
-class Adapter(private val callback: (option: Option) -> Unit) : RecyclerView.Adapter<RecyclerView.ViewHolder>() {
-    private val data = mutableListOf<Option>()
-
-    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): RecyclerView.ViewHolder {
-        val view = LayoutInflater.from(parent.context).inflate(R.layout.com_crafttalk_chat_bottom_sheet_file_viewer_item, parent, false)
-        val holder = ItemViewHolder(view)
-        view.setOnClickListener {
-            val localData = data[holder.adapterPosition]
-            callback.invoke(localData)
-        }
-        return holder
-    }
-
-    override fun onBindViewHolder(holder: RecyclerView.ViewHolder, position: Int) {
-        if (holder is ItemViewHolder) {
-            val option = data[position]
-            holder.bind(option)
-        }
-    }
-
-    override fun getItemCount(): Int {
-        return data.size
-    }
-
-    fun setData(options: List<Option>) {
-        this.data.clear()
-        this.data.addAll(options)
-        notifyDataSetChanged()
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/helper/ui/media.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/helper/ui/media.kt b/chat/src/main/java/com/crafttalk/chat/presentation/helper/ui/media.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/helper/ui/media.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,99 +0,0 @@
-package com.crafttalk.chat.presentation.helper.ui
-
-import android.content.Context
-import android.graphics.Bitmap
-import android.graphics.drawable.Drawable
-import com.bumptech.glide.Glide
-import com.bumptech.glide.request.target.CustomTarget
-import com.bumptech.glide.request.transition.Transition
-import com.crafttalk.chat.presentation.helper.extensions.createCorrectGlideUrl
-import com.crafttalk.chat.utils.ChatParams
-import java.net.URL
-import kotlin.math.min
-
-fun getSizeMediaFile(context: Context, url: String, resultSize: (height: Int?, width: Int?) -> Unit) {
-    Glide.with(context)
-        .asBitmap()
-        .load(createCorrectGlideUrl(url))
-        .into(object : CustomTarget<Bitmap>() {
-            override fun onLoadFailed(errorDrawable: Drawable?) {
-                super.onLoadFailed(errorDrawable)
-                resultSize(null, null)
-            }
-            override fun onResourceReady(resource: Bitmap, transition: Transition<in Bitmap>?) {
-                resultSize(resource.height, resource.width)
-            }
-            override fun onLoadCleared(placeholder: Drawable?) {}
-        })
-}
-
-fun getSizeMediaFile(context: Context, url: String): Pair<Int, Int>? {
-    return try {
-        val resource = Glide.with(context)
-            .asBitmap()
-            .load(createCorrectGlideUrl(url))
-            .submit()
-            .get()
-        Pair(resource.height, resource.width)
-    } catch (ex: Exception) {
-        null
-    }
-}
-
-fun getWeightMediaFile(context: Context, url: String): Long? {
-    return try {
-        val weight = Glide.with(context)
-            .asFile()
-            .load(createCorrectGlideUrl(url))
-            .submit()
-            .get()
-        weight.length()
-    } catch (ex: Exception) {
-        null
-    }
-}
-
-fun getWeightFile(urlPath: String): Long? {
-    val contentDispositionKey = "content-disposition"
-    val template = "size="
-
-    return try {
-        val url = URL(urlPath)
-        val urlConnection = url.openConnection()
-        urlConnection.setRequestProperty("Cookie", "webchat-${ChatParams.urlChatNameSpace}-uuid=${ChatParams.visitorUuid}")
-        urlConnection.setRequestProperty("ct-webchat-client-id", ChatParams.visitorUuid)
-        urlConnection.connect()
-        val size = urlConnection.contentLength
-
-        if (size == -1) {
-            val contentDisposition = urlConnection.getHeaderField(contentDispositionKey)
-            if (contentDisposition == null) {
-                null
-            } else {
-                val startIndex = contentDisposition.indexOf(template) + template.length
-                val indexEndComma = contentDisposition.indexOf(",", startIndex)
-                val indexEndBracket = contentDisposition.indexOf("]", startIndex)
-                val alternativeSize = (when {
-                    startIndex != -1 && indexEndComma != -1 && indexEndBracket != -1 -> contentDisposition.substring(startIndex, min(indexEndComma, indexEndBracket))
-                    startIndex != -1 && indexEndComma != -1 && indexEndBracket == -1 -> contentDisposition.substring(startIndex, indexEndComma)
-                    startIndex != -1 && indexEndComma == -1 && indexEndBracket != -1 -> contentDisposition.substring(startIndex, indexEndBracket)
-                    startIndex != -1 && indexEndComma == -1 && indexEndBracket == -1 -> contentDisposition.substring(startIndex)
-                    else -> null
-                })?.toLong()
-                if (alternativeSize == 0L) {
-                    null
-                } else {
-                    alternativeSize
-                }
-            }
-        } else {
-            if (size == 0) {
-                null
-            } else {
-                size.toLong()
-            }
-        }
-    } catch (ex: Exception) {
-        null
-    }
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/helper/ui/screen.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/helper/ui/screen.kt b/chat/src/main/java/com/crafttalk/chat/presentation/helper/ui/screen.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/helper/ui/screen.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,12 +0,0 @@
-package com.crafttalk.chat.presentation.helper.ui
-
-import android.content.Context
-import android.graphics.Point
-import android.view.WindowManager
-
-fun getSizeScreenInPx(context: Context): Pair<Int, Int> {
-    val display = (context.getSystemService(Context.WINDOW_SERVICE) as WindowManager).defaultDisplay
-    val size = Point()
-    display.getSize(size)
-    return Pair(size.x, size.y)
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/base/BaseAdapter.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/base/BaseAdapter.kt b/chat/src/main/java/com/crafttalk/chat/presentation/base/BaseAdapter.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/base/BaseAdapter.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,45 +0,0 @@
-package com.crafttalk.chat.presentation.base
-
-import android.annotation.SuppressLint
-import androidx.recyclerview.widget.AsyncListDiffer
-import androidx.recyclerview.widget.DiffUtil
-import androidx.recyclerview.widget.RecyclerView
-
-abstract class BaseAdapter <T : BaseItem>(
-    private val differCallback: DiffUtil.ItemCallback<T>
-) : RecyclerView.Adapter<RecyclerView.ViewHolder>() {
-
-    constructor() : this(
-        object : DiffUtil.ItemCallback<T>() {
-            override fun areItemsTheSame(oldItem: T, newItem: T): Boolean {
-                return oldItem.isSame(newItem)
-            }
-
-            @SuppressLint("DiffUtilEquals")
-            override fun areContentsTheSame(oldItem: T, newItem: T): Boolean {
-                return oldItem == newItem
-            }
-        }
-    )
-
-    private val differ: AsyncListDiffer<T> = AsyncListDiffer(this, differCallback)
-
-    open var data: List<T>
-        get() = differ.currentList
-        set(value) {
-            differ.submitList(value.toList())
-        }
-
-    override fun onBindViewHolder(holder: RecyclerView.ViewHolder, position: Int) {
-        (holder as BaseViewHolder<T>).let {
-            it.bindTo(getItem(it, position))
-        }
-    }
-
-    override fun getItemCount() = data.size
-
-    open fun getItem(holder: BaseViewHolder<T>, position: Int) = data[position]
-
-    override fun getItemViewType(position: Int) = data[position].getLayout()
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/initialization/Chat.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/initialization/Chat.kt b/chat/src/main/java/com/crafttalk/chat/initialization/Chat.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/initialization/Chat.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,142 +0,0 @@
-package com.crafttalk.chat.initialization
-
-import android.content.Context
-import com.crafttalk.chat.R
-import com.crafttalk.chat.di.DaggerSdkComponent
-import com.crafttalk.chat.di.SdkComponent
-import com.crafttalk.chat.domain.entity.auth.Visitor
-import com.crafttalk.chat.domain.interactors.*
-import com.crafttalk.chat.utils.*
-import kotlinx.coroutines.CoroutineScope
-import kotlinx.coroutines.Dispatchers
-import kotlinx.coroutines.Job
-import kotlinx.coroutines.launch
-import java.util.*
-
-object Chat {
-
-    private val job = Job()
-    private val scopeIO = CoroutineScope(Dispatchers.IO + job)
-    private val scopeUI = CoroutineScope(Dispatchers.Main + job)
-
-    private var conditionInteractor: ConditionInteractor? = null
-    private var visitorInteractor: VisitorInteractor? = null
-    private var authInteractor: AuthInteractor? = null
-    private var notificationInteractor: NotificationInteractor? = null
-    private var personInteractor: PersonInteractor? = null
-    private var sdkComponent: SdkComponent? = null
-
-    internal fun getSdkComponent(): SdkComponent = sdkComponent ?: throw IllegalStateException("You must call the init method before going to the chat.")
-
-    fun setOnChatMessageListener(listener: ChatMessageListener) {
-        conditionInteractor?.setMessageListener(listener)
-    }
-
-    private fun initDI(context: Context) {
-        if (sdkComponent == null) {
-            sdkComponent = DaggerSdkComponent.builder()
-                .context(context)
-                .build()
-        }
-        conditionInteractor = ConditionInteractor(sdkComponent!!.getConditionRepository())
-        visitorInteractor = VisitorInteractor(sdkComponent!!.getVisitorRepository())
-        personInteractor = PersonInteractor(sdkComponent!!.getPersonRepository())
-        notificationInteractor = NotificationInteractor(sdkComponent!!.getNotificationRepository(), visitorInteractor!!)
-        authInteractor = AuthInteractor(sdkComponent!!.getAuthRepository(), visitorInteractor!!, conditionInteractor!!, personInteractor!!, notificationInteractor!!)
-    }
-
-    fun init(
-        context: Context,
-        urlChatScheme: String,
-        urlChatHost: String,
-        urlChatNameSpace: String,
-        authType: AuthType = AuthType.AUTH_WITHOUT_FORM,
-        operatorPreviewMode: OperatorPreviewMode = OperatorPreviewMode.CACHE,
-        operatorNameMode: OperatorNameMode = OperatorNameMode.IMMUTABLE,
-        clickableLinkMode: ClickableLinkMode = ClickableLinkMode.ALL,
-        firebasePushToken: String? = null,
-        localeLanguage: String = context.getString(R.string.com_crafttalk_chat_default_language),
-        localeCountry: String = context.getString(R.string.com_crafttalk_chat_default_country),
-        phonePatterns: Array<CharSequence> = context.resources.getTextArray(R.array.com_crafttalk_chat_phone_patterns),
-        uploadPoolMessagesTimeout: Long? = null,
-        fileProviderAuthorities: String? = null,
-        certificatePinning: String? = null,
-        fileConnectTimeout: Long? = null,
-        fileReadTimeout: Long? = null,
-        fileWriteTimeout: Long? = null,
-        fileCallTimeout: Long? = null
-    ) {
-        ChatParams.authMode = authType
-        ChatParams.urlChatScheme = urlChatScheme
-        ChatParams.urlChatHost = urlChatHost
-        ChatParams.urlChatNameSpace = urlChatNameSpace
-        ChatParams.operatorPreviewMode = operatorPreviewMode
-        ChatParams.operatorNameMode = operatorNameMode
-        ChatParams.clickableLinkMode = clickableLinkMode
-        ChatParams.firebasePushToken = firebasePushToken
-        ChatParams.locale = Locale(localeLanguage, localeCountry)
-        ChatParams.phonePatterns = phonePatterns
-        uploadPoolMessagesTimeout?.let { ChatParams.uploadPoolMessagesTimeout = it }
-        ChatParams.fileProviderAuthorities = fileProviderAuthorities
-        ChatParams.certificatePinning = certificatePinning
-        ChatParams.fileConnectTimeout = fileConnectTimeout
-        ChatParams.fileReadTimeout = fileReadTimeout
-        ChatParams.fileWriteTimeout = fileWriteTimeout
-        ChatParams.fileCallTimeout = fileCallTimeout
-        initDI(context)
-    }
-
-    fun setFirebasePushToken(firebasePushToken: String) {
-        ChatParams.firebasePushToken = firebasePushToken
-    }
-
-    fun setNewFieldsForRegistrationVisitor(fields: HashMap<String, Any>) {
-        ChatParams.addedFieldsForRegistrationVisitor = fields
-    }
-
-    fun createSession() {
-        conditionInteractor?.createSessionChat()
-    }
-
-    fun destroySession() {
-        conditionInteractor?.destroySessionChat()
-    }
-
-    fun wakeUp(visitor: Visitor?) {
-        conditionInteractor?.openApp()
-        authInteractor?.logIn(
-            visitor = visitor
-        )
-    }
-
-    fun wakeUp() {
-        conditionInteractor?.openApp()
-    }
-
-    fun drop() {
-        conditionInteractor?.closeApp()
-        conditionInteractor?.dropChat()
-    }
-
-    fun logOut(context: Context) {
-        scopeIO.launch {
-            authInteractor?.logOut(context.filesDir)
-        }
-    }
-
-    fun logOutWithUIActionAfter(context: Context, actionUIAfterLogOut: () -> Unit) {
-        scopeIO.launch {
-            authInteractor?.logOut(context.filesDir)
-            scopeUI.launch {
-                actionUIAfterLogOut()
-            }
-        }
-    }
-
-    fun logOutWithIOActionAfter(context: Context, actionIOAfterLogOut: () -> Unit) {
-        scopeIO.launch {
-            authInteractor?.logOut(context.filesDir)
-            actionIOAfterLogOut()
-        }
-    }
-}
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_background_download_file.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_background_download_file.xml b/chat/src/main/res/drawable/com_crafttalk_chat_background_download_file.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_background_download_file.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,18 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<selector xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <item android:state_pressed="true">
-        <shape android:shape="rectangle">
-            <corners android:radius="8dp" />
-            <solid android:color="@color/com_crafttalk_chat_gray_707070" />
-        </shape>
-    </item>
-
-    <item android:state_pressed="false">
-        <shape android:shape="rectangle">
-            <corners android:radius="8dp" />
-            <stroke android:color="@color/com_crafttalk_chat_gray_707070" android:width="1dp"/>
-        </shape>
-    </item>
-
-</selector>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/repository/IConfigurationRepository.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/repository/IConfigurationRepository.kt b/chat/src/main/java/com/crafttalk/chat/domain/repository/IConfigurationRepository.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/repository/IConfigurationRepository.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,7 +0,0 @@
-package com.crafttalk.chat.domain.repository
-
-import com.crafttalk.chat.domain.entity.configuration.NetworkResultConfiguration
-
-interface IConfigurationRepository {
-    fun getConfiguration(): NetworkResultConfiguration?
-}
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_ic_reply_message.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_ic_reply_message.xml b/chat/src/main/res/drawable/com_crafttalk_chat_ic_reply_message.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_ic_reply_message.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,9 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="24dp"
-    android:height="24dp"
-    android:viewportWidth="24"
-    android:viewportHeight="24">
-  <path
-      android:fillColor="#FF000000"
-      android:pathData="M10,9V5l-7,7 7,7v-4.1c5,0 8.5,1.6 11,5.1 -1,-5 -4,-10 -11,-11z"/>
-</vector>
Index: chat/src/main/java/com/crafttalk/chat/di/modules/chat/NetworkModule.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/di/modules/chat/NetworkModule.kt b/chat/src/main/java/com/crafttalk/chat/di/modules/chat/NetworkModule.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/di/modules/chat/NetworkModule.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,47 +0,0 @@
-package com.crafttalk.chat.di.modules.chat
-
-import com.crafttalk.chat.data.api.rest.ConfigurationApi
-import com.crafttalk.chat.data.api.rest.FileApi
-import com.crafttalk.chat.data.api.rest.MessageApi
-import com.crafttalk.chat.di.Base
-import com.crafttalk.chat.di.ChatScope
-import com.crafttalk.chat.di.Upload
-import com.crafttalk.chat.utils.ChatParams
-import com.google.gson.GsonBuilder
-import dagger.Module
-import dagger.Provides
-import okhttp3.OkHttpClient
-import retrofit2.Retrofit
-import retrofit2.converter.gson.GsonConverterFactory
-
-@Module
-class NetworkModule {
-
-    @Upload
-    @ChatScope
-    @Provides
-    fun provideRetrofitClientUpload(okHttpClient: OkHttpClient): Retrofit = Retrofit
-        .Builder()
-        .baseUrl("${ChatParams.urlChatScheme}://${ChatParams.urlChatHost}")
-        .client(okHttpClient)
-        .addConverterFactory(GsonConverterFactory.create(
-            GsonBuilder()
-                .setLenient()
-                .create()
-        ))
-        .build()
-
-    @ChatScope
-    @Provides
-    fun provideMessageApi(@Upload retrofit: Retrofit): MessageApi = retrofit.create(MessageApi::class.java)
-
-    @ChatScope
-    @Provides
-    fun provideFileApi(@Upload retrofit: Retrofit): FileApi = retrofit.create(FileApi::class.java)
-
-    @ChatScope
-    @Provides
-    fun provideConfigurationApi(@Base retrofit: Retrofit): ConfigurationApi = retrofit.create(
-        ConfigurationApi::class.java)
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/local/db/entity/PersonEntity.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/PersonEntity.kt b/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/PersonEntity.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/PersonEntity.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,12 +0,0 @@
-package com.crafttalk.chat.data.local.db.entity
-
-import androidx.room.ColumnInfo
-import androidx.room.Entity
-
-@Entity(tableName = "persons", primaryKeys = ["person_id"])
-data class PersonEntity(
-    @ColumnInfo(name = "person_id")
-    val personId: String,
-    @ColumnInfo(name = "person_preview")
-    val personPreview: String
-)
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_ic_image.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_ic_image.xml b/chat/src/main/res/drawable/com_crafttalk_chat_ic_image.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_ic_image.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,5 +0,0 @@
-<vector android:height="24dp" android:tint="#BDBDBD"
-    android:viewportHeight="24.0" android:viewportWidth="24.0"
-    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
-    <path android:fillColor="#FF000000" android:pathData="M21,19V5c0,-1.1 -0.9,-2 -2,-2H5c-1.1,0 -2,0.9 -2,2v14c0,1.1 0.9,2 2,2h14c1.1,0 2,-0.9 2,-2zM8.5,13.5l2.5,3.01L14.5,12l4.5,6H5l3.5,-4.5z"/>
-</vector>
Index: chat/src/main/res/menu/com_crafttalk_chat_options.xml
===================================================================
diff --git a/chat/src/main/res/menu/com_crafttalk_chat_options.xml b/chat/src/main/res/menu/com_crafttalk_chat_options.xml
deleted file mode 100644
--- a/chat/src/main/res/menu/com_crafttalk_chat_options.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,19 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<menu xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <item
-        android:id="@+id/image"
-        android:icon="@drawable/com_crafttalk_chat_ic_image"
-        android:title="@string/com_crafttalk_chat_bottom_sheet_file_viewer_image_from_gallery" />
-
-    <item
-        android:id="@+id/document"
-        android:icon="@drawable/com_crafttalk_chat_ic_document"
-        android:title="@string/com_crafttalk_chat_bottom_sheet_file_viewer_document_from_gallery" />
-
-    <item
-        android:id="@+id/camera"
-        android:icon="@drawable/com_crafttalk_chat_ic_camera"
-        android:title="@string/com_crafttalk_chat_bottom_sheet_file_viewer_image_from_camera" />
-
-</menu>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/entity/notification/NetworkCheckSubscription.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/entity/notification/NetworkCheckSubscription.kt b/chat/src/main/java/com/crafttalk/chat/domain/entity/notification/NetworkCheckSubscription.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/entity/notification/NetworkCheckSubscription.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,5 +0,0 @@
-package com.crafttalk.chat.domain.entity.notification
-
-class NetworkCheckSubscription(
-    val uuid: String
-)
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/entity/person/NetworkResultPersonPreview.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/entity/person/NetworkResultPersonPreview.kt b/chat/src/main/java/com/crafttalk/chat/domain/entity/person/NetworkResultPersonPreview.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/entity/person/NetworkResultPersonPreview.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,5 +0,0 @@
-package com.crafttalk.chat.domain.entity.person
-
-class NetworkResultPersonPreview(
-    val picture: String?
-)
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/utils/OperatorNameMode.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/utils/OperatorNameMode.kt b/chat/src/main/java/com/crafttalk/chat/utils/OperatorNameMode.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/utils/OperatorNameMode.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,6 +0,0 @@
-package com.crafttalk.chat.utils
-
-enum class OperatorNameMode {
-    IMMUTABLE,
-    ACTUAL
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/di/modules/init/GsonModule.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/di/modules/init/GsonModule.kt b/chat/src/main/java/com/crafttalk/chat/di/modules/init/GsonModule.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/di/modules/init/GsonModule.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,15 +0,0 @@
-package com.crafttalk.chat.di.modules.init
-
-import com.google.gson.Gson
-import dagger.Module
-import dagger.Provides
-import javax.inject.Singleton
-
-@Module
-class GsonModule {
-
-    @Provides
-    @Singleton
-    fun provideGson() : Gson = Gson()
-
-}
\ No newline at end of file
Index: chat/src/main/res/layout/com_crafttalk_chat_view_host.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_view_host.xml b/chat/src/main/res/layout/com_crafttalk_chat_view_host.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_view_host.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,138 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:background="#fff"
-    android:id="@+id/chat_layout">
-
-    <TextView
-        android:id="@+id/warningConnection"
-        android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        android:paddingHorizontal="20dp"
-        android:paddingVertical="15dp"
-        android:text="@string/com_crafttalk_chat_internet_connection_warning"
-        android:fontFamily="@font/com_crafttalk_chat_ubuntu_regular"
-        android:textFontWeight="400"
-        android:visibility="invisible"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        tools:visibility="gone" />
-
-    <TextView
-        android:id="@+id/infoChatState"
-        android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        android:paddingHorizontal="20dp"
-        android:paddingVertical="15dp"
-        android:text="@string/com_crafttalk_chat_stete_synchronization"
-        android:fontFamily="@font/com_crafttalk_chat_ubuntu_regular"
-        android:textFontWeight="400"
-        android:visibility="invisible"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        tools:visibility="visible" />
-
-    <ImageView
-        android:id="@+id/search"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:src="@drawable/com_crafttalk_chat_ic_search"
-        app:layout_constraintTop_toTopOf="@+id/infoChatState"
-        app:layout_constraintBottom_toBottomOf="@+id/infoChatState"
-        app:layout_constraintEnd_toEndOf="parent"
-        android:paddingEnd="16dp" />
-
-    <include
-        android:id="@+id/search_place"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:visibility="gone"
-        layout="@layout/com_crafttalk_chat_include_search"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        tools:visibility="gone" />
-
-    <androidx.constraintlayout.widget.Barrier
-        android:id="@+id/br_chat_state"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        app:barrierDirection="bottom"
-        app:constraint_referenced_ids="warningConnection,infoChatState,search_place" />
-
-    <View
-        android:id="@+id/upper_limiter"
-        android:layout_width="match_parent"
-        android:layout_height="2dp"
-        app:layout_constraintTop_toBottomOf="@id/br_chat_state" />
-
-    <include
-        android:id="@+id/chat_place"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        layout="@layout/com_crafttalk_chat_layout_chat"
-        android:visibility="gone"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/upper_limiter"
-        app:layout_constraintBottom_toBottomOf="parent"
-        tools:visibility="visible" />
-
-    <include
-        android:id="@+id/auth_form"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        layout="@layout/com_crafttalk_chat_layout_auth"
-        android:visibility="gone"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/upper_limiter"
-        app:layout_constraintBottom_toBottomOf="parent"
-        tools:visibility="gone" />
-
-    <include
-        android:id="@+id/warning"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        layout="@layout/com_crafttalk_chat_layout_warning"
-        android:visibility="gone"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/upper_limiter"
-        app:layout_constraintBottom_toBottomOf="parent"
-        tools:visibility="gone" />
-
-    <include
-        android:id="@+id/user_feedback"
-        android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        layout="@layout/com_crafttalk_chat_layout_user_feedback"
-        android:visibility="gone"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintBottom_toBottomOf="parent"
-        tools:visibility="gone" />
-
-    <ProgressBar
-        android:id="@+id/loading"
-        android:layout_width="80dp"
-        android:layout_height="280dp"
-        android:indeterminateDrawable="@drawable/com_crafttalk_chat_spinner_ring"
-        android:indeterminateOnly="true"
-        android:layout_centerVertical="true"
-        android:layout_centerHorizontal="true"
-        android:paddingTop="200dp"
-        android:visibility="gone"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintBottom_toBottomOf="parent"
-        tools:visibility="gone" />
-
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: chat/src/main/res/layout/com_crafttalk_chat_include_server_message_info.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_include_server_message_info.xml b/chat/src/main/res/layout/com_crafttalk_chat_include_server_message_info.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_include_server_message_info.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,48 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:paddingTop="@dimen/com_crafttalk_chat_message_info_margin_top">
-
-    <ImageView
-        android:id="@+id/author_preview"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintStart_toStartOf="parent"
-        tools:src="@drawable/com_crafttalk_chat_ic_operator"
-        tools:visibility="visible" />
-
-    <TextView
-        android:id="@+id/author_name"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:fontFamily="@font/com_crafttalk_chat_ubuntu_regular"
-        android:textFontWeight="600"
-        android:gravity="center_vertical"
-        android:layout_marginStart="4dp"
-        app:layout_goneMarginStart="0dp"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintStart_toEndOf="@id/author_preview"
-        tools:text="Бот"
-        tools:visibility="visible" />
-
-    <TextView
-        android:id="@+id/time"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:fontFamily="@font/com_crafttalk_chat_ubuntu_regular"
-        android:textFontWeight="600"
-        android:gravity="center_vertical"
-        android:layout_marginStart="4dp"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintStart_toEndOf="@id/author_name"
-        tools:text="10:30"
-        tools:visibility="visible" />
-
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderOperatorImageMessage.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderOperatorImageMessage.kt b/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderOperatorImageMessage.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderOperatorImageMessage.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,82 +0,0 @@
-package com.crafttalk.chat.presentation.holders
-
-import android.content.res.ColorStateList
-import android.view.View
-import android.view.ViewGroup
-import android.widget.ImageView
-import android.widget.TextView
-import androidx.core.view.ViewCompat
-import com.crafttalk.chat.R
-import com.crafttalk.chat.domain.entity.file.TypeFile
-import com.crafttalk.chat.presentation.base.BaseViewHolder
-import com.crafttalk.chat.presentation.helper.extensions.*
-import com.crafttalk.chat.presentation.model.ImageMessageItem
-import com.crafttalk.chat.utils.ChatAttr
-
-class HolderOperatorImageMessage(
-    view: View,
-    private val download: (fileName: String, fileUrl: String, fileType: TypeFile) -> Unit,
-    private val updateData: (id: String, height: Int, width: Int) -> Unit,
-    private val clickHandler: (imageName: String, imageUrl: String) -> Unit
-) : BaseViewHolder<ImageMessageItem>(view), View.OnClickListener {
-    private val contentContainer: View? = view.findViewById(R.id.content_container)
-    private val warningContainer: ViewGroup? = view.findViewById(R.id.server_image_warning)
-
-    private val img: ImageView? = view.findViewById(R.id.server_image)
-    private val downloadImage: TextView? = view.findViewById(R.id.download_file)
-    private val authorName: TextView? = view.findViewById(R.id.author_name)
-    private val authorPreview: ImageView? = view.findViewById(R.id.author_preview)
-    private val time: TextView? = view.findViewById(R.id.time)
-    private val status: ImageView? = view.findViewById(R.id.status)
-    private val date: TextView? = view.findViewById(R.id.date)
-
-    private var imageUrl: String? = null
-    private var imageName: String? = null
-    private var failLoading: Boolean = false
-
-    init {
-        img?.setOnClickListener(this)
-        downloadImage?.setOnClickListener(this)
-    }
-
-    override fun onClick(view: View) {
-        when (view.id) {
-            R.id.server_image -> {
-                if (!failLoading) {
-                    val name = imageName ?: return
-                    val url = imageUrl ?: return
-                    clickHandler(name, url)
-                }
-            }
-            R.id.download_file -> {
-                val name = imageName ?: return
-                val url = imageUrl ?: return
-                download(name, url, TypeFile.IMAGE)
-            }
-        }
-    }
-
-    override fun bindTo(item: ImageMessageItem) {
-        imageUrl = item.image.url
-        imageName = item.image.name.toString()
-        failLoading = item.image.failLoading
-
-        date?.setDate(item)
-        // set content
-        authorName?.setAuthor(item)
-        authorPreview?.setAuthorIcon(item.authorPreview)
-        time?.setTime(item)
-        status?.setStatusMessage(item)
-        img?.apply {
-            settingMediaFile()
-            loadMediaFile(item.id, item.image, updateData, false, false, warningContainer)
-        }
-        downloadImage?.settingDownloadBtn(false, failLoading)
-        // set bg
-        contentContainer?.apply {
-            setBackgroundResource(ChatAttr.getInstance().bgOperatorMessageResId)
-            ViewCompat.setBackgroundTintList(this, ColorStateList.valueOf(ChatAttr.getInstance().colorBackgroundOperatorMediaFileMessage))
-        }
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/transfer/TransferFileInfo.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/transfer/TransferFileInfo.kt b/chat/src/main/java/com/crafttalk/chat/domain/transfer/TransferFileInfo.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/transfer/TransferFileInfo.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,8 +0,0 @@
-package com.crafttalk.chat.domain.transfer
-
-// временное решение, пока не добавят поля size, height, width в NetworkMessage
-data class TransferFileInfo(
-    val size: Long? = null,
-    val height: Int? = null,
-    val width: Int? = null
-)
\ No newline at end of file
Index: chat/src/main/res/layout/com_crafttalk_chat_item_buttons.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_item_buttons.xml b/chat/src/main/res/layout/com_crafttalk_chat_item_buttons.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_item_buttons.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout
-    android:id="@+id/item_buttons"
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:orientation="horizontal"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content" />
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/api/rest/ConfigurationApi.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/api/rest/ConfigurationApi.kt b/chat/src/main/java/com/crafttalk/chat/data/api/rest/ConfigurationApi.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/api/rest/ConfigurationApi.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,16 +0,0 @@
-package com.crafttalk.chat.data.api.rest
-
-import com.crafttalk.chat.domain.entity.configuration.NetworkResultConfiguration
-import com.crafttalk.chat.utils.ChatParams
-import retrofit2.Call
-import retrofit2.http.*
-
-interface ConfigurationApi {
-
-    @GET("configuration/{clientId}")
-    fun getConfiguration(
-        @Header("Cookie") cookie: String = "webchat-${ChatParams.urlChatNameSpace}-uuid=${ChatParams.visitorUuid}",
-        @Header("ct-webchat-client-id") uuid: String = ChatParams.visitorUuid,
-        @Path("clientId") clientId: String = ChatParams.urlChatNameSpace!!
-    ): Call<NetworkResultConfiguration>
-}
\ No newline at end of file
Index: chat/src/main/res/layout/com_crafttalk_chat_include_search_switch.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_include_search_switch.xml b/chat/src/main/res/layout/com_crafttalk_chat_include_search_switch.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_include_search_switch.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,44 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:paddingHorizontal="16dp"
-    android:paddingVertical="8dp">
-
-    <TextView
-        android:id="@+id/search_coincidence"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintBottom_toBottomOf="parent"
-        tools:text="10 из 100" />
-
-    <ImageView
-        android:id="@+id/search_top"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:src="@drawable/com_crafttalk_chat_ic_search_top"
-        android:backgroundTint="@color/com_crafttalk_chat_blue_005cb2"
-        android:layout_marginEnd="12dp"
-        android:padding="8dp"
-        android:enabled="false"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintEnd_toStartOf="@id/search_bottom" />
-
-    <ImageView
-        android:id="@+id/search_bottom"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:src="@drawable/com_crafttalk_chat_ic_search_bottom"
-        android:backgroundTint="@color/com_crafttalk_chat_blue_005cb2"
-        android:padding="8dp"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintEnd_toEndOf="parent" />
-
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/repository/VisitorRepository.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/repository/VisitorRepository.kt b/chat/src/main/java/com/crafttalk/chat/data/repository/VisitorRepository.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/repository/VisitorRepository.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,49 +0,0 @@
-package com.crafttalk.chat.data.repository
-
-import android.content.SharedPreferences
-import com.crafttalk.chat.domain.entity.auth.Visitor
-import com.crafttalk.chat.domain.repository.IVisitorRepository
-import javax.inject.Inject
-
-class VisitorRepository
-@Inject constructor(
-    private val pref: SharedPreferences
-) : IVisitorRepository {
-
-    private var visitor: Visitor? = null
-
-    override fun getVisitorFromClient(): Visitor? = visitor
-
-    override fun setVisitorFromClient(visitor: Visitor?) {
-        this.visitor = visitor
-    }
-
-    override fun getVisitorFromSharedPreferences(): Visitor? {
-        return if (pref.getBoolean(FIELD_IS_VISITOR, false)) {
-            val json = pref.getString(FIELD_VISITOR, "")
-            Visitor.getVisitorFromJson(json)
-        } else {
-            null
-        }
-    }
-
-    override fun saveVisitor(visitor: Visitor) {
-        val prefEditor = pref.edit()
-        prefEditor.putString(FIELD_VISITOR, visitor.getJsonObject().toString())
-        prefEditor.putBoolean(FIELD_IS_VISITOR, true)
-        prefEditor.apply()
-    }
-
-    override fun deleteVisitor() {
-        val prefEditor = pref.edit()
-        prefEditor.remove(FIELD_VISITOR)
-        prefEditor.putBoolean(FIELD_IS_VISITOR, false)
-        prefEditor.apply()
-    }
-
-    companion object {
-        private const val FIELD_VISITOR = "visitor"
-        private const val FIELD_IS_VISITOR = "isVisitor"
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/ChatViewModel.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/ChatViewModel.kt b/chat/src/main/java/com/crafttalk/chat/presentation/ChatViewModel.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/ChatViewModel.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,525 +0,0 @@
-package com.crafttalk.chat.presentation
-
-import android.content.Context
-import android.util.Log
-import androidx.lifecycle.LiveData
-import androidx.lifecycle.MutableLiveData
-import androidx.paging.LivePagedListBuilder
-import androidx.paging.PagedList
-import com.crafttalk.chat.R
-import com.crafttalk.chat.domain.entity.auth.Visitor
-import com.crafttalk.chat.domain.entity.file.File as DomainFile
-import java.io.File as IOFile
-import com.crafttalk.chat.domain.entity.file.TypeFile
-import com.crafttalk.chat.domain.entity.internet.InternetConnectionState
-import com.crafttalk.chat.domain.interactors.*
-import com.crafttalk.chat.presentation.base.BaseViewModel
-import com.crafttalk.chat.presentation.feature.view_picture.ShowImageDialog
-import com.crafttalk.chat.presentation.helper.groupers.groupPageByDate
-import com.crafttalk.chat.presentation.helper.mappers.messageModelMapper
-import com.crafttalk.chat.presentation.helper.mappers.messageSearchMapper
-import com.crafttalk.chat.presentation.model.MessageModel
-import com.crafttalk.chat.utils.ChatAttr
-import com.crafttalk.chat.utils.ChatParams
-import kotlinx.coroutines.Job
-import kotlinx.coroutines.delay
-import javax.inject.Inject
-
-class ChatViewModel
-@Inject constructor(
-    private val authChatInteractor: AuthInteractor,
-    private val messageInteractor: MessageInteractor,
-    private val searchInteractor: SearchInteractor,
-    private val fileInteractor: FileInteractor,
-    private val conditionInteractor: ConditionInteractor,
-    private val feedbackInteractor: FeedbackInteractor,
-    private val configurationInteractor: ConfigurationInteractor,
-    private val context: Context
-) : BaseViewModel() {
-
-    var currentReadMessageTime = conditionInteractor.getCurrentReadMessageTime()
-    var isAllHistoryLoaded = conditionInteractor.checkFlagAllHistoryLoaded()
-    var initialLoadKey = conditionInteractor.getInitialLoadKey()
-    private var initSearchInitialLoadKey = initialLoadKey
-
-    var countUnreadMessages = MutableLiveData<Int>()
-    val scrollToDownVisible = MutableLiveData(false)
-    val feedbackContainerVisible = MutableLiveData(false)
-    val openDocument = MutableLiveData<Pair<IOFile?, Boolean>?>()
-    val mergeHistoryBtnVisible = MutableLiveData(false)
-    val mergeHistoryProgressVisible = MutableLiveData(false)
-
-    var searchText: String? = null
-    val showSearchNavigate: MutableLiveData<Boolean> = MutableLiveData(false)
-    val enabledSearchTop: MutableLiveData<Boolean> = MutableLiveData(false)
-    val enabledSearchBottom: MutableLiveData<Boolean> = MutableLiveData(false)
-    val searchCoincidenceText: MutableLiveData<String> = MutableLiveData()
-    val searchScrollToPosition: MutableLiveData<SearchItem?> = MutableLiveData()
-
-    val uploadMessagesForUser: MutableLiveData<LiveData<PagedList<MessageModel>>> = MutableLiveData()
-    val replyMessage: MutableLiveData<MessageModel?> = MutableLiveData(null)
-    val replyMessagePosition: MutableLiveData<Int?> = MutableLiveData(null)
-
-    private fun uploadMessages() {
-        val config = PagedList.Config.Builder()
-            .setPageSize(ChatParams.pageSize)
-            .build()
-        val dataSource = messageInteractor.getAllMessages()
-            .map { (messageModelMapper(it, context)) }
-            .mapByPage { groupPageByDate(it) }
-        val pagedListBuilder: LivePagedListBuilder<Int, MessageModel>  = LivePagedListBuilder(
-            dataSource,
-            config
-        ).setBoundaryCallback(object : PagedList.BoundaryCallback<MessageModel>() {
-            override fun onItemAtEndLoaded(itemAtEnd: MessageModel) {
-                super.onItemAtEndLoaded(itemAtEnd)
-                if (!isAllHistoryLoaded) {
-                    uploadOldMessages()
-                }
-            }
-        }).setInitialLoadKey(initialLoadKey)
-        uploadMessagesForUser.postValue(pagedListBuilder.build())
-    }
-    private fun syncMessagesAcrossDevices(indexFirstUnreadMessage: Int) {
-        initialLoadKey = indexFirstUnreadMessage
-        uploadMessages()
-    }
-    private fun deliverMessagesToUser() {
-        if (uploadMessagesForUser.value == null) {
-            uploadMessages()
-        }
-    }
-    private val eventStateHistoryLoaded: (isAllHistoryLoaded: Boolean) -> Unit = {
-        isAllHistoryLoaded = it
-    }
-    private val sync: suspend () -> Unit = {
-        launchUI { chatStateListener?.startSynchronization() }
-        displayableUIObject.postValue(DisplayableUIObject.SYNCHRONIZATION)
-        Log.d("TEST_DATA_LOP_S", "sync")
-        messageInteractor.syncMessages(
-            updateReadPoint = updateCurrentReadMessageTime,
-            syncMessagesAcrossDevices = ::syncMessagesAcrossDevices,
-            eventStateHistoryLoaded = eventStateHistoryLoaded,
-            updateSearchMessagePosition = searchInteractor::updateMessagePosition
-        )
-    }
-    private val updateCurrentReadMessageTime: (List<Pair<String, Long>>) -> Boolean = { newTimeMarks ->
-        Log.d("TEST_DATA_LOP", "updateCurrentReadMessageTime 1 newTimeMark - $newTimeMarks; currentReadMessageTime - ${currentReadMessageTime}")
-        newTimeMarks.forEach { pair ->
-            val id = pair.first
-            val time = pair.second
-            if (time > currentReadMessageTime) {
-                launchIO {
-                    Log.d("TEST_DATA_LOP", "readMessage id - ${id}; time - ${time};")
-                    messageInteractor.readMessage(
-                        messageId = id
-                    )
-                }
-            }
-        }
-        val maxTime = newTimeMarks.maxByOrNull { it.second }?.second
-        Log.d("TEST_DATA_LOP", "updateCurrentReadMessageTime 2 currentReadMessageTime - $currentReadMessageTime; maxTime - $maxTime;")
-        if (maxTime != null && maxTime > currentReadMessageTime) {
-            currentReadMessageTime = maxTime
-            Log.d("TEST_DATA_LOP", "updateCurrentReadMessageTime 3 true;")
-            true
-        } else {
-            Log.d("TEST_DATA_LOP", "updateCurrentReadMessageTime 4 false;")
-            false
-        }
-    }
-
-    val internetConnectionState: MutableLiveData<InternetConnectionState> = MutableLiveData()
-    val displayableUIObject = MutableLiveData(DisplayableUIObject.NOTHING)
-    var clientInternetConnectionListener: ChatInternetConnectionListener? = null
-    var mergeHistoryListener: MergeHistoryListener = object : MergeHistoryListener {
-        override fun showDialog() {
-            mergeHistoryProgressVisible.postValue(false)
-            mergeHistoryBtnVisible.postValue(true)
-        }
-        override fun startMerge() {
-            mergeHistoryBtnVisible.postValue(false)
-            mergeHistoryProgressVisible.postValue(true)
-        }
-        override fun endMerge() {
-            mergeHistoryProgressVisible.postValue(false)
-            mergeHistoryBtnVisible.postValue(false)
-        }
-    }
-    var chatStateListener: ChatStateListener? = null
-    private val internetConnectionListener = object : ChatInternetConnectionListener {
-        override fun connect() {
-            launchUI { clientInternetConnectionListener?.connect() }
-            internetConnectionState.postValue(InternetConnectionState.HAS_INTERNET)
-        }
-        override fun failConnect() {
-            launchUI { clientInternetConnectionListener?.failConnect() }
-            internetConnectionState.postValue(InternetConnectionState.NO_INTERNET)
-        }
-        override fun lossConnection() {
-            launchUI { clientInternetConnectionListener?.lossConnection() }
-            internetConnectionState.postValue(InternetConnectionState.NO_INTERNET)
-        }
-        override fun reconnect() {
-            launchUI { clientInternetConnectionListener?.reconnect() }
-            internetConnectionState.postValue(InternetConnectionState.RECONNECT)
-        }
-    }
-    private val chatEventListener = object : ChatEventListener {
-        override fun operatorStartWriteMessage() { displayableUIObject.postValue(DisplayableUIObject.OPERATOR_START_WRITE_MESSAGE) }
-        override fun operatorStopWriteMessage()  { displayableUIObject.postValue(DisplayableUIObject.OPERATOR_STOP_WRITE_MESSAGE) }
-        override fun finishDialog() { feedbackContainerVisible.postValue(true) }
-        override fun showUploadHistoryBtn() { mergeHistoryListener.showDialog() }
-        override fun synchronized() {
-            launchUI { chatStateListener?.endSynchronization() }
-            displayableUIObject.postValue(DisplayableUIObject.CHAT)
-        }
-    }
-    var uploadFileListener: UploadFileListener? = null
-
-    init {
-        conditionInteractor.setInternetConnectionListener(internetConnectionListener)
-        conditionInteractor.goToChatScreen()
-        launchIO {
-            configurationInteractor.getConfiguration()
-        }
-        messageInteractor.setUpdateSearchMessagePosition(searchInteractor::updateMessagePosition)
-    }
-
-    fun onStartChatView(visitor: Visitor?) {
-        launchIO {
-            messageInteractor.clearDbIfMessagesDuplicated(context)
-            launchUI {
-                delay(ChatAttr.getInstance().timeDelayed)
-                authChatInteractor.logIn(
-                    visitor = visitor,
-                    successAuthUi = ::deliverMessagesToUser,
-                    sync = sync,
-                    failAuthUi = { displayableUIObject.postValue(DisplayableUIObject.WARNING) },
-                    firstLogInWithForm = { displayableUIObject.value = DisplayableUIObject.FORM_AUTH },
-                    updateCurrentReadMessageTime = updateCurrentReadMessageTime,
-                    chatEventListener = chatEventListener
-                )
-            }
-        }
-    }
-
-    fun onStop() {
-        currentReadMessageTime.run(conditionInteractor::saveCurrentReadMessageTime)
-        countUnreadMessages.value?.run(conditionInteractor::saveCountUnreadMessages)
-    }
-
-    override fun onCleared() {
-        super.onCleared()
-        conditionInteractor.leaveChatScreen()
-        removeAllInfoMessages()
-    }
-
-    fun registration(vararg args: String) {
-        launchIO {
-            messageInteractor.clearDbIfMessagesDuplicated(context)
-            launchUI {
-                delay(ChatAttr.getInstance().timeDelayed)
-                authChatInteractor.logIn(
-                    visitor = Visitor.map(args, ChatParams.addedFieldsForRegistrationVisitor),
-                    successAuthUi = ::deliverMessagesToUser,
-                    sync = sync,
-                    failAuthUi = { displayableUIObject.postValue(DisplayableUIObject.WARNING) },
-                    updateCurrentReadMessageTime = updateCurrentReadMessageTime,
-                    chatEventListener = chatEventListener
-                )
-            }
-        }
-    }
-
-    fun reload() {
-        launchIO {
-            messageInteractor.clearDbIfMessagesDuplicated(context)
-            launchUI {
-                delay(ChatAttr.getInstance().timeDelayed)
-                authChatInteractor.logIn(
-                    successAuthUi = ::deliverMessagesToUser,
-                    sync = sync,
-                    failAuthUi = { displayableUIObject.postValue(DisplayableUIObject.WARNING) },
-                    updateCurrentReadMessageTime = updateCurrentReadMessageTime,
-                    chatEventListener = chatEventListener
-                )
-            }
-        }
-    }
-
-    fun uploadOldMessages(uploadHistoryComplete: () -> Unit = {}, executeAnyway: Boolean = false) {
-        launchIO {
-            messageInteractor.uploadHistoryMessages(
-                eventStateHistoryLoaded = eventStateHistoryLoaded,
-                uploadHistoryComplete = uploadHistoryComplete,
-                updateSearchMessagePosition = searchInteractor::updateMessagePosition,
-                executeAnyway = executeAnyway
-            )
-        }
-    }
-
-    fun downloadOrOpenDocument(
-        id: String,
-        documentName: String,
-        documentUrl: String
-    ) {
-        launchIO {
-            fileInteractor.downloadDocument(
-                id = id,
-                documentName = documentName,
-                documentUrl = documentUrl,
-                directory = context.filesDir,
-                openDocument = { documentFile ->
-                    delay(ChatAttr.getInstance().delayDownloadDocument)
-                    openDocument.postValue(Pair(documentFile, true))
-                },
-                downloadedFail = {
-                    openDocument.postValue(Pair(null, false))
-                }
-            )
-        }
-    }
-
-    fun openImage(imageName: String, imageUrl: String, downloadFun: (fileName: String, fileUrl: String, fileType: TypeFile) -> Unit) {
-        ShowImageDialog.Builder(context)
-            .setName(imageName)
-            .setUrl(imageUrl)
-            .setType(TypeFile.IMAGE)
-            .setFunDownload(downloadFun)
-            .show()
-    }
-
-    fun openGif(gifName: String, gifUrl: String, downloadFun: (fileName: String, fileUrl: String, fileType: TypeFile) -> Unit) {
-        ShowImageDialog.Builder(context)
-            .setName(gifName)
-            .setUrl(gifUrl)
-            .setType(TypeFile.GIF)
-            .setFunDownload(downloadFun)
-            .show()
-    }
-
-    fun selectAction(messageId: String, actionId: String) {
-        launchIO {
-            messageInteractor.selectActionInMessage(messageId, actionId)
-        }
-    }
-
-    fun selectButton(messageId: String, actionId: String, buttonId: String) {
-        launchIO {
-            messageInteractor.selectButtonInMessage(messageId, actionId, buttonId)
-        }
-    }
-
-    fun selectButtonInWidget(actionId: String) {
-        launchIO {
-            messageInteractor.selectButtonInWidget(actionId)
-        }
-    }
-
-    fun selectReplyMessage(messageId: String) {
-        launchIO {
-            replyMessagePosition.postValue(messageInteractor.getCountMessagesInclusiveTimestampById(messageId))
-        }
-    }
-
-    fun giveFeedbackOnOperator(countStars: Int) {
-        launchIO {
-            feedbackInteractor.giveFeedbackOnOperator(countStars)
-        }
-    }
-
-    fun updateData(id: String, height: Int, width: Int) {
-        launchIO {
-            messageInteractor.updateSizeMessage(id, height, width)
-        }
-    }
-
-    fun sendMessage(message: String, repliedMessageId: String?) {
-        launchIO {
-            messageInteractor.sendMessage(
-                message = message,
-                repliedMessageId = repliedMessageId
-            )
-        }
-    }
-
-    fun sendFile(file: DomainFile) {
-        launchIO { fileInteractor.uploadFile(file) { responseCode, responseMessage ->
-            uploadFileListener?.let { listener -> handleUploadFile(listener, responseCode, responseMessage) }
-        }}
-    }
-
-    fun sendFiles(fileList: List<DomainFile>) {
-        launchIO { fileInteractor.uploadFiles(fileList) { responseCode, responseMessage ->
-            uploadFileListener?.let { listener -> handleUploadFile(listener, responseCode, responseMessage) }
-        }}
-    }
-
-    fun uploadSearchMessages(searchText: String, currentSearchItem: SearchItem?): LiveData<PagedList<MessageModel>> {
-        val config = PagedList.Config.Builder()
-            .setPageSize(ChatParams.pageSize)
-            .build()
-        val dataSource = messageInteractor.getAllMessages()
-            .map { (messageModelMapper(it, context)) }
-            .map { messageSearchMapper(it, searchText.trim(), currentSearchItem, searchInteractor.getAllSearchedItems()) }
-            .mapByPage { groupPageByDate(it) }
-        val pagedListBuilder: LivePagedListBuilder<Int, MessageModel>  = LivePagedListBuilder(
-            dataSource,
-            config
-        ).setBoundaryCallback(object : PagedList.BoundaryCallback<MessageModel>() {
-            override fun onItemAtEndLoaded(itemAtEnd: MessageModel) {
-                super.onItemAtEndLoaded(itemAtEnd)
-                if (!isAllHistoryLoaded) {
-                    uploadOldMessages()
-                }
-            }
-        }).setInitialLoadKey(initSearchInitialLoadKey)
-        return pagedListBuilder.build()
-    }
-
-    private var lastSearchJob: Job? = null
-
-    fun onSearchClick(searchText: String, searchStart: () -> Unit) {
-        if (lastSearchJob?.isActive == true) {
-            lastSearchJob?.cancel()
-        }
-        lastSearchTopJob?.cancel()
-        if (searchText.isEmpty()) {
-            showSearchNavigate.postValue(false)
-            enabledSearchTop.postValue(false)
-            enabledSearchBottom.postValue(false)
-            searchCoincidenceText.postValue("")
-            searchScrollToPosition.postValue(null)
-            searchInteractor.cancelSearch()
-            return
-        }
-        lastSearchJob = launchIO {
-            this.searchText = searchText
-            delay(1000)
-            val searchItem = searchInteractor.preloadMessages(searchText.trim()) {
-                launchUI { searchStart() }
-            }
-            if (searchItem == null) {
-                searchCoincidenceText.postValue(
-                    context.resources.getString(
-                        R.string.com_crafttalk_chat_coincidence_not_found
-                    )
-                )
-                showSearchNavigate.postValue(false)
-                enabledSearchTop.postValue(false)
-                enabledSearchBottom.postValue(false)
-                searchScrollToPosition.postValue(null)
-            } else {
-                initSearchInitialLoadKey = searchItem.scrollPosition ?: initialLoadKey
-                searchCoincidenceText.postValue(
-                    context.resources.getString(
-                        R.string.com_crafttalk_chat_coincidence,
-                        searchItem.searchPosition,
-                        searchItem.allCount
-                    )
-                )
-                enabledSearchTop.postValue(searchItem.allCount != 1)
-                enabledSearchBottom.postValue(searchItem.searchPosition != 1)
-                showSearchNavigate.postValue(searchItem.allCount != 1)
-                searchScrollToPosition.postValue(searchItem)
-            }
-        }
-    }
-
-    private var lastSearchTopJob: Job? = null
-
-    fun onSearchTopClick() {
-        if (lastSearchTopJob?.isActive == true) return
-        lastSearchTopJob = launchIO {
-            val searchItem = searchInteractor.onSearchTopClick()
-            if (searchItem == null) {
-                showSearchNavigate.postValue(true)
-                enabledSearchTop.postValue(false)
-                enabledSearchBottom.postValue(true)
-            } else {
-                initSearchInitialLoadKey = searchItem.scrollPosition ?: initialLoadKey
-                searchCoincidenceText.postValue(
-                    context.resources.getString(
-                        R.string.com_crafttalk_chat_coincidence,
-                        searchItem.searchPosition,
-                        searchItem.allCount
-                    )
-                )
-                enabledSearchTop.postValue(!searchItem.isLast)
-                enabledSearchBottom.postValue(true)
-                showSearchNavigate.postValue(true)
-                searchScrollToPosition.postValue(searchItem)
-            }
-        }
-    }
-
-    fun onSearchBottomClick() {
-        val searchItem = searchInteractor.onSearchBottomClick()
-        if (searchItem == null) {
-            showSearchNavigate.postValue(true)
-            enabledSearchTop.postValue(true)
-            enabledSearchBottom.postValue(false)
-        } else {
-            initSearchInitialLoadKey = searchItem.scrollPosition ?: initialLoadKey
-            searchCoincidenceText.postValue(
-                context.resources.getString(
-                    R.string.com_crafttalk_chat_coincidence,
-                    searchItem.searchPosition,
-                    searchItem.allCount
-                )
-            )
-            enabledSearchTop.postValue(true)
-            enabledSearchBottom.postValue(!searchItem.isLast)
-            showSearchNavigate.postValue(true)
-            searchScrollToPosition.postValue(searchItem)
-        }
-    }
-
-    fun onSearchCancel() {
-        lastSearchJob?.cancel()
-        lastSearchTopJob?.cancel()
-        initSearchInitialLoadKey = initialLoadKey
-        searchText = null
-        showSearchNavigate.postValue(false)
-        enabledSearchTop.postValue(false)
-        enabledSearchBottom.postValue(false)
-        searchCoincidenceText.postValue("")
-        searchScrollToPosition.postValue(null)
-        uploadMessages()
-        searchInteractor.cancelSearch()
-    }
-
-    fun readMessage(messageModel: MessageModel?) {
-        messageModel ?: return
-
-        val isReadNewMessage = updateCurrentReadMessageTime(
-            listOf(Pair(messageModel.id, messageModel.timestamp))
-        )
-        Log.d("TEST_DATA_LOP", "VM readMessage 2 isReadNewMessage - $isReadNewMessage; messageModel - $messageModel;")
-        if (isReadNewMessage) {
-            updateCountUnreadMessages()
-        }
-    }
-
-    fun updateCountUnreadMessages(timestampLastMessage: Long? = null, actionUiAfter: (Int) -> Unit = {}) {
-        launchIO {
-            val unreadMessagesCount = messageInteractor.getCountUnreadMessages(currentReadMessageTime, timestampLastMessage)
-            unreadMessagesCount?.run(countUnreadMessages::postValue)
-            launchUI {
-                unreadMessagesCount?.run(actionUiAfter)
-            }
-        }
-    }
-
-    private fun removeAllInfoMessages() {
-        launchIO {
-            messageInteractor.removeAllInfoMessages()
-        }
-    }
-
-    companion object {
-        const val MAX_COUNT_MESSAGES_NEED_SCROLLED_BEFORE_APPEARANCE_BTN_SCROLL = 1
-        const val DELAY_RENDERING_SCROLL_BTN = 100L
-    }
-}
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_background_item_simple_user_message.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_background_item_simple_user_message.xml b/chat/src/main/res/drawable/com_crafttalk_chat_background_item_simple_user_message.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_background_item_simple_user_message.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<shape
-    android:shape="rectangle"
-    xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <solid android:color="@color/com_crafttalk_chat_default_color_bg_user_message"/>
-    <corners android:topLeftRadius="5dp" android:topRightRadius="5dp" android:bottomLeftRadius="5dp"/>
-</shape>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkKeyboard.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkKeyboard.kt b/chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkKeyboard.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkKeyboard.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,25 +0,0 @@
-package com.crafttalk.chat.domain.entity.message
-
-import com.crafttalk.chat.data.local.db.entity.KeyboardEntity
-import com.google.gson.annotations.SerializedName
-
-data class NetworkKeyboard (
-
-    @SerializedName(value = "buttons")
-    val buttons: List<List<NetworkButton>>
-
-) {
-
-    companion object {
-
-        fun map(keyboardEntity: KeyboardEntity): NetworkKeyboard {
-            val buttons: MutableList<List<NetworkButton>> = mutableListOf()
-            keyboardEntity.buttons.forEach { horizontalButtons ->
-                buttons.add(horizontalButtons.map { NetworkButton.map(it) })
-            }
-            return NetworkKeyboard(
-                buttons = buttons
-            )
-        }
-    }
-}
\ No newline at end of file
Index: chat/src/main/res/layout/com_crafttalk_chat_include_reply_preview.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_include_reply_preview.xml b/chat/src/main/res/layout/com_crafttalk_chat_include_reply_preview.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_include_reply_preview.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,44 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:background="@color/com_crafttalk_chat_white">
-
-    <View
-        android:id="@+id/top_limit"
-        android:layout_width="0dp"
-        android:layout_height="2px"
-        android:background="@color/com_crafttalk_chat_gray"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toTopOf="parent" />
-
-    <include
-        android:id="@+id/replied_message_container"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        layout="@layout/com_crafttalk_chat_include_replied_message"
-        android:layout_marginBottom="@dimen/com_crafttalk_chat_message_content_padding_bottom"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toStartOf="@+id/reply_preview_close"
-        app:layout_constraintTop_toBottomOf="@+id/top_limit"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintHorizontal_bias="0"
-        tools:visibility="visible" />
-
-    <ImageView
-        android:id="@+id/reply_preview_close"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:src="@drawable/com_crafttalk_chat_ic_close"
-        android:tint="@color/com_crafttalk_chat_gray_8d8d8d"
-        android:layout_marginEnd="8dp"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/top_limit"
-        app:layout_constraintBottom_toBottomOf="parent"
-        tools:ignore="UseAppTint" />
-
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/local/db/dao/PersonDao.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/local/db/dao/PersonDao.kt b/chat/src/main/java/com/crafttalk/chat/data/local/db/dao/PersonDao.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/local/db/dao/PersonDao.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,17 +0,0 @@
-package com.crafttalk.chat.data.local.db.dao
-
-import androidx.room.Dao
-import androidx.room.Insert
-import androidx.room.Query
-import com.crafttalk.chat.data.local.db.entity.PersonEntity
-
-@Dao
-interface PersonDao {
-
-    @Query("SELECT person_preview FROM persons WHERE person_id = :personId")
-    fun getPersonPreview(personId: String): String?
-
-    @Insert
-    fun addPersonPreview(person: PersonEntity)
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/helper/downloaders/DownloadHelper.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/helper/downloaders/DownloadHelper.kt b/chat/src/main/java/com/crafttalk/chat/presentation/helper/downloaders/DownloadHelper.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/helper/downloaders/DownloadHelper.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,62 +0,0 @@
-package com.crafttalk.chat.presentation.helper.downloaders
-
-import android.Manifest
-import android.app.DownloadManager
-import android.content.Context
-import android.net.Uri
-import android.os.Environment
-import androidx.core.content.ContextCompat
-import com.crafttalk.chat.domain.entity.file.TypeFile
-import com.crafttalk.chat.presentation.DownloadFileListener
-import com.crafttalk.chat.presentation.helper.permission.checkPermission
-import com.crafttalk.chat.utils.ChatParams
-import java.io.File
-
-fun downloadResource(
-    context: Context,
-    fileName: String,
-    fileUrl: String,
-    fileType: TypeFile,
-    downloadListener: DownloadFileListener,
-    noPermission: (permissions: Array<String>, actionsAfterObtainingPermission: () -> Unit) -> Unit,
-    updateDownloadID: (downloadID: Long?) -> Unit
-) {
-    fun downloadFile(
-        context: Context,
-        fileName: String,
-        fileUrl: String,
-        fileType: TypeFile,
-        downloadListener: DownloadFileListener,
-        updateDownloadID: (downloadID: Long?) -> Unit
-    ) {
-        try {
-            val dm = ContextCompat.getSystemService(context, DownloadManager::class.java)
-            val downloadUri: Uri = Uri.parse(fileUrl)
-            val request = DownloadManager.Request(downloadUri)
-            request
-                .addRequestHeader("Cookie", "webchat-${ChatParams.urlChatNameSpace}-uuid=${ChatParams.visitorUuid}")
-                .addRequestHeader("ct-webchat-client-id", ChatParams.visitorUuid)
-                .setAllowedNetworkTypes(DownloadManager.Request.NETWORK_WIFI or DownloadManager.Request.NETWORK_MOBILE)
-                .setAllowedOverRoaming(false)
-                .setTitle(fileName)
-                .setMimeType(fileType.value)
-                .setNotificationVisibility(DownloadManager.Request.VISIBILITY_VISIBLE_NOTIFY_COMPLETED)
-                .setDestinationInExternalPublicDir(
-                    Environment.DIRECTORY_PICTURES,
-                    File.separator.toString() + fileName
-                )
-            val downloadID = dm!!.enqueue(request)
-            updateDownloadID(downloadID)
-        } catch (e: Exception) {
-            downloadListener.failDownload()
-            updateDownloadID(null)
-        }
-    }
-    val permissions = arrayOf(Manifest.permission.WRITE_EXTERNAL_STORAGE)
-    checkPermission(
-        permissions,
-        context,
-        { noPermission(permissions) { downloadFile(context, fileName, fileUrl, fileType, downloadListener, updateDownloadID) } }
-    ) { downloadFile(context, fileName, fileUrl, fileType, downloadListener, updateDownloadID) }
-}
-
Index: chat/src/main/res/drawable/com_crafttalk_chat_background_item_button.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_background_item_button.xml b/chat/src/main/res/drawable/com_crafttalk_chat_background_item_button.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_background_item_button.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,10 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<shape
-    android:shape="rectangle"
-    xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <solid android:color="@color/com_crafttalk_chat_default_color_bg_server_action"/>
-    <stroke android:color="@color/com_crafttalk_chat_default_color_borders_server_action" android:width="1dp"/>
-    <corners android:radius="5dp"/>
-
-</shape>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/local/db/migrations/Migration_4_5.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/local/db/migrations/Migration_4_5.kt b/chat/src/main/java/com/crafttalk/chat/data/local/db/migrations/Migration_4_5.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/local/db/migrations/Migration_4_5.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,13 +0,0 @@
-package com.crafttalk.chat.data.local.db.migrations
-
-import androidx.room.migration.Migration
-import androidx.sqlite.db.SupportSQLiteDatabase
-import com.crafttalk.chat.data.local.db.entity.MessageEntity
-
-object Migration_4_5: Migration(4, 5) {
-    override fun migrate(database: SupportSQLiteDatabase) {
-
-        database.execSQL("ALTER TABLE ${MessageEntity.TABLE_NAME} ADD COLUMN keyboard TEXT DEFAULT NULL")
-
-    }
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderOperatorWidgetMessage.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderOperatorWidgetMessage.kt b/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderOperatorWidgetMessage.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderOperatorWidgetMessage.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,84 +0,0 @@
-package com.crafttalk.chat.presentation.holders
-
-import android.content.res.ColorStateList
-import android.text.SpannableString
-import android.view.View
-import android.view.ViewGroup
-import android.widget.ImageView
-import android.widget.TextView
-import androidx.core.view.ViewCompat
-import com.crafttalk.chat.R
-import com.crafttalk.chat.presentation.base.BaseViewHolder
-import com.crafttalk.chat.presentation.helper.extensions.*
-import com.crafttalk.chat.presentation.model.WidgetMessageItem
-import com.crafttalk.chat.utils.ChatAttr
-
-class HolderOperatorWidgetMessage(
-    val view: View,
-    private val defaultWidgetView: View,
-    private val getWidgetView: (widgetId: String) -> View?,
-    private val findItemsViewOnWidget: (widgetId: String, widget: View, mapView: MutableMap<String, View>) -> Unit,
-    private val bindWidget: (widgetId: String, message: SpannableString?, mapView: MutableMap<String, View>, payload: Any) -> Unit
-) : BaseViewHolder<WidgetMessageItem>(view) {
-
-    private val container: ViewGroup? = view.findViewById(R.id.widget_container)
-    private val authorName: TextView? = view.findViewById(R.id.author_name)
-    private val authorPreview: ImageView? = view.findViewById(R.id.author_preview)
-    private val time: TextView? = view.findViewById(R.id.time)
-    private val status: ImageView? = view.findViewById(R.id.status)
-    private val date: TextView? = view.findViewById(R.id.date)
-
-    private val messageFromDefaultWidget: TextView? by lazy { defaultWidgetView.findViewById(R.id.server_message) }
-    private val contentContainerFromDefaultWidget: View? by lazy { defaultWidgetView.findViewById(R.id.content_container) }
-
-    private val mapView: MutableMap<String, View> = mutableMapOf()
-    private var widgetId: String? = null
-
-    override fun bindTo(item: WidgetMessageItem) {
-        if (widgetId == null) {
-            val widgetView = getWidgetView(item.widgetId) ?: defaultWidgetView.apply {
-                setBindDefaultWidget(item.message)
-            }
-            container?.addView(widgetView)
-            findItemsViewOnWidget(item.widgetId, widgetView, mapView)
-        } else if (widgetId != item.widgetId) {
-            val widgetView = getWidgetView(item.widgetId) ?: defaultWidgetView.apply {
-                setBindDefaultWidget(item.message)
-            }
-            mapView.clear()
-            container?.removeAllViews()
-            container?.addView(widgetView)
-            findItemsViewOnWidget(item.widgetId, widgetView, mapView)
-        }
-        widgetId = item.widgetId
-        bindWidget(item.widgetId, item.message, mapView, item.payload)
-        commonBind(item)
-    }
-
-    private fun commonBind(item: WidgetMessageItem) {
-        date?.setDate(item)
-        // set content
-        authorName?.setAuthor(item)
-        authorPreview?.setAuthorIcon(item.authorPreview)
-        time?.setTime(item)
-        status?.setStatusMessage(item)
-    }
-
-    private fun setBindDefaultWidget(message: SpannableString?) {
-        messageFromDefaultWidget?.setMessageText(
-            textMessage = message,
-            maxWidthTextMessage = ChatAttr.getInstance().widthItemOperatorTextMessage,
-            colorTextMessage = ChatAttr.getInstance().colorTextOperatorMessage,
-            colorTextLinkMessage = ChatAttr.getInstance().colorTextLinkOperatorMessage,
-            sizeTextMessage = ChatAttr.getInstance().sizeTextOperatorMessage,
-            resFontFamilyMessage = ChatAttr.getInstance().resFontFamilyOperatorMessage,
-            isClickableLink = true,
-            isSelectableText = true
-        )
-        // set bg
-        contentContainerFromDefaultWidget?.apply {
-            setBackgroundResource(ChatAttr.getInstance().bgOperatorMessageResId)
-            ViewCompat.setBackgroundTintList(this, ColorStateList.valueOf(ChatAttr.getInstance().colorBackgroundOperatorMessage))
-        }
-    }
-}
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_ic_camera.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_ic_camera.xml b/chat/src/main/res/drawable/com_crafttalk_chat_ic_camera.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_ic_camera.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,13 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-        android:width="24dp"
-        android:height="24dp"
-        android:viewportWidth="24.0"
-        android:viewportHeight="24.0"
-        android:tint="#BDBDBD">
-    <path
-        android:fillColor="#FF000000"
-        android:pathData="M12,12m-3.2,0a3.2,3.2 0,1 1,6.4 0a3.2,3.2 0,1 1,-6.4 0"/>
-    <path
-        android:fillColor="#FF000000"
-        android:pathData="M9,2L7.17,4L4,4c-1.1,0 -2,0.9 -2,2v12c0,1.1 0.9,2 2,2h16c1.1,0 2,-0.9 2,-2L22,6c0,-1.1 -0.9,-2 -2,-2h-3.17L15,2L9,2zM12,17c-2.76,0 -5,-2.24 -5,-5s2.24,-5 5,-5 5,2.24 5,5 -2.24,5 -5,5z"/>
-</vector>
Index: chat/src/main/java/com/crafttalk/chat/domain/interactors/VisitorInteractor.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/interactors/VisitorInteractor.kt b/chat/src/main/java/com/crafttalk/chat/domain/interactors/VisitorInteractor.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/interactors/VisitorInteractor.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,35 +0,0 @@
-package com.crafttalk.chat.domain.interactors
-
-import com.crafttalk.chat.domain.entity.auth.Visitor
-import com.crafttalk.chat.domain.repository.IVisitorRepository
-import com.crafttalk.chat.utils.AuthType
-import com.crafttalk.chat.utils.ChatParams
-import javax.inject.Inject
-
-class VisitorInteractor
-@Inject constructor(
-    private val visitorRepository: IVisitorRepository
-) {
-    fun getVisitor() : Visitor? {
-        return when (ChatParams.authMode) {
-            AuthType.AUTH_WITH_FORM -> {
-                visitorRepository.getVisitorFromSharedPreferences()
-            }
-            AuthType.AUTH_WITHOUT_FORM -> {
-                val visitor = visitorRepository.getVisitorFromClient() ?: throw Exception("Visitor must not be null!")
-                visitor
-            }
-            else -> throw Exception("Not found type auth!")
-        }
-    }
-    fun setVisitor(visitor: Visitor?) = visitorRepository.setVisitorFromClient(visitor)
-    fun saveVisitor(visitor: Visitor) = visitorRepository.saveVisitor(visitor)
-
-    fun clearDataVisitor() {
-        when (ChatParams.authMode) {
-            AuthType.AUTH_WITH_FORM -> visitorRepository.deleteVisitor()
-            AuthType.AUTH_WITHOUT_FORM -> visitorRepository.setVisitorFromClient(null)
-        }
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/res/layout/com_crafttalk_chat_include_file_info.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_include_file_info.xml b/chat/src/main/res/layout/com_crafttalk_chat_include_file_info.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_include_file_info.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,63 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="wrap_content"
-    android:layout_height="wrap_content">
-
-    <ImageView
-        android:id="@+id/file_icon"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        android:src="@drawable/com_crafttalk_chat_ic_file_downloaded"
-        android:scaleType="centerInside"
-        app:layout_constraintStart_toStartOf="@id/progress_download"
-        app:layout_constraintEnd_toEndOf="@id/progress_download"
-        app:layout_constraintTop_toTopOf="@id/progress_download"
-        app:layout_constraintBottom_toBottomOf="@id/progress_download"
-        tools:tint="@color/com_crafttalk_chat_black" />
-
-    <ProgressBar
-        android:id="@+id/progress_download"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        android:visibility="invisible"
-        app:layout_constraintDimensionRatio="1:1"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintBottom_toBottomOf="@id/file_size"
-        app:layout_constraintStart_toStartOf="parent"
-        android:indeterminateTint="@color/com_crafttalk_chat_white"
-        tools:visibility="visible"
-        tools:indeterminateTint="@color/com_crafttalk_chat_black" />
-
-    <TextView
-        android:id="@+id/file_name"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:maxLines="1"
-        android:maxWidth="100dp"
-        android:ellipsize="end"
-        android:singleLine="true"
-        android:layout_marginStart="4dp"
-        android:paddingTop="4dp"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintStart_toEndOf="@id/progress_download"
-        tools:text="test.pdf" />
-
-    <TextView
-        android:id="@+id/file_size"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:maxLines="1"
-        android:maxWidth="100dp"
-        android:ellipsize="end"
-        android:singleLine="true"
-        android:layout_marginTop="4dp"
-        android:layout_marginStart="4dp"
-        android:paddingBottom="4dp"
-        app:layout_constraintStart_toEndOf="@id/progress_download"
-        app:layout_constraintTop_toBottomOf="@id/file_name"
-        tools:text="750 Кб" />
-
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkButtonColor.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkButtonColor.kt b/chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkButtonColor.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkButtonColor.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,16 +0,0 @@
-package com.crafttalk.chat.domain.entity.message
-
-import com.google.gson.annotations.SerializedName
-
-enum class NetworkButtonColor {
-
-    @SerializedName("Primary")
-    PRIMARY,
-
-    @SerializedName("Secondary")
-    SECONDARY,
-
-    @SerializedName("Negative")
-    NEGATIVE
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkButtonOperation.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkButtonOperation.kt b/chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkButtonOperation.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkButtonOperation.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,13 +0,0 @@
-package com.crafttalk.chat.domain.entity.message
-
-import com.google.gson.annotations.SerializedName
-
-enum class NetworkButtonOperation {
-
-    @SerializedName("Url")
-    URL,
-
-    @SerializedName("Action")
-    ACTION
-
-}
\ No newline at end of file
Index: chat/src/main/AndroidManifest.xml
===================================================================
diff --git a/chat/src/main/AndroidManifest.xml b/chat/src/main/AndroidManifest.xml
deleted file mode 100644
--- a/chat/src/main/AndroidManifest.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,4 +0,0 @@
-<manifest xmlns:tools="http://schemas.android.com/tools"
-    package="com.crafttalk.chat">
-    <uses-sdk tools:overrideLibrary="androidx.security"/>
-</manifest>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderUserImageMessage.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderUserImageMessage.kt b/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderUserImageMessage.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderUserImageMessage.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,82 +0,0 @@
-package com.crafttalk.chat.presentation.holders
-
-import android.content.res.ColorStateList
-import android.view.View
-import android.view.ViewGroup
-import android.widget.ImageView
-import android.widget.TextView
-import androidx.core.view.ViewCompat
-import com.crafttalk.chat.R
-import com.crafttalk.chat.domain.entity.file.TypeFile
-import com.crafttalk.chat.presentation.base.BaseViewHolder
-import com.crafttalk.chat.presentation.helper.extensions.*
-import com.crafttalk.chat.presentation.model.ImageMessageItem
-import com.crafttalk.chat.utils.ChatAttr
-
-class HolderUserImageMessage(
-    view: View,
-    private val download: (fileName: String, fileUrl: String, fileType: TypeFile) -> Unit,
-    private val updateData: (id: String, height: Int, width: Int) -> Unit,
-    private val clickHandler: (imageName: String, imageUrl: String) -> Unit
-) : BaseViewHolder<ImageMessageItem>(view), View.OnClickListener {
-    private val contentContainer: View? = view.findViewById(R.id.content_container)
-    private val warningContainer: ViewGroup? = view.findViewById(R.id.user_image_warning)
-
-    private val img: ImageView? = view.findViewById(R.id.user_image)
-    private val downloadImage: TextView? = view.findViewById(R.id.download_file)
-    private val authorName: TextView? = view.findViewById(R.id.author_name)
-    private val authorPreview: ImageView? = view.findViewById(R.id.author_preview)
-    private val time: TextView? = view.findViewById(R.id.time)
-    private val status: ImageView? = view.findViewById(R.id.status)
-    private val date: TextView? = view.findViewById(R.id.date)
-
-    private var imageUrl: String? = null
-    private var imageName: String? = null
-    private var failLoading: Boolean = false
-
-    init {
-        img?.setOnClickListener(this)
-        downloadImage?.setOnClickListener(this)
-    }
-
-    override fun onClick(view: View) {
-        when (view.id) {
-            R.id.user_image -> {
-                if (!failLoading) {
-                    val name = imageName ?: return
-                    val url = imageUrl ?: return
-                    clickHandler(name, url)
-                }
-            }
-            R.id.download_file -> {
-                val name = imageName ?: return
-                val url = imageUrl ?: return
-                download(name, url, TypeFile.IMAGE)
-            }
-        }
-    }
-
-    override fun bindTo(item: ImageMessageItem) {
-        imageUrl = item.image.url
-        imageName = item.image.name.toString()
-        failLoading = item.image.failLoading
-
-        date?.setDate(item)
-        // set content
-        authorName?.setAuthor(item)
-        authorPreview?.setAuthorIcon(showAuthorIcon = false)
-        time?.setTime(item)
-        status?.setStatusMessage(item)
-        img?.apply {
-            settingMediaFile()
-            loadMediaFile(item.id, item.image, updateData, true, false, warningContainer)
-        }
-        downloadImage?.settingDownloadBtn(true, failLoading)
-        // set bg
-        contentContainer?.apply {
-            setBackgroundResource(ChatAttr.getInstance().bgUserMessageResId)
-            ViewCompat.setBackgroundTintList(this, ColorStateList.valueOf(ChatAttr.getInstance().colorBackgroundUserMediaFileMessage))
-        }
-    }
-
-}
\ No newline at end of file
Index: chat/build.gradle
===================================================================
diff --git a/chat/build.gradle b/chat/build.gradle
deleted file mode 100644
--- a/chat/build.gradle	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,156 +0,0 @@
-apply plugin: 'com.android.library'
-apply plugin: 'kotlin-android'
-apply plugin: 'kotlin-android-extensions'
-apply plugin: 'kotlin-kapt'
-apply plugin: 'com.google.gms.google-services'
-apply plugin: 'maven-publish'
-
-kapt {
-    javacOptions {
-        option("-source", "8")
-        option("-target", "8")
-    }
-}
-
-android {
-    compileSdkVersion 34
-    buildToolsVersion "29.0.3"
-
-    defaultConfig {
-        minSdkVersion 19
-        targetSdkVersion 34
-        versionCode 1
-        versionName "1.0"
-        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
-        consumerProguardFiles 'consumer-rules.pro'
-    }
-
-    buildTypes {
-        release {
-            minifyEnabled false
-            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
-        }
-    }
-    kotlinOptions {
-        jvmTarget = JavaVersion.VERSION_1_8.toString()
-    }
-}
-
-ext {
-    appCompatVersion = '1.1.0'
-    coreVersion = '1.5.0'
-    constraintlayoutVersion = '2.1.4'
-    lifecycleVersion = '2.2.0'
-    androidXRecyclerViewVersion = '1.2.1'
-    materialVersion = '1.4.0'
-    fragmentKtxVersion = '1.3.4'
-    socketVersion = '1.0.2'
-    retrofitVersion = '2.9.0'
-    coroutinesVersion = '1.6.4'
-    glideVersion = '4.13.2'
-    roomVersion = '2.2.4'
-    okHttpVersion = '4.10.0'
-    kotlin_version = '1.5.30'
-    daggerVersion = '2.43.2'
-    firebaseMessagingServiceVersion = '23.0.8'
-    firebaseAnalyticsVersion = '21.1.1'
-    paginationVersion = '3.1.1'
-    photoViewVersion = '2.3.0'
-    securityPreferencesVersion = '1.1.0-alpha03'
-    inputMaskVersion = '6.0.0'
-    junitVersion = '4.13.2'
-    testRulesVersion = '1.4.0'
-    testRunnerVersion = '1.4.0'
-    espressoVersion = '3.4.0'
-}
-
-dependencies {
-    implementation fileTree(dir: 'libs', include: ['*.jar'])
-
-    implementation "androidx.core:core-ktx:$coreVersion"
-    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
-    implementation "androidx.appcompat:appcompat:$appCompatVersion"
-    implementation "androidx.constraintlayout:constraintlayout:$constraintlayoutVersion"
-    implementation "androidx.recyclerview:recyclerview:$androidXRecyclerViewVersion"
-    implementation "com.google.android.material:material:$materialVersion"
-    implementation "androidx.fragment:fragment-ktx:$fragmentKtxVersion"
-
-    // DI
-    implementation "com.google.dagger:dagger:$daggerVersion"
-    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
-    // Room
-    implementation "androidx.room:room-runtime:$roomVersion"
-    kapt "androidx.room:room-compiler:$roomVersion"
-    // Glide
-    implementation "com.github.bumptech.glide:glide:$glideVersion"
-    // Coroutines
-    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
-    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
-    // Retrofit
-    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
-    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
-//    implementation "com.squareup.retrofit2:converter-scalars:$retrofitVersion"
-    // OkHttp
-    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
-    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"
-    // Socket
-    implementation "io.socket:socket.io-client:$socketVersion"
-    // ViewModel
-    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
-    // LiveData
-    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
-    // Saved state module for ViewModel
-    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycleVersion"
-    // Push
-    implementation "com.google.firebase:firebase-messaging:$firebaseMessagingServiceVersion"
-    implementation "com.google.firebase:firebase-analytics:$firebaseAnalyticsVersion"
-    // Pagination
-    implementation "androidx.paging:paging-runtime:$paginationVersion"
-    // Zooming photo
-    implementation "com.github.chrisbanes:PhotoView:$photoViewVersion"
-    // EncryptedSharedPreferences
-    implementation "androidx.security:security-crypto:$securityPreferencesVersion"
-    // mask
-    implementation "com.github.RedMadRobot:input-mask-android:$inputMaskVersion"
-
-    testImplementation "junit:junit:$junitVersion"
-    androidTestImplementation "androidx.test:rules:$testRulesVersion"
-    androidTestImplementation "androidx.test:runner:$testRunnerVersion"
-    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
-}
-
-project.afterEvaluate {
-    publishing {
-        publications {
-            release(MavenPublication) {
-                from components.release
-
-                group = 'com.github.crafttalk'
-                artifactId = 'chat-client-android'
-                version = '1.1.0'
-
-                pom {
-                    name = 'chat-client-android'
-                    url = 'https://github.com/crafttalk/crafttalk-android-sdk'
-                    licenses {
-                        license {
-                            name = 'The Apache License, Version 2.0'
-                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
-                        }
-                    }
-                    developers {
-                        developer {
-                            id = 'cactus666'
-                            name = 'Ivan Shust'
-                        }
-                    }
-                    scm {
-                        connection = 'scm:git@github.com/crafttalk/crafttalk-android-sdk.git'
-                        developerConnection = 'scm:git@github.com/crafttalk/crafttalk-android-sdk.git'
-                        url = 'https://github.com/crafttalk/crafttalk-android-sdk'
-                    }
-                }
-            }
-        }
-    }
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/di/modules/init/SharedPreferencesModule.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/di/modules/init/SharedPreferencesModule.kt b/chat/src/main/java/com/crafttalk/chat/di/modules/init/SharedPreferencesModule.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/di/modules/init/SharedPreferencesModule.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,37 +0,0 @@
-package com.crafttalk.chat.di.modules.init
-
-import android.content.Context
-import android.content.Context.MODE_PRIVATE
-import android.content.SharedPreferences
-import android.os.Build
-import androidx.security.crypto.EncryptedSharedPreferences
-import androidx.security.crypto.MasterKey
-import dagger.Module
-import dagger.Provides
-import javax.inject.Singleton
-
-@Module
-class SharedPreferencesModule {
-
-    @Provides
-    @Singleton
-    fun provideSharedPreferences(
-        context: Context
-    ): SharedPreferences {
-        return if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
-            val masterKey = MasterKey.Builder(context)
-                .setKeyScheme(MasterKey.KeyScheme.AES256_GCM)
-                .build()
-            return EncryptedSharedPreferences.create(
-                context,
-                "crafttalkChatInfo",
-                masterKey,
-                EncryptedSharedPreferences.PrefKeyEncryptionScheme.AES256_SIV,
-                EncryptedSharedPreferences.PrefValueEncryptionScheme.AES256_GCM
-            )
-        } else {
-            context.getSharedPreferences("crafttalkChatInfo", MODE_PRIVATE)
-        }
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/local/db/entity/converters/TypeFileConverter.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/converters/TypeFileConverter.kt b/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/converters/TypeFileConverter.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/converters/TypeFileConverter.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,18 +0,0 @@
-package com.crafttalk.chat.data.local.db.entity.converters
-
-import androidx.room.TypeConverter
-import com.crafttalk.chat.domain.entity.file.TypeFile
-
-class TypeFileConverter {
-
-    @TypeConverter
-    fun fromTypeFile(typeFile: TypeFile?): String? {
-        return typeFile?.name
-    }
-
-    @TypeConverter
-    fun toTypeFile(typeFile: String?): TypeFile? {
-        return typeFile?.let { TypeFile.valueOf(it) }
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/repository/AuthRepository.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/repository/AuthRepository.kt b/chat/src/main/java/com/crafttalk/chat/data/repository/AuthRepository.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/repository/AuthRepository.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,55 +0,0 @@
-package com.crafttalk.chat.data.repository
-
-import com.crafttalk.chat.data.api.socket.SocketApi
-import com.crafttalk.chat.data.local.db.dao.FileDao
-import com.crafttalk.chat.data.local.db.dao.MessagesDao
-import com.crafttalk.chat.domain.entity.auth.Visitor
-import com.crafttalk.chat.domain.repository.IAuthRepository
-import com.crafttalk.chat.presentation.ChatEventListener
-import java.io.File
-import javax.inject.Inject
-
-class AuthRepository
-@Inject constructor(
-    private val socketApi: SocketApi,
-    private val fileDao: FileDao,
-    private val messageDao: MessagesDao
-) : IAuthRepository {
-
-    override fun logIn(
-        visitor: Visitor,
-        successAuthUi: () -> Unit,
-        failAuthUi: () -> Unit,
-        successAuthUx: suspend () -> Unit,
-        failAuthUx: suspend () -> Unit,
-        sync: suspend () -> Unit,
-        updateCurrentReadMessageTime: (newTimeMarks: List<Pair<String, Long>>) -> Unit,
-        updateCountUnreadMessages: (countNewMessages: Int, hasUserMessage: Boolean) -> Unit,
-        getPersonPreview: suspend (personId: String) -> String?,
-        updatePersonName: suspend (personId: String?, currentPersonName: String?) -> Unit,
-        chatEventListener: ChatEventListener?
-    ) {
-        socketApi.setVisitor(
-            visitor,
-            successAuthUi,
-            failAuthUi,
-            successAuthUx,
-            failAuthUx,
-            sync,
-            updateCurrentReadMessageTime,
-            updateCountUnreadMessages,
-            getPersonPreview,
-            updatePersonName,
-            chatEventListener
-        )
-    }
-
-    override fun logOut(filesDir: File) {
-        fileDao.getFilesNames().forEach { fileName ->
-            fileDao.deleteFile(fileName)
-            File(filesDir, fileName).delete()
-        }
-        messageDao.deleteAllMessages()
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/adapters/AdapterListMessages.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/adapters/AdapterListMessages.kt b/chat/src/main/java/com/crafttalk/chat/presentation/adapters/AdapterListMessages.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/adapters/AdapterListMessages.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,74 +0,0 @@
-package com.crafttalk.chat.presentation.adapters
-
-import android.text.SpannableString
-import android.view.View
-import android.view.ViewGroup
-import com.crafttalk.chat.R
-import com.crafttalk.chat.domain.entity.file.TypeFile
-import com.crafttalk.chat.presentation.base.BaseAdapterWithPagination
-import com.crafttalk.chat.presentation.base.BaseViewHolder
-import com.crafttalk.chat.presentation.helper.extensions.inflate
-import com.crafttalk.chat.presentation.holders.*
-import com.crafttalk.chat.presentation.model.MessageModel
-import com.crafttalk.chat.utils.ChatAttr
-import java.lang.IndexOutOfBoundsException
-
-class AdapterListMessages(
-    private val downloadOrOpenDocument: (id: String, documentName: String, documentUrl: String) -> Unit,
-    private val openImage: (imageName: String, imageUrl: String, downloadFun: (fileName: String, fileUrl: String, fileType: TypeFile) -> Unit) -> Unit,
-    private val openGif: (gifName: String, gifUrl: String, downloadFun: (fileName: String, fileUrl: String, fileType: TypeFile) -> Unit) -> Unit,
-    private val downloadFile: (fileName: String, fileUrl: String, fileType: TypeFile) -> Unit,
-    private val selectAction: (messageId: String, actionId: String) -> Unit,
-    private val selectButton: (messageId: String, actionId: String, buttonId: String) -> Unit,
-    private val selectReplyMessage: (messageId: String) -> Unit,
-    private val getWidgetView: (widgetId: String) -> View?,
-    private val findItemsViewOnWidget: (widgetId: String, widget: View, mapView: MutableMap<String, View>) -> Unit,
-    private val bindWidget: (widgetId: String, message: SpannableString?, mapView: MutableMap<String, View>, payload: Any) -> Unit,
-    private val updateData: (id: String, height: Int, width: Int) -> Unit
-) : BaseAdapterWithPagination<MessageModel>() {
-
-    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): BaseViewHolder<out MessageModel> {
-        return when (viewType) {
-            R.layout.com_crafttalk_chat_item_user_text_message -> HolderUserTextMessage(parent.inflate(ChatAttr.getInstance().layoutItemUserTextMessage ?: viewType), selectReplyMessage, updateData)
-            R.layout.com_crafttalk_chat_item_server_text_message -> HolderOperatorTextMessage(parent.inflate(ChatAttr.getInstance().layoutItemOperatorTextMessage ?: viewType), selectReplyMessage, updateData, selectAction, selectButton)
-            R.layout.com_crafttalk_chat_item_user_image_message -> HolderUserImageMessage(parent.inflate(ChatAttr.getInstance().layoutItemUserImageMessage ?: viewType), downloadFile, updateData)
-            { imageName, imageUrl -> openImage(imageName, imageUrl, downloadFile) }
-            R.layout.com_crafttalk_chat_item_server_image_message -> HolderOperatorImageMessage(parent.inflate(ChatAttr.getInstance().layoutItemOperatorImageMessage ?: viewType), downloadFile, updateData)
-            { imageName, imageUrl -> openImage(imageName, imageUrl, downloadFile) }
-            R.layout.com_crafttalk_chat_item_user_file_message -> HolderUserFileMessage(parent.inflate(ChatAttr.getInstance().layoutItemUserFileMessage ?: viewType))
-            { id, documentName, documentUrl -> downloadOrOpenDocument(id, documentName, documentUrl) }
-            R.layout.com_crafttalk_chat_item_server_file_message -> HolderOperatorFileMessage(parent.inflate(ChatAttr.getInstance().layoutItemOperatorFileMessage ?: viewType))
-            { id, documentName, documentUrl -> downloadOrOpenDocument(id, documentName, documentUrl) }
-            R.layout.com_crafttalk_chat_item_user_gif_message -> HolderUserGifMessage(parent.inflate(ChatAttr.getInstance().layoutItemUserGifMessage ?: viewType), downloadFile, updateData)
-            { gifName, gifUrl -> openGif(gifName, gifUrl, downloadFile) }
-            R.layout.com_crafttalk_chat_item_server_gif_message -> HolderOperatorGifMessage(parent.inflate(ChatAttr.getInstance().layoutItemOperatorGifMessage ?: viewType), downloadFile, updateData)
-            { gifName, gifUrl -> openGif(gifName, gifUrl, downloadFile) }
-            R.layout.com_crafttalk_chat_item_user_union_message -> HolderUserUnionMessage(parent.inflate(ChatAttr.getInstance().layoutItemUserUnionMessage ?: viewType), downloadFile, updateData,
-                { gifName, gifUrl -> openGif(gifName, gifUrl, downloadFile) },
-                { imageName, imageUrl -> openImage(imageName, imageUrl, downloadFile) },
-                { id, documentName, documentUrl -> downloadOrOpenDocument(id, documentName, documentUrl) }
-            )
-            R.layout.com_crafttalk_chat_item_server_union_message -> HolderOperatorUnionMessage(parent.inflate(ChatAttr.getInstance().layoutItemOperatorUnionMessage ?: viewType), selectAction, selectButton, downloadFile, updateData,
-                { gifName, gifUrl -> openGif(gifName, gifUrl, downloadFile) },
-                { imageName, imageUrl -> openImage(imageName, imageUrl, downloadFile) },
-                { id, documentName, documentUrl -> downloadOrOpenDocument(id, documentName, documentUrl) }
-            )
-            R.layout.com_crafttalk_chat_item_transfer_message -> HolderTransferMessage(parent.inflate(ChatAttr.getInstance().layoutItemTransferMessage ?: viewType))
-            R.layout.com_crafttalk_chat_item_info_message -> HolderInfoMessage(parent.inflate(ChatAttr.getInstance().layoutItemInfoMessage ?: viewType))
-            R.layout.com_crafttalk_chat_item_server_widget_message -> HolderOperatorWidgetMessage(parent.inflate(ChatAttr.getInstance().layoutItemWidgetMessage ?: viewType), parent.inflate(R.layout.com_crafttalk_chat_item_default_widget), getWidgetView, findItemsViewOnWidget, bindWidget)
-            else -> HolderDefaultMessage(parent.inflate(R.layout.com_crafttalk_chat_item_default_message))
-        }
-    }
-
-    fun getMessageByPosition(position: Int): MessageModel? {
-        return getItemOrNull(position) ?: getItemOrNull(position - 1)
-    }
-
-    private fun getItemOrNull(position: Int): MessageModel? {
-        return try {
-            getItem(position)
-        } catch (ex: IndexOutOfBoundsException) {
-            null
-        }
-    }
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/di/modules/init/DBModule.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/di/modules/init/DBModule.kt b/chat/src/main/java/com/crafttalk/chat/di/modules/init/DBModule.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/di/modules/init/DBModule.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,55 +0,0 @@
-package com.crafttalk.chat.di.modules.init
-
-import android.content.Context
-import androidx.room.Room
-import androidx.room.RoomDatabase
-import com.crafttalk.chat.data.local.db.dao.FileDao
-import com.crafttalk.chat.data.local.db.dao.MessagesDao
-import com.crafttalk.chat.data.local.db.dao.PersonDao
-import com.crafttalk.chat.data.local.db.database.ChatDatabase
-import com.crafttalk.chat.data.local.db.migrations.*
-import dagger.Module
-import dagger.Provides
-import javax.inject.Singleton
-
-@Module
-class DBModule {
-
-    @Provides
-    @Singleton
-    fun provideChatDatabase(
-        context: Context
-    ): ChatDatabase = Room.databaseBuilder(
-        context,
-        ChatDatabase::class.java,
-        "chat.db"
-    ).setJournalMode(RoomDatabase.JournalMode.TRUNCATE)
-        .addMigrations(
-            Migration_1_2,
-            Migration_2_3,
-            Migration_3_4,
-            Migration_4_5,
-            Migration_5_6,
-            Migration_6_7
-        )
-        .build()
-
-    @Provides
-    @Singleton
-    fun provideMessagesDao(
-        chatDatabase: ChatDatabase
-    ): MessagesDao = chatDatabase.messageDao()
-
-    @Provides
-    @Singleton
-    fun providePersonDao(
-        chatDatabase: ChatDatabase
-    ): PersonDao = chatDatabase.personDao()
-
-    @Provides
-    @Singleton
-    fun provideFileDao(
-        chatDatabase: ChatDatabase
-    ): FileDao = chatDatabase.fileDao()
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/local/db/entity/converters/KeyboardConverter.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/converters/KeyboardConverter.kt b/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/converters/KeyboardConverter.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/converters/KeyboardConverter.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,26 +0,0 @@
-package com.crafttalk.chat.data.local.db.entity.converters
-
-import androidx.room.TypeConverter
-import com.crafttalk.chat.data.local.db.entity.KeyboardEntity
-import com.google.gson.Gson
-import com.google.gson.reflect.TypeToken
-import java.lang.reflect.Type
-
-class KeyboardConverter {
-
-    @TypeConverter
-    fun fromActions(keyboard: KeyboardEntity?): String? {
-        keyboard ?: return null
-        val type: Type = object : TypeToken<KeyboardEntity>() {}.type
-        val gson = Gson()
-        return gson.toJson(keyboard, type)
-    }
-
-    @TypeConverter
-    fun toActions(keyboard: String?): KeyboardEntity? {
-        keyboard ?: return null
-        val type: Type = object : TypeToken<KeyboardEntity>() {}.type
-        val gson = Gson()
-        return gson.fromJson(keyboard, type)
-    }
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/di/ChatComponent.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/di/ChatComponent.kt b/chat/src/main/java/com/crafttalk/chat/di/ChatComponent.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/di/ChatComponent.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,24 +0,0 @@
-package com.crafttalk.chat.di
-
-import androidx.fragment.app.Fragment
-import com.crafttalk.chat.di.modules.chat.*
-import com.crafttalk.chat.presentation.ChatView
-import dagger.BindsInstance
-import dagger.Subcomponent
-
-@ChatScope
-@Subcomponent(
-    modules = [
-        NetworkModule::class,
-        RepositoryModule::class,
-        ViewModelModule::class
-    ]
-)
-interface ChatComponent {
-    @Subcomponent.Builder
-    interface Builder {
-        @BindsInstance fun parentFragment(parentFragment: Fragment): Builder
-        fun build(): ChatComponent
-    }
-    fun inject(chatView: ChatView)
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/helper/extensions/TextView.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/helper/extensions/TextView.kt b/chat/src/main/java/com/crafttalk/chat/presentation/helper/extensions/TextView.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/helper/extensions/TextView.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,235 +0,0 @@
-package com.crafttalk.chat.presentation.helper.extensions
-
-import android.annotation.SuppressLint
-import android.content.res.ColorStateList
-import android.os.Build
-import android.text.SpannableString
-import android.text.method.LinkMovementMethod
-import android.util.TypedValue
-import android.view.View
-import android.widget.TextView
-import androidx.core.content.res.ResourcesCompat
-import com.crafttalk.chat.R
-import com.crafttalk.chat.presentation.model.*
-import com.crafttalk.chat.utils.ChatAttr
-import com.crafttalk.chat.utils.ChatParams
-import com.crafttalk.chat.utils.MediaFileDownloadMode
-import java.text.DecimalFormat
-import java.text.SimpleDateFormat
-
-fun TextView.setAuthor(message: MessageModel) {
-    // set visibility / color / dimension
-    if (message.role == Role.USER) {
-        visibility = if (ChatAttr.getInstance().showUserMessageAuthor) {
-            View.VISIBLE
-        } else {
-            View.GONE
-        }
-        setTextColor(ChatAttr.getInstance().colorTextUserMessageAuthor)
-        setTextSize(TypedValue.COMPLEX_UNIT_PX, ChatAttr.getInstance().sizeUserMessageAuthor)
-    } else {
-        visibility = View.VISIBLE
-        setTextColor(ChatAttr.getInstance().colorTextOperatorMessageAuthor)
-        setTextSize(TypedValue.COMPLEX_UNIT_PX, ChatAttr.getInstance().sizeOperatorMessageAuthor)
-    }
-    // set font
-    ChatAttr.getInstance().resFontFamilyMessageAuthor?.let {
-        typeface = ResourcesCompat.getFont(context, it)
-    }
-    // set content
-    text = message.authorName
-}
-
-@SuppressLint("SetTextI18n", "SimpleDateFormat")
-fun TextView.setTime(message: MessageModel) {
-    // set color / dimension
-    if (message.role == Role.USER) {
-        setTextSize(TypedValue.COMPLEX_UNIT_PX, ChatAttr.getInstance().sizeUserMessageTime)
-    } else {
-        setTextSize(TypedValue.COMPLEX_UNIT_PX, ChatAttr.getInstance().sizeOperatorMessageTime)
-    }
-    when {
-        message is TextMessageItem && message.role == Role.USER -> setTextColor(ChatAttr.getInstance().colorUserTextMessageTime)
-        message is ImageMessageItem && message.role == Role.USER -> setTextColor(ChatAttr.getInstance().colorUserImageMessageTime)
-        message is GifMessageItem && message.role == Role.USER -> setTextColor(ChatAttr.getInstance().colorUserGifMessageTime)
-        message is FileMessageItem && message.role == Role.USER -> setTextColor(ChatAttr.getInstance().colorUserFileMessageTime)
-        message is UnionMessageItem && message.role == Role.USER -> setTextColor(ChatAttr.getInstance().colorUserTextMessageTime)
-        message is TextMessageItem && message.role == Role.OPERATOR -> setTextColor(ChatAttr.getInstance().colorOperatorTextMessageTime)
-        message is ImageMessageItem && message.role == Role.OPERATOR -> setTextColor(ChatAttr.getInstance().colorOperatorImageMessageTime)
-        message is GifMessageItem && message.role == Role.OPERATOR -> setTextColor(ChatAttr.getInstance().colorOperatorGifMessageTime)
-        message is FileMessageItem && message.role == Role.OPERATOR -> setTextColor(ChatAttr.getInstance().colorOperatorFileMessageTime)
-        message is UnionMessageItem && message.role == Role.OPERATOR -> setTextColor(ChatAttr.getInstance().colorOperatorTextMessageTime)
-        message is WidgetMessageItem -> setTextColor(ChatAttr.getInstance().colorOperatorWidgetMessageTime)
-        message is TransferMessageItem -> setTextColor(ChatAttr.getInstance().colorOperatorTextMessageTime)
-    }
-    // set font
-    ChatAttr.getInstance().resFontFamilyMessageTime?.let {
-        typeface = ResourcesCompat.getFont(context, it)
-    }
-    // set content
-    val formatTime = SimpleDateFormat("HH:mm")
-    text = formatTime.format(message.timestamp)
-}
-
-@SuppressLint("SimpleDateFormat")
-fun TextView.setDate(message: MessageModel) {
-    if (message.isFirstMessageInDay) {
-        // set content
-        val formatYear = SimpleDateFormat("yyyy")
-        val formatTime = SimpleDateFormat("dd MMMM", ChatParams.locale)
-
-        val nowYear = formatYear.format(System.currentTimeMillis())
-        val currentYear = formatYear.format(message.timestamp)
-        val date = formatTime.format(message.timestamp)
-
-        text = if (nowYear == currentYear) {
-            date
-        } else {
-            "$date $currentYear"
-        }
-        // set color
-        setTextColor(ChatAttr.getInstance().colorTextDateGrouping)
-        // set dimension
-        setTextSize(TypedValue.COMPLEX_UNIT_PX, ChatAttr.getInstance().sizeTextDateGrouping)
-        // set font
-        ChatAttr.getInstance().resFontFamilyMessageDate?.let {
-            typeface = ResourcesCompat.getFont(context, it)
-        }
-        visibility = View.VISIBLE
-    } else {
-        visibility = View.GONE
-    }
-}
-
-fun TextView.settingDownloadBtn(isUserMessage: Boolean, failLoading: Boolean) {
-    // set visible
-    if (ChatAttr.getInstance().mediaFileDownloadMode in listOf(MediaFileDownloadMode.ONLY_IN_CHAT, MediaFileDownloadMode.All_PLACES) && !failLoading) {
-        visibility = View.VISIBLE
-    } else {
-        visibility = View.GONE
-        return
-    }
-    // set color
-    try {
-        val xpp = resources.getXml(if (isUserMessage) ChatAttr.getInstance().colorUserFileMessageDownload else ChatAttr.getInstance().colorOperatorFileMessageDownload)
-        val colorStateList = if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
-            ColorStateList.createFromXml(resources, xpp, context.theme)
-        } else {
-            ColorStateList.createFromXml(resources, xpp)
-        }
-        setTextColor(colorStateList)
-    } catch (e: Exception) {
-        if (isUserMessage)
-            setTextColor(ChatAttr.getInstance().colorUserFileMessageDownload)
-        else
-            setTextColor(ChatAttr.getInstance().colorOperatorFileMessageDownload)
-    }
-    // set dimension
-    setTextSize(TypedValue.COMPLEX_UNIT_PX, if (isUserMessage) ChatAttr.getInstance().sizeUserFileMessageDownload else ChatAttr.getInstance().sizeOperatorFileMessageDownload)
-    // set font
-    (if (isUserMessage) ChatAttr.getInstance().resFontFamilyUserMessage else ChatAttr.getInstance().resFontFamilyOperatorMessage)?.let {
-        typeface = ResourcesCompat.getFont(context, it)
-    }
-    // set bg
-    setBackgroundResource(if (isUserMessage) ChatAttr.getInstance().backgroundUserFileMessageDownload else ChatAttr.getInstance().backgroundOperatorFileMessageDownload)
-}
-
-fun TextView.setFileName(
-    file: FileModel,
-    maxWidthTextFileName: Int? = null,
-    colorTextFileName: Int,
-    sizeTextFileName: Float
-) {
-    text = file.name
-    // set width item
-    maxWidthTextFileName?.let {
-        maxWidth = it
-    }
-    // set color and dimension
-    setTextColor(colorTextFileName)
-    setTextSize(TypedValue.COMPLEX_UNIT_PX, sizeTextFileName)
-    // set font
-    ChatAttr.getInstance().resFontFamilyFileInfo?.let {
-        typeface = ResourcesCompat.getFont(context, it)
-    }
-}
-
-fun TextView.setFileSize(
-    file: FileModel,
-    maxWidthTextFileSize: Int? = null,
-    colorTextFileSize: Int,
-    sizeTextFileSize: Float
-) {
-    if (file.size == null) return
-    val df = DecimalFormat("#.##")
-    val countByteInKByte = 1000L
-    val countByteInMByte = 1000L * 1000L
-    val countByteInGByte = 1000L * 1000L * 1000L
-    text = when(file.size) {
-        in 0L until countByteInKByte -> "${file.size} ${resources.getString(R.string.com_crafttalk_chat_file_size_byte)}"
-        in countByteInKByte until countByteInMByte -> {
-            val value = file.size.toDouble() / countByteInKByte
-            "${(df.parse(df.format(value)).toDouble())} ${resources.getString(R.string.com_crafttalk_chat_file_size_Kb)}"
-        }
-        in countByteInMByte until countByteInGByte -> {
-            val value = file.size.toDouble() / countByteInMByte
-            "${(df.parse(df.format(value)).toDouble())} ${resources.getString(R.string.com_crafttalk_chat_file_size_Mb)}"
-        }
-        in countByteInGByte until countByteInGByte * 1000L -> {
-            val value = file.size.toDouble() / countByteInGByte
-            "${(df.parse(df.format(value)).toDouble())} ${resources.getString(R.string.com_crafttalk_chat_file_size_Gb)}"
-        }
-        else -> ""
-    }
-    // set width item
-    maxWidthTextFileSize?.let {
-        maxWidth = it
-    }
-    // set color and dimension
-    setTextColor(colorTextFileSize)
-    setTextSize(TypedValue.COMPLEX_UNIT_PX, sizeTextFileSize)
-    // set font
-    ChatAttr.getInstance().resFontFamilyFileInfo?.let {
-        typeface = ResourcesCompat.getFont(context, it)
-    }
-}
-
-fun TextView.setMessageText(
-    textMessage: SpannableString? = null,
-    textMessageRes: Int? = null,
-    textMessageResArgs: Array<Any> = arrayOf(),
-    maxWidthTextMessage: Int? = null,
-    colorTextMessage: Int,
-    colorTextLinkMessage: Int? = null,
-    sizeTextMessage: Float,
-    resFontFamilyMessage: Int? = null,
-    isClickableLink: Boolean = false,
-    isSelectableText: Boolean = false,
-    bindContinue: () -> Unit = {}
-) {
-    if (textMessage.isNullOrBlank() && textMessageRes == null) {
-        visibility = View.GONE
-        return
-    } else {
-        visibility = View.VISIBLE
-    }
-    // set behavior
-    setTextIsSelectable(isSelectableText)
-    movementMethod = if (isClickableLink) LinkMovementMethod.getInstance() else null
-    // set width item
-    maxWidthTextMessage?.let {
-        maxWidth = it
-    }
-    // set content
-    text = textMessage ?: textMessageRes?.let { context.resources.getString(it, *textMessageResArgs) }
-    // set color
-    setTextColor(colorTextMessage)
-    if (isClickableLink && colorTextLinkMessage != null) colorTextLinkMessage.run(::setLinkTextColor) else setLinkTextColor(null)
-    // set dimension
-    setTextSize(TypedValue.COMPLEX_UNIT_PX, sizeTextMessage)
-    // set font
-    resFontFamilyMessage?.let {
-        typeface = ResourcesCompat.getFont(context, it)
-    }
-    bindContinue()
-}
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_ic_search_bottom.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_ic_search_bottom.xml b/chat/src/main/res/drawable/com_crafttalk_chat_ic_search_bottom.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_ic_search_bottom.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,10 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="24dp"
-    android:height="24dp"
-    android:viewportWidth="24"
-    android:viewportHeight="24"
-    android:tint="?attr/colorControlNormal">
-  <path
-      android:fillColor="@android:color/black"
-      android:pathData="M16.59,8.59L12,13.17 7.41,8.59 6,10l6,6 6,-6z"/>
-</vector>
Index: chat/src/main/java/com/crafttalk/chat/data/local/db/entity/ButtonEntity.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/ButtonEntity.kt b/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/ButtonEntity.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/ButtonEntity.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,55 +0,0 @@
-package com.crafttalk.chat.data.local.db.entity
-
-import androidx.room.ColumnInfo
-import com.crafttalk.chat.domain.entity.message.NetworkButton
-import com.crafttalk.chat.domain.entity.message.NetworkButtonColor
-import com.crafttalk.chat.domain.entity.message.NetworkButtonImage
-import com.crafttalk.chat.domain.entity.message.NetworkButtonOperation
-
-data class ButtonEntity(
-    @ColumnInfo(name = "id")
-    val buttonId: String,
-
-    @ColumnInfo(name = "title")
-    val title: String,
-
-    @ColumnInfo(name = "action")
-    val action: String,
-
-    @ColumnInfo(name = "type")
-    val typeOperation: NetworkButtonOperation,
-
-    @ColumnInfo(name = "color")
-    val color: NetworkButtonColor,
-
-    @ColumnInfo(name = "image")
-    val image: NetworkButtonImage? = null,
-
-    @ColumnInfo(name = "imageEmoji")
-    val imageEmoji: String? = null,
-
-    @ColumnInfo(name = "fullSize")
-    val hasFullSize: Boolean,
-
-    @ColumnInfo(name = "selected")
-    val selected: Boolean
-) {
-
-    companion object {
-        fun map(networkButtons: List<NetworkButton>, buttonsSelected: List<String>): List<ButtonEntity> {
-            return networkButtons.map {
-                ButtonEntity(
-                    buttonId = it.buttonId,
-                    title = it.title,
-                    action = it.action,
-                    typeOperation = it.typeOperation,
-                    color = it.color,
-                    image = it.image,
-                    imageEmoji = it.imageEmoji,
-                    hasFullSize = it.hasFullSize,
-                    selected = buttonsSelected.contains(it.buttonId)
-                )
-            }
-        }
-    }
-}
Index: chat/src/main/java/com/crafttalk/chat/domain/interactors/SearchInteractor.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/interactors/SearchInteractor.kt b/chat/src/main/java/com/crafttalk/chat/domain/interactors/SearchInteractor.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/interactors/SearchInteractor.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,290 +0,0 @@
-package com.crafttalk.chat.domain.interactors
-
-import android.util.Log
-import com.crafttalk.chat.data.helper.converters.text.convertTextToNormalString
-import com.crafttalk.chat.data.local.db.entity.MessageEntity
-import com.crafttalk.chat.domain.entity.auth.Visitor
-import com.crafttalk.chat.domain.repository.IMessageRepository
-import kotlinx.coroutines.*
-import java.util.concurrent.CopyOnWriteArrayList
-import javax.inject.Inject
-
-fun String.countContains(pattern: String): Int {
-//    Log.d("SEARCH_LOG", "countContains str: $this, pattern: $pattern;")
-    if (!contains(pattern, ignoreCase = true)) return 0
-    var count = 0
-    var indexStart: Int
-    indexStart = this.indexOf(pattern, ignoreCase = true)
-    if (indexStart != -1) {
-        count += 1
-    }
-    while (indexStart != -1) {
-        indexStart = this.indexOf(pattern, indexStart + 1, ignoreCase = true)
-        if (indexStart != -1) {
-            count += 1
-        }
-    }
-    return count
-}
-
-class SearchInteractor
-@Inject constructor(
-    private val visitorInteractor: VisitorInteractor,
-    private val personInteractor: PersonInteractor,
-    private val messageRepository: IMessageRepository
-) {
-
-    private var searchText: String = ""
-    private var indexCurrentSearchItem: Int = 0
-    private var indexLastLoadSearchItem: Int = -1
-    private var searchItems: CopyOnWriteArrayList<SearchItem> = CopyOnWriteArrayList()
-    private var allMessageLoaded = false
-    private var canUpdatePositions = true
-    private var wantUpdatePositions = false
-
-    fun cancelSearch() {
-        searchText = ""
-        indexCurrentSearchItem = 0
-        indexLastLoadSearchItem = -1
-        searchItems.clear()
-        allMessageLoaded = false
-    }
-
-    fun getAllSearchedItems(): List<SearchItem> {
-        return searchItems.toList()
-    }
-
-    suspend fun preloadMessages(searchText: String, searchStart: () -> Unit): SearchItem? {
-        val uuid = visitorInteractor.getVisitor()?.uuid ?: return null
-        searchStart()
-        if (this.searchText == searchText) return searchItems.getOrNull(indexCurrentSearchItem)
-        this.searchText = searchText
-        indexCurrentSearchItem = 0
-        indexLastLoadSearchItem = -1
-        canUpdatePositions = false
-        searchItems.clear()
-        val searchResult = messageRepository.searchTimestampsMessages(uuid, searchText)?.messages
-
-        Log.d("SEARCH_LOG", "search count: ${searchResult?.size};")
-        yield()
-
-        var searchAllCount = 0
-        searchResult?.forEach {
-            yield()
-            searchAllCount += when {
-//                it.isFile -> it.attachmentName?.convertTextToNormalString(arrayListOf())?.countContains(searchText).apply { Log.d("SEARCH_LOG", "countContains 1 res: $this") } ?: 0
-                it.isText -> it.message?.convertTextToNormalString(arrayListOf())?.countContains(searchText).apply { Log.d("SEARCH_LOG", "countContains 2 res: $this") } ?: 0
-                else -> 0
-            }
-        }
-
-        Log.d("SEARCH_LOG", "searchAllCount: ${searchAllCount};")
-
-        if (searchResult.isNullOrEmpty() || searchAllCount == 0) {
-            return null
-        } else {
-            var messagePosition: Int? = 0
-            var currentSearchPosition = 0
-            searchResult.forEach { networkMessage ->
-                yield()
-                messagePosition = if (messagePosition != null) {
-                    val messageId = if (networkMessage.isReply) networkMessage.id else networkMessage.idFromChannel
-                    if (messageId == null) {
-                        null
-                    } else {
-                        messageRepository.getPositionByTimestamp(
-                            id = messageId,
-                            timestamp = networkMessage.timestamp
-                        ).apply {
-                            if (this != null) {
-                                indexLastLoadSearchItem++
-                            }
-                        }
-                    }
-                } else {
-                    null
-                }
-                val countMatchInMsg = when {
-//                    networkMessage.isFile -> networkMessage.attachmentName?.convertTextToNormalString(arrayListOf())?.countContains(searchText).apply { Log.d("SEARCH_LOG", "countContains 3 res: $this") } ?: 0
-                    networkMessage.isText -> networkMessage.message?.convertTextToNormalString(arrayListOf())?.countContains(searchText).apply { Log.d("SEARCH_LOG", "countContains 4 res: $this") } ?: 0
-                    else -> 0
-                }
-                Log.d("SEARCH_LOG", "countMatchInMsg: $countMatchInMsg; messagePosition: $messagePosition; networkMessage: $networkMessage;")
-                for(i in 1..countMatchInMsg) {
-                    yield()
-                    currentSearchPosition++
-                    searchItems.add(
-                        SearchItem(
-                            id = if (networkMessage.isReply) networkMessage.id else networkMessage.idFromChannel,
-                            timestamp = networkMessage.timestamp,
-                            searchPosition = currentSearchPosition,
-                            positionMatchInMsg = i,
-                            allCount = searchAllCount,
-                            scrollPosition = messagePosition,
-                            isLast = (currentSearchPosition == 1) || (currentSearchPosition == searchAllCount),
-                        )
-                    )
-                }
-                canUpdatePositions = true
-                if (wantUpdatePositions) {
-                    updateMessagePosition(null)
-                }
-            }
-        }
-
-        searchItems.forEach {
-            Log.d("SEARCH_LOG", "searchItems item: ${it};")
-        }
-
-        val firstItem = searchItems.firstOrNull()
-        val secondItem = searchItems.getOrNull(1)
-        if ((firstItem != null && firstItem.scrollPosition == null) ||
-            (secondItem != null && secondItem.scrollPosition == null)) {
-            additionalLoadingMessages()
-        }
-        return firstItem.apply {
-            Log.d("SEARCH_LOG", "searchItems first: ${this};")
-        }
-    }
-
-    private suspend fun uploadMessages(visitor: Visitor, startTime: Long) {
-        val firstMessageTime = messageRepository.getTimeFirstMessage() ?: return
-
-        val messages = messageRepository.uploadMessages(
-            uuid = visitor.uuid,
-            startTime = startTime,
-            endTime = firstMessageTime,
-            updateReadPoint = { false },
-            syncMessagesAcrossDevices = {},
-            allMessageLoaded = { allMessageLoaded = true },
-            notAllMessageLoaded = { allMessageLoaded = false },
-            getPersonPreview = { personId ->
-                personInteractor.getPersonPreview(personId, visitor.token)
-            },
-            getFileInfo = messageRepository::getFileInfo,
-            updateSearchMessagePosition = ::updateMessagePosition
-        )
-        messageRepository.updatePersonNames(messages, personInteractor::updatePersonName)
-
-        if (allMessageLoaded) return
-
-        val postMessages = messageRepository.uploadMessages(
-            uuid = visitor.uuid,
-            startTime = null,
-            endTime = startTime,
-            updateReadPoint = { false },
-            syncMessagesAcrossDevices = {},
-            allMessageLoaded = { allMessageLoaded = true },
-            notAllMessageLoaded = { allMessageLoaded = false },
-            getPersonPreview = { personId ->
-                personInteractor.getPersonPreview(personId, visitor.token)
-            },
-            getFileInfo = messageRepository::getFileInfo,
-            updateSearchMessagePosition = ::updateMessagePosition
-        )
-        messageRepository.updatePersonNames(postMessages, personInteractor::updatePersonName)
-    }
-
-    private suspend fun additionalLoadingMessages() {
-        val visitor = visitorInteractor.getVisitor() ?: return
-
-        if (indexLastLoadSearchItem == searchItems.size - 1) return
-        if (indexCurrentSearchItem < indexLastLoadSearchItem) return
-        if (allMessageLoaded) return
-
-        yield()
-        if (indexCurrentSearchItem == 0) {
-            val startTime = searchItems.getOrNull(1)?.timestamp ?: searchItems.firstOrNull()?.timestamp
-            startTime?.let { time ->
-                uploadMessages(
-                    visitor,
-                    time
-                )
-            }
-        } else {
-            uploadMessages(
-                visitor,
-                searchItems[indexLastLoadSearchItem + 1].timestamp
-            )
-        }
-        fillMessagePosition()
-    }
-
-    suspend fun onSearchTopClick(): SearchItem? {
-        if (indexCurrentSearchItem == searchItems.size - 1) {
-            return null
-        }
-        indexCurrentSearchItem++
-        fillMessagePosition()
-        additionalLoadingMessages()
-        return searchItems.getOrNull(indexCurrentSearchItem)
-    }
-
-    fun onSearchBottomClick(): SearchItem? {
-        if (indexCurrentSearchItem == 0) {
-            return null
-        }
-        indexCurrentSearchItem--
-        return searchItems.getOrNull(indexCurrentSearchItem)
-    }
-
-    private suspend fun fillMessagePosition() {
-        run loop@{
-            searchItems.forEachIndexed { index, item ->
-                yield()
-                if (item.scrollPosition != null) {
-                    if (index > indexLastLoadSearchItem) {
-                        indexLastLoadSearchItem = index
-                    }
-                    return@forEachIndexed
-                }
-                val messagePosition = if (item.id == null) {
-                    return@loop
-                } else {
-                    messageRepository.getPositionByTimestamp(
-                        id = item.id,
-                        timestamp = item.timestamp
-                    ) ?: return@loop
-                }
-                searchItems[index] = item.copy(scrollPosition = messagePosition)
-                if (index > indexLastLoadSearchItem) {
-                    indexLastLoadSearchItem = index
-                }
-            }
-        }
-    }
-
-    suspend fun updateMessagePosition(insertedMessages: List<MessageEntity>?) {
-        if (!canUpdatePositions) {
-            wantUpdatePositions = true
-            return
-        }
-        run loop@{
-            searchItems.forEachIndexed { index, item ->
-                val messagePosition = if (item.id == null) {
-                    return@loop
-                } else {
-                    messageRepository.getPositionByTimestamp(
-                        id = item.id,
-                        timestamp = item.timestamp
-                    ) ?: return@loop
-                }
-                val offset = insertedMessages?.count { it.timestamp > item.timestamp } ?: 0
-                searchItems[index] = item.apply {
-                    scrollPosition = messagePosition + offset
-                }
-            }
-            wantUpdatePositions = false
-        }
-    }
-}
-
-data class SearchItem(
-    val id: String?,
-    val timestamp: Long,
-    val searchPosition: Int,
-    val positionMatchInMsg: Int,
-    val allCount: Int,
-    var scrollPosition: Int?,
-    val isLast: Boolean
-)
\ No newline at end of file
Index: chat/src/main/res/layout/com_crafttalk_chat_item_server_image_message.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_item_server_image_message.xml b/chat/src/main/res/layout/com_crafttalk_chat_item_server_image_message.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_item_server_image_message.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,97 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:layout_marginStart="@dimen/com_crafttalk_chat_message_margin_start"
-    android:layout_marginTop="@dimen/com_crafttalk_chat_message_margin_top"
-    android:layout_marginEnd="@dimen/com_crafttalk_chat_message_margin_end"
-    android:layout_marginBottom="@dimen/com_crafttalk_chat_message_margin_bottom">
-
-    <include
-        android:id="@+id/include_date"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        layout="@layout/com_crafttalk_chat_include_date_message" />
-
-    <View
-        android:id="@+id/content_container"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/include_date"
-        app:layout_constraintEnd_toEndOf="@id/barrier_image_end"
-        app:layout_constraintBottom_toBottomOf="@id/barrier_image_bottom"
-        tools:background="@drawable/com_crafttalk_chat_background_item_simple_server_message" />
-
-    <ImageView
-        android:id="@+id/server_image"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:scaleType="fitXY"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/include_date"
-        tools:layout_width="150dp"
-        tools:layout_height="150dp"
-        tools:src="@tools:sample/avatars"
-        tools:padding="10dp"
-        tools:visibility="visible" />
-
-    <include
-        android:id="@+id/server_image_warning"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        layout="@layout/com_crafttalk_chat_include_media_warning"
-        android:visibility="gone"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/include_date"
-        tools:layout_width="150dp"
-        tools:layout_height="150dp"
-        tools:visibility="gone" />
-
-    <TextView
-        android:id="@+id/download_file"
-        android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        android:text="@string/com_crafttalk_chat_download"
-        android:gravity="center"
-        android:padding="8dp"
-        android:layout_marginTop="@dimen/com_crafttalk_chat_download_btn_margin_top"
-        app:layout_constraintStart_toStartOf="@id/server_image"
-        app:layout_constraintEnd_toEndOf="@id/server_image"
-        app:layout_constraintTop_toBottomOf="@id/server_image"
-        tools:visibility="visible" />
-
-    <androidx.constraintlayout.widget.Barrier
-        android:id="@+id/barrier_image_end"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        app:barrierDirection="end"
-        app:constraint_referenced_ids="server_image,server_image_warning" />
-
-    <androidx.constraintlayout.widget.Barrier
-        android:id="@+id/barrier_image_bottom"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        app:barrierDirection="bottom"
-        app:constraint_referenced_ids="server_image,server_image_warning" />
-
-    <androidx.constraintlayout.widget.Barrier
-        android:id="@+id/barrier_content_bottom"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        app:barrierDirection="bottom"
-        app:constraint_referenced_ids="server_image,server_image_warning,download_file" />
-
-    <include
-        android:id="@+id/include_message_info"
-        android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        layout="@layout/com_crafttalk_chat_include_server_message_info"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/barrier_content_bottom" />
-
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/repository/IConditionRepository.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/repository/IConditionRepository.kt b/chat/src/main/java/com/crafttalk/chat/domain/repository/IConditionRepository.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/repository/IConditionRepository.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,30 +0,0 @@
-package com.crafttalk.chat.domain.repository
-
-import com.crafttalk.chat.initialization.ChatMessageListener
-import com.crafttalk.chat.presentation.ChatInternetConnectionListener
-import com.crafttalk.chat.utils.ChatStatus
-
-interface IConditionRepository {
-    fun setInternetConnectionListener(listener: ChatInternetConnectionListener)
-    fun setMessageListener(listener: ChatMessageListener)
-    fun setStatusChat(newStatus: ChatStatus)
-    fun getStatusChat(): ChatStatus
-    fun createSessionChat()
-    fun destroySessionChat()
-    fun dropChat()
-
-    // проверка вся ли история загружена
-    fun getFlagAllHistoryLoaded(): Boolean
-    fun saveFlagAllHistoryLoaded(isAllHistoryLoaded: Boolean)
-    fun deleteFlagAllHistoryLoaded()
-
-    fun getCurrentReadMessageTime(): Long
-    fun getCountUnreadMessages(): Int
-    fun saveCurrentReadMessageTime(currentReadMessageTime: Long)
-    fun saveCountUnreadMessages(countUnreadMessages: Int)
-    fun deleteCurrentReadMessageTime()
-
-    // провека наличия сообщения в бд
-    suspend fun getStatusExistenceMessages(): Boolean
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/helper/mappers/modelSearchMapper.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/helper/mappers/modelSearchMapper.kt b/chat/src/main/java/com/crafttalk/chat/presentation/helper/mappers/modelSearchMapper.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/helper/mappers/modelSearchMapper.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,72 +0,0 @@
-package com.crafttalk.chat.presentation.helper.mappers
-
-import android.text.SpannableString
-import android.text.Spanned
-import android.text.style.BackgroundColorSpan
-import com.crafttalk.chat.domain.interactors.SearchItem
-import com.crafttalk.chat.presentation.model.*
-import com.crafttalk.chat.utils.ChatAttr
-
-fun messageSearchMapper(
-    messageModel: MessageModel,
-    searchText: String,
-    currentSearchItem: SearchItem?,
-    allSearchedItems: List<SearchItem>
-): MessageModel {
-    if (allSearchedItems.find { it.id == messageModel.id } == null) return messageModel
-    when (messageModel) {
-        is TextMessageItem -> selectText(messageModel.id, messageModel.message, searchText, currentSearchItem)
-        is InfoMessageItem -> selectText(messageModel.id, messageModel.message, searchText, currentSearchItem)
-        is WidgetMessageItem -> messageModel.message?.let { selectText(messageModel.id, it, searchText, currentSearchItem) }
-        is UnionMessageItem -> selectText(messageModel.id, messageModel.message, searchText, currentSearchItem)
-        is FileMessageItem -> selectText(messageModel.id, messageModel.document.name, searchText, currentSearchItem)
-        else -> {}
-    }
-    return messageModel
-}
-
-private fun selectText(
-    messageId: String,
-    spannableString: SpannableString,
-    searchText: String,
-    currentSearchItem: SearchItem?
-): SpannableString {
-    var indexStart = spannableString.toString().indexOf(searchText, ignoreCase = true)
-    var numberCoincidences = 1
-    if (indexStart != -1) {
-        spannableString.setSpan(
-            BackgroundColorSpan(
-                if (
-                    numberCoincidences == currentSearchItem?.positionMatchInMsg &&
-                    (currentSearchItem.id != null && messageId == currentSearchItem.id)
-                ) ChatAttr.getInstance().colorCurrentSelectSearchText
-                else ChatAttr.getInstance().colorSelectSearchText
-            ),
-            indexStart,
-            indexStart + searchText.length,
-            Spanned.SPAN_EXCLUSIVE_EXCLUSIVE
-        )
-    }
-
-    while (indexStart != -1) {
-        indexStart = spannableString.toString().indexOf(searchText, indexStart + 1, ignoreCase = true)
-        numberCoincidences++
-
-        if (indexStart != -1) {
-            spannableString.setSpan(
-                BackgroundColorSpan(
-                    if (
-                        numberCoincidences == currentSearchItem?.positionMatchInMsg &&
-                        (currentSearchItem.id != null && messageId == currentSearchItem.id)
-                    ) ChatAttr.getInstance().colorCurrentSelectSearchText
-                    else ChatAttr.getInstance().colorSelectSearchText
-                ),
-                indexStart,
-                indexStart + searchText.length,
-                Spanned.SPAN_EXCLUSIVE_EXCLUSIVE
-            )
-        }
-    }
-
-    return spannableString
-}
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_ic_file_downloading.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_ic_file_downloading.xml b/chat/src/main/res/drawable/com_crafttalk_chat_ic_file_downloading.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_ic_file_downloading.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,10 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="24dp"
-    android:height="24dp"
-    android:viewportWidth="24"
-    android:viewportHeight="24"
-    android:tint="#FFFFFF">
-    <path
-        android:fillColor="@android:color/white"
-        android:pathData="M19,6.41L17.59,5 12,10.59 6.41,5 5,6.41 10.59,12 5,17.59 6.41,19 12,13.41 17.59,19 19,17.59 13.41,12z"/>
-</vector>
Index: chat/src/main/java/com/crafttalk/chat/data/local/db/migrations/Migration_1_2.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/local/db/migrations/Migration_1_2.kt b/chat/src/main/java/com/crafttalk/chat/data/local/db/migrations/Migration_1_2.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/local/db/migrations/Migration_1_2.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,99 +0,0 @@
-package com.crafttalk.chat.data.local.db.migrations
-
-import androidx.room.migration.Migration
-import androidx.sqlite.db.SupportSQLiteDatabase
-import com.crafttalk.chat.data.local.db.entity.MessageEntity
-
-object Migration_1_2: Migration(1, 2) {
-    override fun migrate(database: SupportSQLiteDatabase) {
-
-        database.execSQL("CREATE TABLE ${MessageEntity.TABLE_NAME_BACKUP}(" +
-                " uuid TEXT NOT NULL," +
-                " id TEXT NOT NULL PRIMARY KEY," +
-                " is_reply INTEGER NOT NULL," +
-                " message_type INTEGER NOT NULL," +
-                " parent_msg_id TEXT," +
-                " timestamp INTEGER NOT NULL," +
-                " message TEXT," +
-                " span_structure_list TEXT NOT NULL," +
-                " actions TEXT," +
-                " attachment_url TEXT," +
-                " attachment_type TEXT," +
-                " attachment_name TEXT," +
-                " attachment_size INTEGER," +
-                " operator_id TEXT," +
-                " operator_preview TEXT," +
-                " operator_name TEXT," +
-                " height INTEGER," +
-                " width INTEGER" +
-                ")")
-
-        database.execSQL("INSERT INTO ${MessageEntity.TABLE_NAME_BACKUP} SELECT" +
-                " uuid," +
-                " id," +
-                " is_reply," +
-                " message_type," +
-                " parent_msg_id," +
-                " timestamp," +
-                " message," +
-                " spanStructureList," +
-                " actions," +
-                " attachment_url," +
-                " attachment_type," +
-                " attachment_name," +
-                " attachment_size," +
-                " operator_id," +
-                " operator_preview," +
-                " operator_name," +
-                " height," +
-                " width" +
-                " FROM ${MessageEntity.TABLE_NAME}")
-
-        database.execSQL("DROP TABLE ${MessageEntity.TABLE_NAME}")
-
-        database.execSQL("CREATE TABLE ${MessageEntity.TABLE_NAME}(" +
-                " uuid TEXT NOT NULL," +
-                " id TEXT NOT NULL PRIMARY KEY," +
-                " is_reply INTEGER NOT NULL," +
-                " message_type INTEGER NOT NULL," +
-                " parent_msg_id TEXT," +
-                " timestamp INTEGER NOT NULL," +
-                " message TEXT," +
-                " span_structure_list TEXT NOT NULL," +
-                " actions TEXT," +
-                " attachment_url TEXT," +
-                " attachment_type TEXT," +
-                " attachment_name TEXT," +
-                " attachment_size INTEGER," +
-                " operator_id TEXT," +
-                " operator_preview TEXT," +
-                " operator_name TEXT," +
-                " height INTEGER," +
-                " width INTEGER" +
-                ")")
-
-        database.execSQL("INSERT INTO ${MessageEntity.TABLE_NAME} SELECT" +
-                " uuid," +
-                " id," +
-                " is_reply," +
-                " message_type," +
-                " parent_msg_id," +
-                " timestamp," +
-                " message," +
-                " span_structure_list," +
-                " actions," +
-                " attachment_url," +
-                " attachment_type," +
-                " attachment_name," +
-                " attachment_size," +
-                " operator_id," +
-                " operator_preview," +
-                " operator_name," +
-                " height," +
-                " width" +
-                " FROM ${MessageEntity.TABLE_NAME_BACKUP}")
-
-        database.execSQL("DROP TABLE ${MessageEntity.TABLE_NAME_BACKUP}")
-
-    }
-}
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_ic_search_close.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_ic_search_close.xml b/chat/src/main/res/drawable/com_crafttalk_chat_ic_search_close.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_ic_search_close.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,6 +0,0 @@
-<vector android:height="24dp"
-    android:viewportHeight="24" android:viewportWidth="24"
-    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
-    <path android:fillColor="#000000" android:pathData="M19,6.41L17.59,5 12,10.59 6.41,5 5,6.41 10.59,12 5,17.59 6.41,19 12,13.41 17.59,19 19,17.59 13.41,12z"/>
-</vector>
-
Index: chat/src/main/res/layout/com_crafttalk_chat_layout_chat.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_layout_chat.xml b/chat/src/main/res/layout/com_crafttalk_chat_layout_chat.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_layout_chat.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,192 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent">
-
-    <include
-        android:id="@+id/search_switch_place"
-        android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        layout="@layout/com_crafttalk_chat_include_search_switch"
-        android:visibility="gone"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        tools:visibility="gone" />
-
-    <androidx.recyclerview.widget.RecyclerView
-        android:id="@+id/list_with_message"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
-        android:paddingTop="60dp"
-        android:clipToPadding="false"
-        app:stackFromEnd="false"
-        app:reverseLayout="true"
-        android:paddingBottom="10dp"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/search_switch_place"
-        app:layout_constraintBottom_toTopOf="@id/reply_preview"
-        tools:listitem="@layout/com_crafttalk_chat_item_server_text_message"
-        tools:itemCount="1" />
-
-    <TextView
-        android:id="@+id/upload_history_btn"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="@string/com_crafttalk_chat_upload_history"
-        android:textColor="@color/com_crafttalk_chat_white"
-        android:background="@drawable/com_crafttalk_chat_background_upload_history"
-        android:visibility="gone"
-        android:paddingVertical="8dp"
-        android:paddingHorizontal="16dp"
-        android:layout_marginTop="16dp"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        tools:visibility="gone" />
-
-    <ProgressBar
-        android:id="@+id/upload_history_loading"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:indeterminateDrawable="@drawable/com_crafttalk_chat_spinner_ring"
-        android:indeterminateOnly="true"
-        android:layout_marginTop="16dp"
-        android:visibility="gone"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        tools:visibility="gone" />
-
-    <ImageView
-        android:id="@+id/scroll_to_down"
-        android:layout_width="52dp"
-        android:layout_height="52dp"
-        android:src="@drawable/com_crafttalk_chat_ic_scroll_down"
-        android:layout_marginEnd="16dp"
-        android:layout_marginBottom="52dp"
-        android:visibility="gone"
-        app:layout_constraintEnd_toEndOf="@id/list_with_message"
-        app:layout_constraintBottom_toBottomOf="@id/list_with_message"
-        tools:visibility="visible" />
-
-    <TextView
-        android:id="@+id/count_unread_message"
-        android:layout_width="22dp"
-        android:layout_height="22dp"
-        android:background="@drawable/com_crafttalk_chat_background_count_unread_message"
-        android:textColor="#fff"
-        android:gravity="center"
-        android:visibility="gone"
-        app:layout_constraintBottom_toBottomOf="@id/scroll_to_down"
-        app:layout_constraintEnd_toEndOf="@id/scroll_to_down"
-        tools:text="1+"
-        tools:visibility="visible" />
-
-    <TextView
-        android:id="@+id/state_action_operator"
-        android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        android:text="@string/com_crafttalk_chat_state_action_operator"
-        android:background="@color/com_crafttalk_chat_white_transparent_75"
-        android:gravity="start"
-        android:paddingStart="8dp"
-        android:paddingBottom="8dp"
-        android:fontFamily="@font/com_crafttalk_chat_ubuntu_medium"
-        android:textFontWeight="700"
-        android:visibility="gone"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintBottom_toTopOf="@id/lower_limit"
-        tools:visibility="gone" />
-
-    <include
-        android:id="@+id/reply_preview"
-        android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        layout="@layout/com_crafttalk_chat_include_reply_preview"
-        android:visibility="gone"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintBottom_toTopOf="@id/lower_limit"
-        tools:visibility="visible" />
-
-    <TextView
-        android:id="@+id/company_name"
-        android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        android:text="@string/com_crafttalk_chat_name_company"
-        android:background="@color/com_crafttalk_chat_white_transparent_75"
-        android:gravity="right"
-        android:paddingEnd="8dp"
-        android:paddingBottom="8dp"
-        android:fontFamily="@font/com_crafttalk_chat_ubuntu_medium"
-        android:textFontWeight="700"
-        android:visibility="gone"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintBottom_toTopOf="@id/lower_limit"
-        tools:visibility="gone" />
-
-    <androidx.coordinatorlayout.widget.CoordinatorLayout
-        android:id="@+id/warning_input_container_cl"
-        android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        android:background="@android:color/transparent"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintBottom_toTopOf="@id/lower_limit" />
-
-    <View
-        android:id="@+id/lower_limit"
-        android:layout_width="0dp"
-        android:layout_height="2dp"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintBottom_toTopOf="@id/entry_field"
-        tools:background="@color/com_crafttalk_chat_default_color_main" />
-
-    <ImageView
-        android:id="@+id/voice_input"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:visibility="gone"
-        android:padding="12dp"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintBottom_toBottomOf="parent"
-        tools:src="@drawable/com_crafttalk_chat_ic_voice_mic_off"
-        tools:visibility="visible" />
-
-    <EditText
-        android:id="@+id/entry_field"
-        android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        android:minHeight="48dp"
-        android:maxHeight="@dimen/com_crafttalk_chat_max_height_entry_field_message"
-        android:hint="@string/com_crafttalk_chat_entry_field_hint"
-        android:inputType="textMultiLine|textCapSentences|textAutoCorrect"
-        android:background="@null"
-        android:gravity="top"
-        android:paddingStart="15dp"
-        android:paddingTop="12dp"
-        android:paddingBottom="12dp"
-        app:layout_constraintStart_toEndOf="@id/voice_input"
-        app:layout_constraintEnd_toStartOf="@id/send_message"
-        app:layout_constraintBottom_toBottomOf="parent"
-        tools:text="" />
-
-    <ImageView
-        android:id="@+id/send_message"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:padding="12dp"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintBottom_toBottomOf="parent"
-        tools:src="@drawable/com_crafttalk_chat_ic_attach_file" />
-
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_background_bottom_item_action.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_background_bottom_item_action.xml b/chat/src/main/res/drawable/com_crafttalk_chat_background_bottom_item_action.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_background_bottom_item_action.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <item android:top="-2dp" >
-        <shape android:shape="rectangle">
-            <solid android:color="@color/com_crafttalk_chat_default_color_bg_server_action"/>
-            <stroke android:color="@color/com_crafttalk_chat_default_color_borders_server_action" android:width="1dp"/>
-            <corners android:bottomLeftRadius="5dp" android:bottomRightRadius="5dp"/>
-        </shape>
-    </item>
-
-</layer-list>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/di/scopes.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/di/scopes.kt b/chat/src/main/java/com/crafttalk/chat/di/scopes.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/di/scopes.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,7 +0,0 @@
-package com.crafttalk.chat.di
-
-import javax.inject.Scope
-
-@Scope
-@Retention(AnnotationRetention.RUNTIME)
-annotation class ChatScope
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/helper/file/RequestHelper.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/helper/file/RequestHelper.kt b/chat/src/main/java/com/crafttalk/chat/data/helper/file/RequestHelper.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/helper/file/RequestHelper.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,63 +0,0 @@
-package com.crafttalk.chat.data.helper.file
-
-import android.content.Context
-import android.graphics.Bitmap
-import android.net.Uri
-import android.provider.MediaStore
-import com.crafttalk.chat.data.ContentTypeValue
-import com.crafttalk.chat.data.helper.converters.file.convertToBase64
-import com.crafttalk.chat.data.helper.converters.file.convertToFile
-import com.crafttalk.chat.domain.entity.file.TypeFile
-import okhttp3.MediaType.Companion.toMediaTypeOrNull
-import okhttp3.MultipartBody
-import okhttp3.RequestBody
-import java.io.File
-import javax.inject.Inject
-
-class RequestHelper
-@Inject constructor(
-    private val context: Context
-) {
-
-    fun generateMultipartRequestBody(uri: Uri): RequestBody? {
-        return context.contentResolver.openInputStream(uri)?.readBytes()?.let { bytes ->
-            RequestBody.create(
-                MultipartBody.FORM,
-                bytes
-            )
-        }
-    }
-
-    fun generateMultipartRequestBody(file: File): RequestBody {
-        return file.readBytes().let { bytes ->
-            RequestBody.create(
-                MultipartBody.FORM,
-                bytes
-            )
-        }
-    }
-
-    fun generateMultipartRequestBody(bitmap: Bitmap, mediaName: String): RequestBody {
-        return convertToFile(bitmap, context, mediaName).readBytes().let { bytes ->
-            RequestBody.create(
-                ContentTypeValue.MEDIA.value.toMediaTypeOrNull(),
-                bytes
-            )
-        }
-    }
-
-    fun generateJsonRequestBody(uri: Uri, type: TypeFile): String? {
-        return when(type) {
-            TypeFile.FILE -> context.contentResolver.openInputStream(uri)?.run(::convertToBase64)
-            TypeFile.IMAGE -> {
-                generateJsonRequestBody(
-                    MediaStore.Images.Media.getBitmap(context.contentResolver, uri)
-                )
-            }
-            else -> null
-        }
-    }
-
-    fun generateJsonRequestBody(bitmap: Bitmap): String = convertToBase64(bitmap)
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/helper/mappers/modelMapper.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/helper/mappers/modelMapper.kt b/chat/src/main/java/com/crafttalk/chat/presentation/helper/mappers/modelMapper.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/helper/mappers/modelMapper.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,199 +0,0 @@
-package com.crafttalk.chat.presentation.helper.mappers
-
-import android.content.Context
-import android.text.SpannableString
-import com.crafttalk.chat.R
-import com.crafttalk.chat.data.local.db.entity.ActionEntity
-import com.crafttalk.chat.data.local.db.entity.ButtonEntity
-import com.crafttalk.chat.data.local.db.entity.MessageEntity
-import com.crafttalk.chat.domain.entity.file.TypeDownloadProgress
-import com.crafttalk.chat.domain.entity.file.TypeFile
-import com.crafttalk.chat.domain.entity.message.MessageType
-import com.crafttalk.chat.domain.entity.message.MessageType.Companion.getMessageTypeByValueType
-import com.crafttalk.chat.domain.entity.message.NetworkButtonColor
-import com.crafttalk.chat.presentation.helper.converters.convertToSpannableString
-import com.crafttalk.chat.presentation.model.*
-import com.crafttalk.chat.utils.ChatAttr
-
-fun messageModelMapper(localMessage: MessageEntity, context: Context): MessageModel {
-    return when {
-        localMessage.messageType == MessageType.TRANSFER_TO_OPERATOR.valueType -> TransferMessageItem(
-            localMessage.id,
-            localMessage.timestamp,
-            if (localMessage.isReply) localMessage.operatorName ?: "Бот" else "Вы",
-            localMessage.operatorPreview
-        )
-        localMessage.message != null && localMessage.messageType == MessageType.INFO_MESSAGE.valueType -> InfoMessageItem(
-            localMessage.id,
-            localMessage.message.convertToSpannableString(false, localMessage.spanStructureList, context),
-            localMessage.timestamp
-        )
-        localMessage.widget != null && localMessage.messageType == MessageType.VISITOR_MESSAGE.valueType -> WidgetMessageItem(
-            id = localMessage.id,
-            message = localMessage.message?.convertToSpannableString(false, localMessage.spanStructureList, context),
-            widgetId = localMessage.widget.widgetId,
-            payload = localMessage.widget.payload,
-            timestamp = localMessage.timestamp,
-            authorName = localMessage.operatorName ?: "Бот",
-            authorPreview = localMessage.operatorPreview,
-            stateCheck = getMessageTypeByValueType(localMessage.messageType)
-        )
-        (localMessage.message != null && localMessage.message.isNotEmpty()) && (localMessage.attachmentUrl == null) -> TextMessageItem(
-            id = localMessage.id,
-            role = if (localMessage.isReply) Role.OPERATOR else Role.USER,
-            message = localMessage.message.convertToSpannableString(!localMessage.isReply, localMessage.spanStructureList, context),
-            actions = localMessage.actions?.let { listActions -> actionModelMapper(listActions) },
-            hasSelectedAction = localMessage.hasSelectedAction(),
-            buttons = localMessage.keyboard?.buttons?.let { listButtons -> buttonModelMapper(listButtons) },
-            hasSelectedButton = localMessage.hasSelectedButton(),
-            repliedMessage = RepliedMessageModel.map(localMessage, context),
-            timestamp = localMessage.timestamp,
-            authorName = if (localMessage.isReply) localMessage.operatorName ?: "Бот" else "Вы",
-            authorPreview = if (localMessage.isReply) localMessage.operatorPreview else null,
-            stateCheck = getMessageTypeByValueType(localMessage.messageType)
-        )
-        (localMessage.message == null || localMessage.message.isEmpty()) && localMessage.attachmentType == TypeFile.GIF -> GifMessageItem(
-            localMessage.id,
-            if (localMessage.isReply) Role.OPERATOR else Role.USER,
-            FileModel(
-                url = localMessage.attachmentUrl!!,
-                name = SpannableString(localMessage.attachmentName ?: ""),
-                size = localMessage.attachmentSize,
-                height = localMessage.height,
-                width = localMessage.width,
-                failLoading = localMessage.height == null || localMessage.height == 0 || localMessage.width == null || localMessage.width == 0
-            ),
-            localMessage.timestamp,
-            if (localMessage.isReply) localMessage.operatorName ?: "Бот" else "Вы",
-            if (localMessage.isReply) localMessage.operatorPreview else null,
-            getMessageTypeByValueType(localMessage.messageType)
-        )
-        (localMessage.message == null || localMessage.message.isEmpty()) && localMessage.attachmentType == TypeFile.IMAGE -> ImageMessageItem(
-            localMessage.id,
-            if (localMessage.isReply) Role.OPERATOR else Role.USER,
-            FileModel(
-                url = localMessage.attachmentUrl!!,
-                name = SpannableString(localMessage.attachmentName ?: ""),
-                size = localMessage.attachmentSize,
-                height = localMessage.height,
-                width = localMessage.width,
-                failLoading = localMessage.height == null || localMessage.height == 0 || localMessage.width == null || localMessage.width == 0
-            ),
-            localMessage.timestamp,
-            if (localMessage.isReply) localMessage.operatorName ?: "Бот" else "Вы",
-            if (localMessage.isReply) localMessage.operatorPreview else null,
-            getMessageTypeByValueType(localMessage.messageType)
-        )
-        (localMessage.message == null || localMessage.message.isEmpty()) && localMessage.attachmentType == TypeFile.FILE -> FileMessageItem(
-            localMessage.id,
-            if (localMessage.isReply) Role.OPERATOR else Role.USER,
-            FileModel(
-                url = localMessage.attachmentUrl!!,
-                name = SpannableString(localMessage.attachmentName ?: ""),
-                size = localMessage.attachmentSize,
-                typeDownloadProgress = localMessage.attachmentDownloadProgressType ?: TypeDownloadProgress.NOT_DOWNLOADED
-            ),
-            localMessage.timestamp,
-            if (localMessage.isReply) localMessage.operatorName ?: "Бот" else "Вы",
-            if (localMessage.isReply) localMessage.operatorPreview else null,
-            getMessageTypeByValueType(localMessage.messageType)
-        )
-        (localMessage.message != null && localMessage.message.isNotEmpty()) && (!localMessage.attachmentUrl.isNullOrEmpty() && !localMessage.attachmentName.isNullOrEmpty() && localMessage.attachmentType != null) -> UnionMessageItem(
-            id = localMessage.id,
-            role = if (localMessage.isReply) Role.OPERATOR else Role.USER,
-            message = localMessage.message.convertToSpannableString(!localMessage.isReply, localMessage.spanStructureList, context),
-            actions = localMessage.actions?.let { listActions -> actionModelMapper(listActions) },
-            hasSelectedAction = localMessage.hasSelectedAction(),
-            buttons = localMessage.keyboard?.buttons?.let { listButtons -> buttonModelMapper(listButtons) },
-            hasSelectedButton = localMessage.hasSelectedButton(),
-            file = FileModel(
-                url = localMessage.attachmentUrl,
-                name = SpannableString(localMessage.attachmentName),
-                height = localMessage.height,
-                width = localMessage.width,
-                size = localMessage.attachmentSize,
-                failLoading = (localMessage.attachmentType in listOf( TypeFile.IMAGE, TypeFile.GIF)) && (localMessage.height == null || localMessage.height == 0 || localMessage.width == null || localMessage.width == 0),
-                type = localMessage.attachmentType,
-                typeDownloadProgress = localMessage.attachmentDownloadProgressType ?: TypeDownloadProgress.NOT_DOWNLOADED
-            ),
-            timestamp = localMessage.timestamp,
-            authorName = if (localMessage.isReply) localMessage.operatorName ?: "Бот" else "Вы",
-            authorPreview = if (localMessage.isReply) localMessage.operatorPreview else null,
-            stateCheck = getMessageTypeByValueType(localMessage.messageType)
-        )
-        else -> DefaultMessageItem(
-            localMessage.id,
-            localMessage.timestamp
-        )
-    }
-}
-
-fun actionModelMapper(listActions: List<ActionEntity>): List<ActionItem>? {
-    if (listActions.isEmpty()) return null
-    return listActions.mapIndexed { position, action ->
-        val backgroundRes = if (listActions.size == 1) {
-            R.drawable.com_crafttalk_chat_background_single_item_action
-        } else {
-            when (position) {
-                0 -> R.drawable.com_crafttalk_chat_background_top_item_action
-                listActions.size - 1 -> R.drawable.com_crafttalk_chat_background_bottom_item_action
-                else -> R.drawable.com_crafttalk_chat_background_item_action
-            }
-        }
-        ActionItem(action.actionId, action.actionText, action.isSelected, backgroundRes)
-    }
-}
-
-fun buttonModelMapper(listButtons: List<List<ButtonEntity>>): List<ButtonsListItem>? {
-    if (listButtons.isEmpty()) return null
-    return listButtons.mapIndexed { positionVerical, horizontalButtons ->
-        ButtonsListItem(
-            horizontalButtons.mapIndexed { positionHorizontal, button ->
-                val textColor = when {
-                    button.color == NetworkButtonColor.PRIMARY && button.selected -> ChatAttr.getInstance().colorPrimaryTextOperatorSelectedButton
-                    button.color == NetworkButtonColor.SECONDARY && button.selected -> ChatAttr.getInstance().colorSecondaryTextOperatorSelectedButton
-                    button.color == NetworkButtonColor.NEGATIVE && button.selected -> ChatAttr.getInstance().colorNegativeTextOperatorSelectedButton
-                    button.color == NetworkButtonColor.PRIMARY && !button.selected -> ChatAttr.getInstance().colorPrimaryTextOperatorButton
-                    button.color == NetworkButtonColor.SECONDARY && !button.selected -> ChatAttr.getInstance().colorSecondaryTextOperatorButton
-                    button.color == NetworkButtonColor.NEGATIVE && !button.selected -> ChatAttr.getInstance().colorNegativeTextOperatorButton
-                    button.selected -> ChatAttr.getInstance().colorTextOperatorSelectedButton
-                    !button.selected -> ChatAttr.getInstance().colorTextOperatorButton
-                    else -> ChatAttr.getInstance().colorTextOperatorButton
-                }
-                val backgroundRes = when {
-                    button.color == NetworkButtonColor.PRIMARY && button.selected -> ChatAttr.getInstance().backgroundPrimaryResOperatorSelectedButton
-                    button.color == NetworkButtonColor.SECONDARY && button.selected -> ChatAttr.getInstance().backgroundSecondaryResOperatorSelectedButton
-                    button.color == NetworkButtonColor.NEGATIVE && button.selected -> ChatAttr.getInstance().backgroundNegativeResOperatorSelectedButton
-                    button.color == NetworkButtonColor.PRIMARY && !button.selected -> ChatAttr.getInstance().backgroundPrimaryResOperatorButton
-                    button.color == NetworkButtonColor.SECONDARY && !button.selected -> ChatAttr.getInstance().backgroundSecondaryResOperatorButton
-                    button.color == NetworkButtonColor.NEGATIVE && !button.selected -> ChatAttr.getInstance().backgroundNegativeResOperatorButton
-                    button.selected -> ChatAttr.getInstance().backgroundResOperatorSelectedButton
-                    !button.selected -> ChatAttr.getInstance().backgroundResOperatorButton
-                    else -> ChatAttr.getInstance().backgroundResOperatorButton
-                }
-
-                val widthItem = (
-                        ChatAttr.getInstance().widthItemOperatorTextMessage -
-                                (horizontalButtons.size - 1) * ChatAttr.getInstance().horizontalSpacingOperatorButton
-                        ) / horizontalButtons.size
-
-                ButtonItem(
-                    id = button.buttonId,
-                    text = button.title,
-                    action = button.action,
-                    typeOperation = button.typeOperation,
-                    isSelected = button.selected,
-                    imageUrl = button.image?.url,
-                    imageEmoji = button.imageEmoji,
-                    textColor = textColor,
-                    backgroundRes = backgroundRes,
-                    width = widthItem.toInt(),
-                    marginTop = if (positionVerical == 0) 0 else (ChatAttr.getInstance().verticalSpacingOperatorButton / 2).toInt(),
-                    marginBottom = if (positionVerical == listButtons.size - 1) 0 else (ChatAttr.getInstance().verticalSpacingOperatorButton / 2).toInt(),
-                    marginStart = if (positionHorizontal == 0) 0 else (ChatAttr.getInstance().horizontalSpacingOperatorButton / 2).toInt(),
-                    marginEnd = if (positionHorizontal == horizontalButtons.size - 1) 0 else (ChatAttr.getInstance().horizontalSpacingOperatorButton / 2).toInt()
-                )
-            }
-        )
-    }
-}
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_ic_voice_mic_on.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_ic_voice_mic_on.xml b/chat/src/main/res/drawable/com_crafttalk_chat_ic_voice_mic_on.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_ic_voice_mic_on.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,9 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="24dp"
-    android:height="24dp"
-    android:viewportWidth="24"
-    android:viewportHeight="24">
-  <path
-      android:fillColor="@color/com_crafttalk_chat_default_color_main"
-      android:pathData="M12,15c1.66,0 2.99,-1.34 2.99,-3L15,6c0,-1.66 -1.34,-3 -3,-3S9,4.34 9,6v6c0,1.66 1.34,3 3,3zM17.3,12c0,3 -2.54,5.1 -5.3,5.1S6.7,15 6.7,12L5,12c0,3.42 2.72,6.23 6,6.72L11,22h2v-3.28c3.28,-0.48 6,-3.3 6,-6.72h-1.7z"/>
-</vector>
Index: chat/src/main/java/com/crafttalk/chat/utils/ChatStatus.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/utils/ChatStatus.kt b/chat/src/main/java/com/crafttalk/chat/utils/ChatStatus.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/utils/ChatStatus.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,8 +0,0 @@
-package com.crafttalk.chat.utils
-
-enum class ChatStatus {
-    ON_CHAT_SCREEN_FOREGROUND_APP,
-    NOT_ON_CHAT_SCREEN_FOREGROUND_APP,
-    ON_CHAT_SCREEN_BACKGROUND_APP,
-    NOT_ON_CHAT_SCREEN_BACKGROUND_APP
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/helper/converters/file/base64Converter.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/helper/converters/file/base64Converter.kt b/chat/src/main/java/com/crafttalk/chat/data/helper/converters/file/base64Converter.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/helper/converters/file/base64Converter.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,16 +0,0 @@
-package com.crafttalk.chat.data.helper.converters.file
-
-import android.graphics.Bitmap
-import android.util.Base64
-import java.io.ByteArrayOutputStream
-import java.io.InputStream
-
-fun convertToBase64(bitmap: Bitmap): String {
-    val byteArrayOutputStream = ByteArrayOutputStream()
-    bitmap.compress(Bitmap.CompressFormat.PNG, 100, byteArrayOutputStream)
-    return Base64.encodeToString(byteArrayOutputStream.toByteArray(), Base64.DEFAULT)
-}
-
-fun convertToBase64(inputStream: InputStream): String {
-    return Base64.encodeToString(inputStream.readBytes(), Base64.DEFAULT)
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/helper/ui/keyboard.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/helper/ui/keyboard.kt b/chat/src/main/java/com/crafttalk/chat/presentation/helper/ui/keyboard.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/helper/ui/keyboard.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,10 +0,0 @@
-package com.crafttalk.chat.presentation.helper.ui
-
-import android.content.Context
-import android.view.View
-import android.view.inputmethod.InputMethodManager
-
-fun hideSoftKeyboard(view: View) {
-    val inputManager = view.context.getSystemService(Context.INPUT_METHOD_SERVICE) as? InputMethodManager
-    inputManager?.hideSoftInputFromWindow(view.windowToken, 0)
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/helper/file_viewer_helper/gellery/PickFileContract.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/helper/file_viewer_helper/gellery/PickFileContract.kt b/chat/src/main/java/com/crafttalk/chat/presentation/helper/file_viewer_helper/gellery/PickFileContract.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/helper/file_viewer_helper/gellery/PickFileContract.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,46 +0,0 @@
-package com.crafttalk.chat.presentation.helper.file_viewer_helper.gellery
-
-import android.app.Activity
-import android.content.Context
-import android.content.Intent
-import android.net.Uri
-import androidx.activity.result.contract.ActivityResultContract
-import com.crafttalk.chat.domain.entity.file.TypeFile
-import com.crafttalk.chat.presentation.model.TypeMultiple
-
-class PickFileContract : ActivityResultContract<Pair<TypeFile, TypeMultiple>, List<Uri>>() {
-
-    override fun createIntent(context: Context, input: Pair<TypeFile, TypeMultiple>): Intent =
-        Intent(Intent.ACTION_GET_CONTENT).apply {
-            when (input.second) {
-                TypeMultiple.SINGLE -> putExtra(Intent.EXTRA_ALLOW_MULTIPLE, false)
-                TypeMultiple.MULTIPLE -> putExtra(Intent.EXTRA_ALLOW_MULTIPLE, true)
-            }
-            when (input.first) {
-                TypeFile.FILE -> putExtra(Intent.EXTRA_LOCAL_ONLY, true)
-                TypeFile.IMAGE -> {}
-                TypeFile.GIF -> {}
-            }
-            type = input.first.value
-        }
-
-    override fun parseResult(resultCode: Int, intent: Intent?): List<Uri> {
-        val imagesUriList = mutableListOf<Uri>()
-        if (resultCode == Activity.RESULT_OK) {
-            if (intent?.clipData != null) {
-                val clipData = intent.clipData
-                val itemCount = clipData?.itemCount!!
-                if (itemCount > 0) {
-                    for (i in 0 until itemCount) {
-                        val item = clipData.getItemAt(i)
-                        imagesUriList.add(item.uri)
-                    }
-                }
-            } else if (intent?.data != null) {
-                imagesUriList.add(intent.data!!)
-            }
-        }
-        return imagesUriList
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/feature/file_viewer/BottomSheetFileViewer.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/feature/file_viewer/BottomSheetFileViewer.kt b/chat/src/main/java/com/crafttalk/chat/presentation/feature/file_viewer/BottomSheetFileViewer.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/feature/file_viewer/BottomSheetFileViewer.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,120 +0,0 @@
-package com.crafttalk.chat.presentation.feature.file_viewer
-
-import android.annotation.SuppressLint
-import android.os.Bundle
-import android.view.LayoutInflater
-import android.view.MenuInflater
-import android.view.View
-import android.view.ViewGroup
-import androidx.annotation.MenuRes
-import androidx.appcompat.view.menu.MenuBuilder
-import androidx.core.view.iterator
-import androidx.fragment.app.FragmentManager
-import com.crafttalk.chat.R
-import com.google.android.material.bottomsheet.BottomSheetDialogFragment
-import kotlinx.android.synthetic.main.com_crafttalk_chat_bottom_sheet_file_viewer.*
-
-@SuppressLint("RestrictedApi")
-class BottomSheetFileViewer : BottomSheetDialogFragment() {
-
-    companion object {
-        private const val KEY_MENU = "menu"
-
-        private fun newInstance(builder: Builder): BottomSheetFileViewer {
-            val fragment = BottomSheetFileViewer()
-            val args = Bundle()
-            args.putInt(KEY_MENU, builder.menuRes ?: R.menu.com_crafttalk_chat_options)
-            fragment.arguments = args
-            fragment.listener = builder.listener
-            return fragment
-        }
-    }
-
-    private lateinit var adapter: Adapter
-    private var listener: Listener? = null
-    private val menuInflater by lazy {
-        MenuInflater(context)
-    }
-
-    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {
-        return inflater.inflate(R.layout.com_crafttalk_chat_bottom_sheet_file_viewer, container, false)
-    }
-
-    @SuppressLint("RestrictedApi")
-    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
-        super.onViewCreated(view, savedInstanceState)
-        val arguments = arguments ?: throw IllegalStateException("You need to create this via the builder")
-
-        val options = mutableListOf<Option>()
-        inflate(arguments.getInt(KEY_MENU), options)
-
-        adapter = Adapter {
-            listener?.onModalOptionSelected(this@BottomSheetFileViewer.tag, it)
-            dismissAllowingStateLoss()
-        }
-        list.adapter = adapter
-
-        adapter.setData(options)
-        listener = bindHost()
-    }
-
-    override fun onDestroyView() {
-        super.onDestroyView()
-        listener?.onCloseBottomSheet()
-    }
-
-    private fun inflate(menuRes: Int, options: MutableList<Option>) {
-        val menu = MenuBuilder(context)
-        menuInflater.inflate(menuRes, menu)
-        for (item in menu.iterator()) {
-            item.title?.let { title ->
-                val option = Option(item.itemId, title, item.icon)
-                options.add(option)
-            }
-        }
-    }
-
-    private fun bindHost(): Listener {
-        if (listener == null) {
-            if (parentFragment != null) {
-                if (parentFragment is Listener) {
-                    return parentFragment as Listener
-                }
-            }
-            if (context is Listener) {
-                return context as Listener
-            }
-            throw IllegalStateException("BottomSheetFileViewer must be attached to a parent (activity or fragment) that implements the BottomSheetFileViewer.Listener")
-        }
-        else {
-            return listener as Listener
-        }
-    }
-
-    class Builder {
-        var menuRes: Int? = null
-        var listener: Listener? = null
-
-        fun add(@MenuRes menuRes: Int): Builder {
-            this.menuRes = menuRes
-            return this
-        }
-
-        fun setListener(listener: Listener): Builder {
-            this.listener = listener
-            return this
-        }
-
-        fun show(fragmentManager: FragmentManager): BottomSheetFileViewer {
-            val dialog = newInstance(this)
-            dialog.show(fragmentManager, dialog.tag)
-            return dialog
-        }
-    }
-
-    interface Listener {
-        fun onModalOptionSelected(tag: String?, option: Option)
-        fun onCloseBottomSheet()
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/repository/ConditionRepository.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/repository/ConditionRepository.kt b/chat/src/main/java/com/crafttalk/chat/data/repository/ConditionRepository.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/repository/ConditionRepository.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,100 +0,0 @@
-package com.crafttalk.chat.data.repository
-
-import android.content.SharedPreferences
-import com.crafttalk.chat.data.api.socket.SocketApi
-import com.crafttalk.chat.data.local.db.dao.MessagesDao
-import com.crafttalk.chat.domain.repository.IConditionRepository
-import com.crafttalk.chat.initialization.ChatMessageListener
-import com.crafttalk.chat.presentation.ChatInternetConnectionListener
-import com.crafttalk.chat.utils.ChatStatus
-import javax.inject.Inject
-
-class ConditionRepository
-@Inject constructor(
-    private val messagesDao: MessagesDao,
-    private val pref: SharedPreferences,
-    private val socketApi: SocketApi
-) : IConditionRepository {
-
-    override fun setInternetConnectionListener(listener: ChatInternetConnectionListener) {
-        socketApi.setInternetConnectionListener(listener)
-    }
-
-    override fun setMessageListener(listener: ChatMessageListener) {
-        socketApi.setMessageListener(listener)
-    }
-
-    override fun setStatusChat(newStatus: ChatStatus) {
-        if (newStatus in listOf(ChatStatus.ON_CHAT_SCREEN_FOREGROUND_APP, ChatStatus.ON_CHAT_SCREEN_BACKGROUND_APP)) {
-            socketApi.resetNewMessagesCounter()
-        }
-        socketApi.chatStatus = newStatus
-    }
-
-    override fun getStatusChat(): ChatStatus = socketApi.chatStatus
-
-    override fun createSessionChat() {
-        socketApi.initSocket()
-    }
-
-    override fun destroySessionChat() {
-        socketApi.destroySocket()
-    }
-
-    override fun dropChat() {
-        socketApi.dropChat()
-    }
-
-    override fun getFlagAllHistoryLoaded(): Boolean {
-        return pref.getBoolean(FIELD_IS_ALL_HISTORY_LOADED, false)
-    }
-
-    override fun saveFlagAllHistoryLoaded(isAllHistoryLoaded: Boolean) {
-        val prefEditor = pref.edit()
-        prefEditor.putBoolean(FIELD_IS_ALL_HISTORY_LOADED, isAllHistoryLoaded)
-        prefEditor.apply()
-    }
-
-    override fun deleteFlagAllHistoryLoaded() {
-        val prefEditor = pref.edit()
-        prefEditor.remove(FIELD_IS_ALL_HISTORY_LOADED)
-        prefEditor.apply()
-    }
-
-    override fun getCurrentReadMessageTime(): Long {
-        return pref.getLong(FIELD_CURRENT_READ_MESSAGE_TIME, 0)
-    }
-
-    override fun getCountUnreadMessages(): Int {
-        return pref.getInt(FIELD_COUNT_UNREAD_MESSAGES, 0)
-    }
-
-    override fun saveCurrentReadMessageTime(currentReadMessageTime: Long) {
-        val prefEditor = pref.edit()
-        prefEditor.putLong(FIELD_CURRENT_READ_MESSAGE_TIME, currentReadMessageTime)
-        prefEditor.apply()
-    }
-
-    override fun saveCountUnreadMessages(countUnreadMessages: Int) {
-        val prefEditor = pref.edit()
-        prefEditor.putInt(FIELD_COUNT_UNREAD_MESSAGES, countUnreadMessages)
-        prefEditor.apply()
-    }
-
-    override fun deleteCurrentReadMessageTime() {
-        val prefEditor = pref.edit()
-        prefEditor.remove(FIELD_CURRENT_READ_MESSAGE_TIME)
-        prefEditor.apply()
-    }
-
-    override suspend fun getStatusExistenceMessages(): Boolean {
-        return messagesDao.isNotEmpty()
-    }
-
-    companion object {
-        private const val FIELD_IS_ALL_HISTORY_LOADED = "isAllHistoryLoaded"
-        private const val FIELD_CURRENT_READ_MESSAGE_TIME = "currentReadMessageTime"
-        private const val FIELD_COUNT_UNREAD_MESSAGES = "countUnreadMessages"
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/di/modules/init/NetworkModule.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/di/modules/init/NetworkModule.kt b/chat/src/main/java/com/crafttalk/chat/di/modules/init/NetworkModule.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/di/modules/init/NetworkModule.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,75 +0,0 @@
-package com.crafttalk.chat.di.modules.init
-
-import android.content.Context
-import com.crafttalk.chat.data.api.rest.NotificationApi
-import com.crafttalk.chat.data.api.rest.PersonApi
-import com.crafttalk.chat.data.api.socket.SocketApi
-import com.crafttalk.chat.data.helper.network.CustomCookieJar
-import com.crafttalk.chat.data.helper.network.TLSSocketFactory.Companion.enableTls
-import com.crafttalk.chat.data.local.db.dao.MessagesDao
-import com.crafttalk.chat.di.Base
-import com.crafttalk.chat.utils.ChatParams
-import com.google.gson.Gson
-import dagger.Module
-import dagger.Provides
-import okhttp3.CertificatePinner
-import okhttp3.OkHttpClient
-import retrofit2.Retrofit
-import retrofit2.converter.gson.GsonConverterFactory
-import javax.inject.Singleton
-
-@Module
-class NetworkModule {
-
-    @Singleton
-    @Provides
-    fun provideCertificatePinner(): CertificatePinner? {
-        return ChatParams.certificatePinning?.let {
-            CertificatePinner.Builder()
-                .add(ChatParams.urlChatHost!!, it)
-                .build()
-        }
-    }
-
-    @Singleton
-    @Provides
-    fun provideOkHttpClient(certificate: CertificatePinner?) = OkHttpClient
-        .Builder()
-        .enableTls()
-        .apply {
-            certificate?.let { certificatePinner(it) }
-            ChatParams.fileConnectTimeout?.let { connectTimeout(it, ChatParams.timeUnitTimeout) }
-            ChatParams.fileReadTimeout?.let { readTimeout(it, ChatParams.timeUnitTimeout) }
-            ChatParams.fileWriteTimeout?.let { writeTimeout(it, ChatParams.timeUnitTimeout) }
-            ChatParams.fileCallTimeout?.let { callTimeout(it, ChatParams.timeUnitTimeout) }
-        }
-        .cookieJar(CustomCookieJar())
-        .build()
-
-    @Base
-    @Singleton
-    @Provides
-    fun provideBaseRetrofitClient(okHttpClient: OkHttpClient, gson: Gson) = Retrofit.Builder()
-        .baseUrl("${ChatParams.urlChatScheme}://${ChatParams.urlChatHost}")
-        .client(okHttpClient)
-        .addConverterFactory(GsonConverterFactory.create(gson))
-        .build()
-
-    @Singleton
-    @Provides
-    fun provideNotificationApi(@Base retrofit: Retrofit): NotificationApi = retrofit.create(NotificationApi::class.java)
-
-    @Singleton
-    @Provides
-    fun providePersonApi(@Base retrofit: Retrofit): PersonApi = retrofit.create(PersonApi::class.java)
-
-    @Singleton
-    @Provides
-    fun provideSocketApi(okHttpClient: OkHttpClient, messagesDao: MessagesDao, gson: Gson, context: Context) = SocketApi(
-        okHttpClient,
-        messagesDao,
-        gson,
-        context
-    )
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderUserFileMessage.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderUserFileMessage.kt b/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderUserFileMessage.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderUserFileMessage.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,77 +0,0 @@
-package com.crafttalk.chat.presentation.holders
-
-import android.content.res.ColorStateList
-import android.view.View
-import android.widget.ImageView
-import android.widget.ProgressBar
-import android.widget.TextView
-import androidx.core.view.ViewCompat
-import com.crafttalk.chat.R
-import com.crafttalk.chat.presentation.base.BaseViewHolder
-import com.crafttalk.chat.presentation.helper.extensions.*
-import com.crafttalk.chat.presentation.model.FileMessageItem
-import com.crafttalk.chat.utils.ChatAttr
-
-class HolderUserFileMessage(
-    val view: View,
-    private val clickHandler: (id: String, documentName: String, documentUrl: String) -> Unit
-) : BaseViewHolder<FileMessageItem>(view), View.OnClickListener {
-    private val contentContainer: View? = view.findViewById(R.id.content_container)
-
-    private val fileIcon: ImageView? = view.findViewById(R.id.file_icon)
-    private val progressDownload: ProgressBar? = view.findViewById(R.id.progress_download)
-    private val fileName: TextView? = view.findViewById(R.id.file_name)
-    private val fileSize: TextView? = view.findViewById(R.id.file_size)
-    private val authorName: TextView? = view.findViewById(R.id.author_name)
-    private val authorPreview: ImageView? = view.findViewById(R.id.author_preview)
-    private val time: TextView? = view.findViewById(R.id.time)
-    private val status: ImageView? = view.findViewById(R.id.status)
-    private val date: TextView? = view.findViewById(R.id.date)
-
-    private var id: String? = null
-    private var documentName: String? = null
-    private var documentUrl: String? = null
-
-    init {
-        view.setOnClickListener(this)
-    }
-
-    override fun onClick(view: View) {
-        val correctId = id ?: return
-        val correctDocumentName = documentName ?: return
-        val correctDocumentUrl = documentUrl ?: return
-        clickHandler(correctId, correctDocumentName, correctDocumentUrl)
-    }
-
-    override fun bindTo(item: FileMessageItem) {
-        id = item.id
-        documentName = item.document.name.toString()
-        documentUrl = item.document.url
-
-        date?.setDate(item)
-        // set content
-        authorName?.setAuthor(item)
-        authorPreview?.setAuthorIcon(showAuthorIcon = false)
-        time?.setTime(item)
-        status?.setStatusMessage(item)
-        // set width item and content
-        progressDownload?.setProgressDownloadFile(item.document.typeDownloadProgress)
-        fileIcon?.setFileIcon(item.document.typeDownloadProgress)
-        fileName?.setFileName(
-            file = item.document,
-            colorTextFileName = ChatAttr.getInstance().colorUserFileName,
-            sizeTextFileName = ChatAttr.getInstance().sizeUserFileName
-        )
-        fileSize?.setFileSize(
-            file = item.document,
-            colorTextFileSize = ChatAttr.getInstance().colorUserFileSize,
-            sizeTextFileSize = ChatAttr.getInstance().sizeUserFileSize
-        )
-        // set bg
-        contentContainer?.apply {
-            setBackgroundResource(ChatAttr.getInstance().bgUserMessageResId)
-            ViewCompat.setBackgroundTintList(this, ColorStateList.valueOf(ChatAttr.getInstance().colorBackgroundUserMessage))
-        }
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/local/db/migrations/Migration_2_3.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/local/db/migrations/Migration_2_3.kt b/chat/src/main/java/com/crafttalk/chat/data/local/db/migrations/Migration_2_3.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/local/db/migrations/Migration_2_3.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,13 +0,0 @@
-package com.crafttalk.chat.data.local.db.migrations
-
-import androidx.room.migration.Migration
-import androidx.sqlite.db.SupportSQLiteDatabase
-import com.crafttalk.chat.data.local.db.entity.MessageEntity
-
-object Migration_2_3: Migration(2, 3) {
-    override fun migrate(database: SupportSQLiteDatabase) {
-
-        database.execSQL("ALTER TABLE ${MessageEntity.TABLE_NAME} ADD COLUMN attachment_download_progress_type TEXT DEFAULT NULL")
-
-    }
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/interactors/FileInteractor.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/interactors/FileInteractor.kt b/chat/src/main/java/com/crafttalk/chat/domain/interactors/FileInteractor.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/interactors/FileInteractor.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,68 +0,0 @@
-package com.crafttalk.chat.domain.interactors
-
-import android.graphics.Bitmap
-import com.crafttalk.chat.domain.entity.file.TypeDownloadProgress
-import com.crafttalk.chat.domain.entity.file.File as DomainFile
-import java.io.File as IOFile
-import com.crafttalk.chat.domain.entity.file.TypeUpload
-import com.crafttalk.chat.domain.repository.IFileRepository
-import com.crafttalk.chat.domain.repository.IMessageRepository
-import javax.inject.Inject
-
-class FileInteractor
-@Inject constructor(
-    private val fileRepository: IFileRepository,
-    private val messageRepository: IMessageRepository,
-    private val visitorInteractor: VisitorInteractor
-) {
-
-    fun uploadFile(file: DomainFile, handleUploadFile: (responseCode: Int, responseMessage: String) -> Unit) {
-        val visitor = visitorInteractor.getVisitor() ?: return
-        fileRepository.uploadFile(visitor, file, TypeUpload.MULTIPART, handleUploadFile)
-    }
-
-    fun uploadImage(bitmap: Bitmap, handleUploadFile: (responseCode: Int, responseMessage: String) -> Unit) {
-        val visitor = visitorInteractor.getVisitor() ?: return
-        fileRepository.uploadMediaFile(visitor, bitmap, TypeUpload.MULTIPART, handleUploadFile)
-    }
-
-    fun uploadFiles(listFile: List<DomainFile>, handleUploadFile: (responseCode: Int, responseMessage: String) -> Unit) {
-        listFile.forEach {
-            uploadFile(it, handleUploadFile)
-        }
-    }
-
-    suspend fun downloadDocument(
-        id: String,
-        documentName: String,
-        documentUrl: String,
-        directory: IOFile,
-        openDocument: suspend (file: IOFile) -> Unit,
-        downloadedFail: () -> Unit
-    ) {
-        val documentFile = IOFile(directory, "${id}_${documentName}")
-        val alternativeFile = IOFile(directory, "${id}.${documentName.split(".").last()}")
-
-        when {
-            documentFile.exists() -> openDocument(documentFile)
-            alternativeFile.exists() -> openDocument(alternativeFile)
-            else -> {
-                messageRepository.updateTypeDownloadProgressOfMessageWithAttachment(id, TypeDownloadProgress.DOWNLOADING)
-                fileRepository.downloadDocument(
-                    documentUrl = documentUrl,
-                    documentFile = documentFile,
-                    alternativeFile = alternativeFile,
-                    downloadedSuccess = {
-                        messageRepository.updateTypeDownloadProgressOfMessageWithAttachment(id, TypeDownloadProgress.DOWNLOADED)
-                        openDocument(documentFile)
-                    },
-                    downloadedFail = {
-                        messageRepository.updateTypeDownloadProgressOfMessageWithAttachment(id, TypeDownloadProgress.NOT_DOWNLOADED)
-                        downloadedFail()
-                    }
-                )
-            }
-        }
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/res/layout/com_crafttalk_chat_include_date_message.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_include_date_message.xml b/chat/src/main/res/layout/com_crafttalk_chat_include_date_message.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_include_date_message.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:orientation="vertical"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content">
-
-    <TextView
-        android:id="@+id/date"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:gravity="center"
-        android:layout_gravity="center"
-        android:paddingBottom="20dp"
-        android:fontFamily="@font/com_crafttalk_chat_ubuntu_regular"
-        android:textFontWeight="600"
-        android:visibility="gone"
-        tools:text="12.03.2021"
-        tools:visibility="visible" />
-
-</LinearLayout>
\ No newline at end of file
Index: chat/.gitignore
===================================================================
diff --git a/chat/.gitignore b/chat/.gitignore
deleted file mode 100644
--- a/chat/.gitignore	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,1 +0,0 @@
-/build
Index: chat/src/main/java/com/crafttalk/chat/presentation/base/BaseAdapterWithPagination.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/base/BaseAdapterWithPagination.kt b/chat/src/main/java/com/crafttalk/chat/presentation/base/BaseAdapterWithPagination.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/base/BaseAdapterWithPagination.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,38 +0,0 @@
-package com.crafttalk.chat.presentation.base
-
-import android.annotation.SuppressLint
-import androidx.paging.PagedListAdapter
-import androidx.recyclerview.widget.DiffUtil
-import androidx.recyclerview.widget.RecyclerView
-
-abstract class BaseAdapterWithPagination <T : BaseItem>(
-    private val differCallback: DiffUtil.ItemCallback<T>
-) : PagedListAdapter<T, RecyclerView.ViewHolder>(differCallback) {
-
-    constructor() : this(
-        object : DiffUtil.ItemCallback<T>() {
-            override fun areItemsTheSame(oldItem: T, newItem: T): Boolean {
-                return oldItem.isSame(newItem)
-            }
-
-            @SuppressLint("DiffUtilEquals")
-            override fun areContentsTheSame(oldItem: T, newItem: T): Boolean {
-                return oldItem == newItem
-            }
-        }
-    )
-
-    override fun onBindViewHolder(holder: RecyclerView.ViewHolder, position: Int) {
-        (holder as BaseViewHolder<T>).let {
-            val messageItem = getItem(position)
-            if (messageItem == null) {
-//            holder.clear()
-            } else {
-                it.bindTo(messageItem)
-            }
-        }
-    }
-
-    override fun getItemViewType(position: Int) = getItem(position)?.getLayout() ?: -1
-
-}
\ No newline at end of file
Index: chat/src/main/res/layout/com_crafttalk_chat_item_default_widget.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_item_default_widget.xml b/chat/src/main/res/layout/com_crafttalk_chat_item_default_widget.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_item_default_widget.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,35 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content">
-
-    <View
-        android:id="@+id/content_container"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        app:layout_constraintStart_toStartOf="@id/server_message"
-        app:layout_constraintTop_toTopOf="@id/server_message"
-        app:layout_constraintEnd_toEndOf="@id/server_message"
-        app:layout_constraintBottom_toBottomOf="@id/server_message"
-        tools:background="@drawable/com_crafttalk_chat_background_item_simple_server_message" />
-
-    <TextView
-        android:id="@+id/server_message"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:gravity="start"
-        android:autoLink="email|web"
-        android:paddingStart="@dimen/com_crafttalk_chat_message_content_padding_start"
-        android:paddingTop="@dimen/com_crafttalk_chat_message_content_padding_top"
-        android:paddingEnd="@dimen/com_crafttalk_chat_message_content_padding_end"
-        android:paddingBottom="@dimen/com_crafttalk_chat_message_content_padding_bottom"
-        android:fontFamily="@font/com_crafttalk_chat_ubuntu_light"
-        android:textFontWeight="300"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        tools:text="Привет, мое имя Бот" />
-
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/helper/file/FileInfoHelper.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/helper/file/FileInfoHelper.kt b/chat/src/main/java/com/crafttalk/chat/data/helper/file/FileInfoHelper.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/helper/file/FileInfoHelper.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,35 +0,0 @@
-package com.crafttalk.chat.data.helper.file
-
-import android.content.Context
-import android.net.Uri
-import android.provider.OpenableColumns
-import java.io.File
-import javax.inject.Inject
-
-class FileInfoHelper
-@Inject constructor(
-    private val context: Context
-) {
-
-    fun getFile(uri: Uri): File? {
-        return try {
-            File(uri.path!!)
-        } catch (ex: Exception) {
-            null
-        }
-    }
-
-    fun getFileName(uri: Uri): String? {
-        return context.contentResolver.query(uri, null, null, null, null, null)?.let { cursor ->
-            cursor.moveToFirst()
-            cursor.getString(cursor.getColumnIndex(OpenableColumns.DISPLAY_NAME)).apply {
-                cursor.close()
-            }
-        }
-    }
-
-    fun getFileName(uri: Uri, file: File? = getFile(uri)): String? = file?.name
-
-    fun getFileType(uri: Uri): String? = context.contentResolver.getType(uri)
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/custom_views/custom_snackbar/WarningSnackbarView.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/custom_views/custom_snackbar/WarningSnackbarView.kt b/chat/src/main/java/com/crafttalk/chat/presentation/custom_views/custom_snackbar/WarningSnackbarView.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/custom_views/custom_snackbar/WarningSnackbarView.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,78 +0,0 @@
-package com.crafttalk.chat.presentation.custom_views.custom_snackbar
-
-import android.annotation.SuppressLint
-import android.content.Context
-import android.util.AttributeSet
-import android.view.View
-import android.widget.RelativeLayout
-import android.widget.TextView
-import androidx.annotation.ColorRes
-import androidx.annotation.DrawableRes
-import androidx.annotation.StringRes
-import com.crafttalk.chat.R
-import com.google.android.material.snackbar.ContentViewCallback
-import kotlinx.android.synthetic.main.com_crafttalk_chat_view_warning_snackbar.view.*
-
-class WarningSnackbarView @JvmOverloads constructor(
-    context: Context,
-    attrs: AttributeSet? = null,
-    defStyleAttr: Int = 0
-) : RelativeLayout(context, attrs, defStyleAttr), ContentViewCallback {
-
-    init {
-        View.inflate(context, R.layout.com_crafttalk_chat_view_warning_snackbar, this)
-        clipToPadding =  false
-    }
-
-    @SuppressLint("ResourceAsColor")
-    fun bind(
-        title: String?,
-        description: String?,
-        @DrawableRes iconRes: Int,
-        @ColorRes textColor: Int,
-        @ColorRes backgroundColor: Int
-    ) {
-        setVisibilityTextViewByContent(warning_snackbar_title, title)
-        setVisibilityTextViewByContent(warning_snackbar_description, description)
-
-        warning_snackbar_title.setTextColor(textColor)
-        icon_warning.setImageResource(iconRes)
-        warning_snackbar_container.setBackgroundColor(backgroundColor)
-    }
-
-    fun bind(
-        @StringRes title: Int?,
-        @StringRes description: Int?,
-        @DrawableRes iconRes: Int,
-        @ColorRes textColor: Int,
-        @ColorRes backgroundColor: Int
-    ) {
-        bind(title?.let { context.getString(it) }, description?.let { context.getString(it) }, iconRes, textColor, backgroundColor)
-    }
-
-    private fun setVisibilityTextViewByContent(view: TextView, content: String?) {
-        if (content == null) {
-            view.visibility = View.GONE
-        } else {
-            view.text = content
-            view.visibility = View.VISIBLE
-        }
-    }
-
-    override fun animateContentIn(delay: Int, duration: Int) {
-        warning_snackbar_title.alpha = 0f
-        warning_snackbar_title.animate().alpha(1f).setDuration(duration.toLong()).setStartDelay(delay.toLong()).start()
-
-        warning_snackbar_description.alpha = 0f
-        warning_snackbar_description.animate().alpha(1f).setDuration(duration.toLong()).setStartDelay(delay.toLong()).start()
-    }
-
-    override fun animateContentOut(delay: Int, duration: Int) {
-        warning_snackbar_title.alpha = 1f
-        warning_snackbar_title.animate().alpha(0f).setDuration(duration.toLong()).setStartDelay(delay.toLong()).start()
-
-        warning_snackbar_description.alpha = 1f
-        warning_snackbar_description.animate().alpha(0f).setDuration(duration.toLong()).setStartDelay(delay.toLong()).start()
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/entity/file/NetworkBodyStructureUploadFile.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/entity/file/NetworkBodyStructureUploadFile.kt b/chat/src/main/java/com/crafttalk/chat/domain/entity/file/NetworkBodyStructureUploadFile.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/entity/file/NetworkBodyStructureUploadFile.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,7 +0,0 @@
-package com.crafttalk.chat.domain.entity.file
-
-class NetworkBodyStructureUploadFile(
-    val fileName: String,
-    val fileB64: String,
-    val uuid: String
-)
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_background_item_media_message_placeholder.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_background_item_media_message_placeholder.xml b/chat/src/main/res/drawable/com_crafttalk_chat_background_item_media_message_placeholder.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_background_item_media_message_placeholder.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<shape
-    android:shape="rectangle"
-    xmlns:android="http://schemas.android.com/apk/res/android">
-    <solid android:color="@color/com_crafttalk_chat_default_color_bg_server_message"/>
-</shape>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/repository/IPersonRepository.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/repository/IPersonRepository.kt b/chat/src/main/java/com/crafttalk/chat/domain/repository/IPersonRepository.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/repository/IPersonRepository.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,6 +0,0 @@
-package com.crafttalk.chat.domain.repository
-
-interface IPersonRepository {
-    suspend fun updatePersonName(personId: String?, currentPersonName: String?)
-    suspend fun getPersonPreview(personId: String, visitorToken: String): String?
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderAction.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderAction.kt b/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderAction.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderAction.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,69 +0,0 @@
-package com.crafttalk.chat.presentation.holders
-
-import android.content.res.ColorStateList
-import android.util.TypedValue
-import android.view.View
-import android.view.ViewGroup
-import android.widget.TextView
-import androidx.core.content.res.ResourcesCompat
-import androidx.core.view.ViewCompat
-import com.crafttalk.chat.R
-import com.crafttalk.chat.presentation.base.BaseViewHolder
-import com.crafttalk.chat.presentation.model.ActionItem
-import com.crafttalk.chat.utils.ChatAttr
-
-class HolderAction(
-    view: View,
-    private val hasSelectedAction: Boolean,
-    private val clickHandler: (actionId: String) -> Unit
-) : BaseViewHolder<ActionItem>(view), View.OnClickListener {
-    private val itemAction: ViewGroup? = view.findViewById(R.id.item_action)
-    private val actionText: TextView? = view.findViewById(R.id.action_text)
-
-    private var actionId: String? = null
-
-    init {
-        view.setOnClickListener(this)
-    }
-
-    override fun onClick(view: View) {
-        if (hasSelectedAction || actionId == null) {
-            return
-        } else {
-            clickHandler(actionId!!)
-        }
-    }
-
-    override fun bindTo(item: ActionItem) {
-        actionId = item.id
-        // set width item
-        itemAction?.apply {
-            ChatAttr.getInstance().widthItemOperatorTextMessage.let {
-                layoutParams.width = it
-            }
-        }
-        actionText?.apply {
-            // set content
-            text = item.actionText
-            // set color
-            if (item.isSelected) {
-                setTextColor(ChatAttr.getInstance().colorTextOperatorSelectedAction)
-            } else {
-                setTextColor(ChatAttr.getInstance().colorTextOperatorAction)
-            }
-            // set dimension
-            setTextSize(TypedValue.COMPLEX_UNIT_PX, ChatAttr.getInstance().sizeTextOperatorAction)
-            // set font
-            ChatAttr.getInstance().resFontFamilyOperatorAction?.let {
-                typeface = ResourcesCompat.getFont(context, it)
-            }
-        }
-        // set bg
-        itemView.apply {
-            setBackgroundResource(item.backgroundRes)
-            if (item.isSelected) {
-                ViewCompat.setBackgroundTintList(this, ColorStateList.valueOf(ChatAttr.getInstance().colorBackgroundOperatorSelectedAction))
-            }
-        }
-    }
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderUserGifMessage.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderUserGifMessage.kt b/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderUserGifMessage.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderUserGifMessage.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,82 +0,0 @@
-package com.crafttalk.chat.presentation.holders
-
-import android.content.res.ColorStateList
-import android.view.View
-import android.view.ViewGroup
-import android.widget.ImageView
-import android.widget.TextView
-import androidx.core.view.ViewCompat
-import com.crafttalk.chat.R
-import com.crafttalk.chat.domain.entity.file.TypeFile
-import com.crafttalk.chat.presentation.base.BaseViewHolder
-import com.crafttalk.chat.presentation.helper.extensions.*
-import com.crafttalk.chat.presentation.model.GifMessageItem
-import com.crafttalk.chat.utils.ChatAttr
-
-class HolderUserGifMessage(
-    view: View,
-    private val download: (fileName: String, fileUrl: String, fileType: TypeFile) -> Unit,
-    private val updateData: (id: String, height: Int, width: Int) -> Unit,
-    private val clickHandler: (gifName: String, gifUrl: String) -> Unit
-) : BaseViewHolder<GifMessageItem>(view), View.OnClickListener {
-    private val contentContainer: View? = view.findViewById(R.id.content_container)
-    private val warningContainer: ViewGroup? = view.findViewById(R.id.user_gif_warning)
-
-    private val gif: ImageView? = view.findViewById(R.id.user_gif)
-    private val downloadGif: TextView? = view.findViewById(R.id.download_file)
-    private val authorName: TextView? = view.findViewById(R.id.author_name)
-    private val authorPreview: ImageView? = view.findViewById(R.id.author_preview)
-    private val time: TextView? = view.findViewById(R.id.time)
-    private val status: ImageView? = view.findViewById(R.id.status)
-    private val date: TextView? = view.findViewById(R.id.date)
-
-    private var gifUrl: String? = null
-    private var gifName: String? = null
-    private var failLoading: Boolean = false
-
-    init {
-        gif?.setOnClickListener(this)
-        downloadGif?.setOnClickListener(this)
-    }
-
-    override fun onClick(view: View) {
-        when (view.id) {
-            R.id.user_gif -> {
-                if (!failLoading) {
-                    val name = gifName ?: return
-                    val url = gifUrl ?: return
-                    clickHandler(name, url)
-                }
-            }
-            R.id.download_file -> {
-                val name = gifName ?: return
-                val url = gifUrl ?: return
-                download(name, url, TypeFile.GIF)
-            }
-        }
-    }
-
-    override fun bindTo(item: GifMessageItem) {
-        gifUrl = item.gif.url
-        gifName = item.gif.name.toString()
-        failLoading = item.gif.failLoading
-
-        date?.setDate(item)
-        // set content
-        authorName?.setAuthor(item)
-        authorPreview?.setAuthorIcon(showAuthorIcon = false)
-        time?.setTime(item)
-        status?.setStatusMessage(item)
-        gif?.apply {
-            settingMediaFile()
-            loadMediaFile(item.id, item.gif, updateData, true, false, warningContainer, true)
-        }
-        downloadGif?.settingDownloadBtn(true, failLoading)
-        // set bg
-        contentContainer?.apply {
-            setBackgroundResource(ChatAttr.getInstance().bgUserMessageResId)
-            ViewCompat.setBackgroundTintList(this, ColorStateList.valueOf(ChatAttr.getInstance().colorBackgroundUserMediaFileMessage))
-        }
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/feature/view_picture/ShowMediaDialog.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/feature/view_picture/ShowMediaDialog.kt b/chat/src/main/java/com/crafttalk/chat/presentation/feature/view_picture/ShowMediaDialog.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/feature/view_picture/ShowMediaDialog.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,158 +0,0 @@
-package com.crafttalk.chat.presentation.feature.view_picture
-
-import android.annotation.SuppressLint
-import android.app.Dialog
-import android.content.Context
-import android.os.Bundle
-import android.view.View
-import android.widget.ImageView
-import com.bumptech.glide.Glide
-import com.crafttalk.chat.R
-import com.crafttalk.chat.domain.entity.file.TypeFile
-import com.crafttalk.chat.domain.entity.file.TypeFile.GIF
-import com.crafttalk.chat.domain.entity.file.TypeFile.IMAGE
-import com.crafttalk.chat.presentation.custom_views.custom_snackbar.WarningSnackbar
-import com.crafttalk.chat.presentation.helper.extensions.createCorrectGlideUrl
-import com.crafttalk.chat.utils.ChatAttr
-import com.crafttalk.chat.utils.MediaFileDownloadMode
-import kotlinx.android.synthetic.main.com_crafttalk_chat_bottom_sheet_show_gif.*
-import kotlinx.android.synthetic.main.com_crafttalk_chat_bottom_sheet_show_image.*
-
-class ShowImageDialog(
-    context: Context,
-    style: Int
-): Dialog(context, style), View.OnClickListener {
-
-    override fun onClick(view: View) {
-        when(view.id) {
-            R.id.image_download, R.id.gif_download -> {
-                val fileName = name ?: return
-                val fileUrl = url ?: return
-                val fileType = type ?: return
-                downloadFile?.invoke(fileName, fileUrl, fileType)
-            }
-            R.id.image_navigate_back, R.id.gif_navigate_back -> dismiss()
-        }
-    }
-
-    private var name: String? = null
-    private var url: String? = null
-    private var type: TypeFile? = null
-    private var downloadFile: ((fileName: String, fileUrl: String, fileType: TypeFile) -> Unit)? = null
-
-    companion object {
-        private var dialog: ShowImageDialog? = null
-
-        private fun newInstance(builder: Builder): ShowImageDialog {
-            val dialog = ShowImageDialog(builder.context, R.style.ThemeFullscreen)
-            dialog.name = builder.mediaFileName
-            dialog.url = builder.mediaFileUrl
-            dialog.type = builder.type
-            dialog.downloadFile = builder.downloadMediaFile
-            this.dialog = dialog
-            return dialog
-        }
-
-        fun isOpen(): Boolean {
-            return dialog != null
-        }
-
-        fun showWarning(isSuccess: Boolean) {
-            dialog?.let {
-                if (isSuccess) {
-                    WarningSnackbar.make(
-                        view = it.image_show ?: it.gif_show,
-                        title = ChatAttr.getInstance().titleSuccessDownloadFileWarning,
-                        iconRes = R.drawable.com_crafttalk_chat_ic_file_download_done,
-                        textColor = ChatAttr.getInstance().colorSuccessDownloadFileWarning,
-                        backgroundColor = ChatAttr.getInstance().backgroundSuccessDownloadFileWarning
-                    )?.show()
-                } else {
-                    WarningSnackbar.make(
-                        view = it.image_show ?: it.gif_show,
-                        title = ChatAttr.getInstance().titleFailDownloadFileWarning,
-                    )?.show()
-                }
-            }
-        }
-
-    }
-
-    class Builder(val context: Context) {
-        var mediaFileName: String? = null
-        var mediaFileUrl: String? = null
-        var type: TypeFile? = null
-        var downloadMediaFile: ((fileName: String, fileUrl: String, fileType: TypeFile) -> Unit)? = null
-
-        fun setName(name: String): Builder {
-            this.mediaFileName = name
-            return this
-        }
-
-        fun setUrl(url: String): Builder {
-            this.mediaFileUrl = url
-            return this
-        }
-
-        fun setType(type: TypeFile): Builder {
-            this.type = type
-            return this
-        }
-
-        fun setFunDownload(downloadFun: (fileName: String, fileUrl: String, fileType: TypeFile) -> Unit): Builder {
-            this.downloadMediaFile = downloadFun
-            return this
-        }
-
-        fun show() {
-            mediaFileName ?: return
-            mediaFileUrl ?: return
-            type ?: return
-            newInstance(this).show()
-        }
-
-    }
-
-    private fun settingFileDownload(file_download: ImageView) {
-        if (ChatAttr.getInstance().mediaFileDownloadMode in listOf(MediaFileDownloadMode.ONLY_IN_VIEWER, MediaFileDownloadMode.All_PLACES)) {
-            file_download.visibility = View.VISIBLE
-            file_download.setOnClickListener(this)
-        } else {
-            file_download.visibility = View.GONE
-        }
-    }
-
-    @SuppressLint("ResourceAsColor")
-    override fun onCreate(savedInstanceState: Bundle?) {
-        super.onCreate(savedInstanceState)
-
-        when (type) {
-            IMAGE -> {
-                setContentView(R.layout.com_crafttalk_chat_bottom_sheet_show_image)
-                image_navigate_back.setOnClickListener(this)
-                settingFileDownload(image_download)
-                Glide.with(context)
-                    .load(createCorrectGlideUrl(url))
-                    .error(R.drawable.com_crafttalk_chat_background_item_media_message_placeholder)
-                    .into(image_show)
-            }
-            GIF -> {
-                setContentView(R.layout.com_crafttalk_chat_bottom_sheet_show_gif)
-                gif_navigate_back.setOnClickListener(this)
-                settingFileDownload(gif_download)
-                Glide.with(context)
-                    .asGif()
-                    .load(createCorrectGlideUrl(url))
-                    .error(R.drawable.com_crafttalk_chat_background_item_media_message_placeholder)
-                    .into(gif_show)
-            }
-            else -> {}
-        }
-
-    }
-
-    override fun dismiss() {
-        super.dismiss()
-        dialog = null
-    }
-}
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_ic_folder.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_ic_folder.xml b/chat/src/main/res/drawable/com_crafttalk_chat_ic_folder.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_ic_folder.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,5 +0,0 @@
-<vector android:height="24dp" android:tint="#BDBDBD"
-    android:viewportHeight="24.0" android:viewportWidth="24.0"
-    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
-    <path android:fillColor="#FF000000" android:pathData="M10,4H4c-1.1,0 -1.99,0.9 -1.99,2L2,18c0,1.1 0.9,2 2,2h16c1.1,0 2,-0.9 2,-2V8c0,-1.1 -0.9,-2 -2,-2h-8l-2,-2z"/>
-</vector>
Index: chat/src/main/java/com/crafttalk/chat/data/local/db/entity/ActionEntity.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/ActionEntity.kt b/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/ActionEntity.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/ActionEntity.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,36 +0,0 @@
-package com.crafttalk.chat.data.local.db.entity
-
-import androidx.room.ColumnInfo
-import com.crafttalk.chat.domain.entity.message.NetworkAction
-
-data class ActionEntity(
-    @ColumnInfo(name = "action_id")
-    val actionId: String,
-    @ColumnInfo(name = "action_text")
-    val actionText: String,
-    @ColumnInfo(name = "is_selected")
-    val isSelected: Boolean
-) {
-    companion object {
-
-        fun map(actions: List<NetworkAction>): List<ActionEntity> {
-            return actions.map {
-                ActionEntity(
-                    it.actionId,
-                    it.actionText,
-                    false
-                )
-            }
-        }
-
-        fun map(actions: List<NetworkAction>, actionsSelected: List<String>): List<ActionEntity> {
-            return actions.map {
-                ActionEntity(
-                    it.actionId,
-                    it.actionText,
-                    actionsSelected.contains(it.actionId)
-                )
-            }
-        }
-    }
-}
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_background_top_item_action.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_background_top_item_action.xml b/chat/src/main/res/drawable/com_crafttalk_chat_background_top_item_action.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_background_top_item_action.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,9 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<shape
-    android:shape="rectangle"
-    xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <solid android:color="@color/com_crafttalk_chat_default_color_bg_server_action"/>
-    <stroke android:color="@color/com_crafttalk_chat_default_color_borders_server_action" android:width="1dp"/>
-    <corners android:topRightRadius="5dp"/>
-</shape>
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_ic_star.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_ic_star.xml b/chat/src/main/res/drawable/com_crafttalk_chat_ic_star.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_ic_star.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,5 +0,0 @@
-<vector android:height="24dp" android:tint="#FFFFFF"
-    android:viewportHeight="24" android:viewportWidth="24"
-    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
-    <path android:fillColor="@android:color/white" android:pathData="M14.43,10l-2.43,-8l-2.43,8l-7.57,0l6.18,4.41l-2.35,7.59l6.17,-4.69l6.18,4.69l-2.35,-7.59l6.17,-4.41z"/>
-</vector>
Index: chat/src/main/res/drawable/com_crafttalk_chat_background_normal_field_auth_form.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_background_normal_field_auth_form.xml b/chat/src/main/res/drawable/com_crafttalk_chat_background_normal_field_auth_form.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_background_normal_field_auth_form.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,10 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<shape
-    android:shape="rectangle"
-    xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <solid android:color="#fff"/>
-    <stroke android:color="@color/com_crafttalk_chat_gray" android:width="1dp"/>
-    <corners android:radius="5dp"/>
-
-</shape>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/helper/network/RequestHelper.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/helper/network/RequestHelper.kt b/chat/src/main/java/com/crafttalk/chat/data/helper/network/RequestHelper.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/helper/network/RequestHelper.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,17 +0,0 @@
-package com.crafttalk.chat.data.helper.network
-
-import retrofit2.Call
-import java.io.IOException
-
-fun <T> Call<T>.toData(): T? {
-    return try {
-        val response = execute()
-        if (response.isSuccessful) {
-            response.body()
-        } else {
-            null
-        }
-    } catch (e: IOException) {
-        null
-    }
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/repository/IMessageRepository.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/repository/IMessageRepository.kt b/chat/src/main/java/com/crafttalk/chat/domain/repository/IMessageRepository.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/repository/IMessageRepository.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,86 +0,0 @@
-package com.crafttalk.chat.domain.repository
-
-import android.content.Context
-import androidx.paging.DataSource
-import com.crafttalk.chat.data.local.db.entity.MessageEntity
-import com.crafttalk.chat.domain.entity.file.TypeDownloadProgress
-import com.crafttalk.chat.domain.entity.message.NetworkMessage
-import com.crafttalk.chat.domain.entity.message.NetworkSearch
-import com.crafttalk.chat.domain.transfer.TransferFileInfo
-
-interface IMessageRepository {
-
-    fun getMessages(): DataSource.Factory<Int, MessageEntity>
-
-    fun getAllMessages(): List<MessageEntity>
-
-    fun getCountUnreadMessages(
-        currentReadMessageTime: Long,
-        ignoredMessageTypes: List<Int>
-    ): Int?
-
-    suspend fun getPositionByTimestamp(id: String, timestamp: Long): Int?
-
-    fun getTimestampMessageById(messageId: String): Long?
-
-    fun getCountMessagesInclusiveTimestamp(timestampMessage: Long): Int?
-
-    fun getCountUnreadMessagesRange(
-        currentReadMessageTime: Long,
-        timestampLastMessage: Long,
-        ignoredMessageTypes: List<Int>
-    ): Int?
-
-    // получение времени первого сообщения
-    suspend fun getTimeFirstMessage(): Long?
-
-    // получение времени последнего сообщения
-    suspend fun getTimeLastMessage(): Long?
-
-    // загрузка определенного пула сообщений
-    // [startTime; endTime)
-    suspend fun uploadMessages(
-        uuid: String,
-        startTime: Long?,
-        endTime: Long,
-        updateReadPoint: (newTimeMarks: List<Pair<String, Long>>) -> Boolean,
-        syncMessagesAcrossDevices: (countUnreadMessages: Int) -> Unit,
-        allMessageLoaded: () -> Unit,
-        notAllMessageLoaded: () -> Unit,
-        getPersonPreview: suspend (personId: String) -> String?,
-        getFileInfo: suspend (context: Context, networkMessage: NetworkMessage) -> TransferFileInfo?,
-        updateSearchMessagePosition: suspend (insertedMessages: List<MessageEntity>) -> Unit
-    ): List<MessageEntity>
-
-    suspend fun mergeNewMessages()
-
-    suspend fun updatePersonNames(
-        messages: List<MessageEntity>,
-        updatePersonName: suspend (personId: String?, currentPersonName: String?) -> Unit
-    )
-
-    suspend fun getFileInfo(
-        context: Context,
-        networkMessage: NetworkMessage
-    ): TransferFileInfo?
-
-    suspend fun sendMessages(message: String, repliedMessageId: String?)
-
-    suspend fun readMessage(messageId: String)
-
-    suspend fun searchTimestampsMessages(uuid: String, searchText: String): NetworkSearch?
-
-    suspend fun selectAction(messageId: String, actionId: String)
-    suspend fun selectButton(messageId: String, actionId: String, buttonId: String)
-    fun selectButtonInWidget(actionId: String)
-
-    fun updateSizeMessage(id: String, height: Int, width: Int)
-
-    fun updateTypeDownloadProgressOfMessageWithAttachment(id: String, typeDownloadProgress: TypeDownloadProgress)
-
-    fun removeAllInfoMessages()
-
-    fun removeAllMessages()
-
-    fun setUpdateSearchMessagePosition(updateSearchMessagePosition: suspend (insertedMessages: List<MessageEntity>) -> Unit)
-}
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_ic_arrow_down.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_ic_arrow_down.xml b/chat/src/main/res/drawable/com_crafttalk_chat_ic_arrow_down.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_ic_arrow_down.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,5 +0,0 @@
-<vector android:height="24dp" android:tint="#FFFFFF"
-    android:viewportHeight="24" android:viewportWidth="24"
-    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
-    <path android:fillColor="@android:color/white" android:pathData="M7.41,8.59L12,13.17l4.59,-4.58L18,10l-6,6 -6,-6 1.41,-1.41z"/>
-</vector>
Index: chat/src/main/java/com/crafttalk/chat/data/helper/network/TLSSocketFactory.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/helper/network/TLSSocketFactory.kt b/chat/src/main/java/com/crafttalk/chat/data/helper/network/TLSSocketFactory.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/helper/network/TLSSocketFactory.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,83 +0,0 @@
-package com.crafttalk.chat.data.helper.network
-
-import android.os.Build
-import android.util.Log
-import okhttp3.OkHttpClient
-import okhttp3.TlsVersion
-import java.io.IOException
-import java.net.InetAddress
-import java.net.Socket
-import java.net.UnknownHostException
-import java.security.KeyStore
-import javax.net.ssl.*
-
-class TLSSocketFactory(
-    private val sslSocketFactory: SSLSocketFactory
-): SSLSocketFactory() {
-
-    companion object {
-        private val trustManager by lazy {
-            val trustManagerFactory = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm())
-            trustManagerFactory.init(null as KeyStore?)
-            trustManagerFactory.trustManagers.first { it is X509TrustManager } as X509TrustManager
-        }
-
-        @JvmStatic
-        fun OkHttpClient.Builder.enableTls() = apply {
-            if (Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP_MR1) {
-                try {
-                    val sslContext = SSLContext.getInstance(TlsVersion.TLS_1_2.javaName)
-                    sslContext.init(null, arrayOf(trustManager), null)
-                    sslSocketFactory(TLSSocketFactory(sslContext.socketFactory), trustManager)
-                } catch (e: Exception) {
-                    Log.e("ERROR_TLS", "Error while setting TLS 1.2 compatibility")
-                }
-            }
-        }
-    }
-
-    private fun Socket.enableTLSOnSocket(): Socket {
-        return (this as? SSLSocket)?.apply {
-            enabledProtocols += TlsVersion.TLS_1_2.javaName
-        } ?: this
-    }
-
-    override fun getDefaultCipherSuites(): Array<String> {
-        return sslSocketFactory.defaultCipherSuites
-    }
-
-    override fun getSupportedCipherSuites(): Array<String> {
-        return sslSocketFactory.supportedCipherSuites
-    }
-
-    @Throws(IOException::class)
-    override fun createSocket(): Socket {
-        return sslSocketFactory.createSocket().enableTLSOnSocket()
-    }
-
-    @Throws(IOException::class)
-    override fun createSocket(s: Socket, host: String, port: Int, autoClose: Boolean): Socket {
-        return sslSocketFactory.createSocket(s, host, port, autoClose).enableTLSOnSocket()
-    }
-
-    @Throws(IOException::class, UnknownHostException::class)
-    override fun createSocket(host: String, port: Int): Socket {
-        return sslSocketFactory.createSocket(host, port).enableTLSOnSocket()
-    }
-
-    @Throws(IOException::class, UnknownHostException::class)
-    override fun createSocket(host: String, port: Int, localHost: InetAddress, localPort: Int): Socket {
-        return sslSocketFactory.createSocket(host, port, localHost, localPort).enableTLSOnSocket()
-    }
-
-    @Throws(IOException::class)
-    override fun createSocket(host: InetAddress, port: Int): Socket {
-        return sslSocketFactory.createSocket(host, port).enableTLSOnSocket()
-    }
-
-    @Throws(IOException::class)
-    override fun createSocket(address: InetAddress, port: Int, localAddress: InetAddress, localPort: Int): Socket {
-        return sslSocketFactory.createSocket(address, port, localAddress, localPort).enableTLSOnSocket()
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/res/layout/com_crafttalk_chat_item_action.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_item_action.xml b/chat/src/main/res/layout/com_crafttalk_chat_item_action.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_item_action.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout
-    android:id="@+id/item_action"
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:orientation="vertical"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content">
-
-    <TextView
-        android:id="@+id/action_text"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_gravity="center"
-        android:gravity="center"
-        android:paddingVertical="12dp"
-        android:paddingHorizontal="8dp"
-        android:fontFamily="@font/com_crafttalk_chat_ubuntu_medium"
-        android:textFontWeight="600"
-        tools:text="Событие" />
-
-</LinearLayout>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/interactors/ConfigurationInteractor.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/interactors/ConfigurationInteractor.kt b/chat/src/main/java/com/crafttalk/chat/domain/interactors/ConfigurationInteractor.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/interactors/ConfigurationInteractor.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,20 +0,0 @@
-package com.crafttalk.chat.domain.interactors
-
-import com.crafttalk.chat.domain.repository.IConfigurationRepository
-import com.crafttalk.chat.utils.ChatParams
-import javax.inject.Inject
-
-class ConfigurationInteractor
-@Inject constructor(
-    private val configurationRepository: IConfigurationRepository
-) {
-
-    fun getConfiguration() {
-        val config = configurationRepository.getConfiguration() ?: return
-        ChatParams.glueMessage = config.chatAnnouncement
-        ChatParams.sendInitialMessageOnOpen = true//config.sendInitialMessageOnOpen
-        ChatParams.sendInitialMessageOnStartDialog = false//config.sendInitialMessageOnStartDialog
-        ChatParams.showInitialMessage = config.showInitialMessage
-    }
-
-}
\ No newline at end of file
Index: chat/proguard-rules.pro
===================================================================
diff --git a/chat/proguard-rules.pro b/chat/proguard-rules.pro
deleted file mode 100644
--- a/chat/proguard-rules.pro	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,21 +0,0 @@
-# Add project specific ProGuard rules here.
-# You can control the set of applied configuration files using the
-# proguardFiles setting in build.gradle.
-#
-# For more details, see
-#   http://developer.android.com/guide/developing/tools/proguard.html
-
-# If your project uses WebView with JS, uncomment the following
-# and specify the fully qualified class name to the JavaScript interface
-# class:
-#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
-#   public *;
-#}
-
-# Uncomment this to preserve the line number information for
-# debugging stack traces.
-#-keepattributes SourceFile,LineNumberTable
-
-# If you keep the line number information, uncomment this to
-# hide the original source file name.
-#-renamesourcefileattribute SourceFile
Index: chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkButton.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkButton.kt b/chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkButton.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkButton.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,47 +0,0 @@
-package com.crafttalk.chat.domain.entity.message
-
-import com.crafttalk.chat.data.local.db.entity.ButtonEntity
-import com.google.gson.annotations.SerializedName
-
-data class NetworkButton (
-
-    @SerializedName(value = "id")
-    val buttonId: String,
-
-    @SerializedName(value = "title")
-    val title: String,
-
-    @SerializedName(value = "action")
-    val action: String,
-
-    @SerializedName(value = "type")
-    val typeOperation: NetworkButtonOperation,
-
-    @SerializedName(value = "color")
-    val color: NetworkButtonColor,
-
-    @SerializedName(value = "image")
-    val image: NetworkButtonImage? = null,
-
-    @SerializedName(value = "imageEmoji")
-    val imageEmoji: String? = null,
-
-    @SerializedName(value = "fullSize")
-    val hasFullSize: Boolean
-
-) {
-
-    companion object {
-
-        fun map(buttonEntity: ButtonEntity) = NetworkButton(
-            buttonId = buttonEntity.buttonId,
-            title = buttonEntity.title,
-            action = buttonEntity.action,
-            typeOperation = buttonEntity.typeOperation,
-            color = buttonEntity.color,
-            image = buttonEntity.image,
-            imageEmoji = buttonEntity.imageEmoji,
-            hasFullSize = buttonEntity.hasFullSize
-        )
-    }
-}
\ No newline at end of file
Index: chat/src/main/res/layout/com_crafttalk_chat_item_server_file_message.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_item_server_file_message.xml b/chat/src/main/res/layout/com_crafttalk_chat_item_server_file_message.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_item_server_file_message.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,58 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:layout_marginStart="@dimen/com_crafttalk_chat_message_margin_start"
-    android:layout_marginTop="@dimen/com_crafttalk_chat_message_margin_top"
-    android:layout_marginEnd="@dimen/com_crafttalk_chat_message_margin_end"
-    android:layout_marginBottom="@dimen/com_crafttalk_chat_message_margin_bottom">
-
-    <include
-        android:id="@+id/include_date"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        layout="@layout/com_crafttalk_chat_include_date_message" />
-
-    <View
-        android:id="@+id/content_container"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="@id/border_content_end"
-        app:layout_constraintTop_toBottomOf="@id/include_date"
-        app:layout_constraintBottom_toTopOf="@id/include_message_info"
-        tools:background="@drawable/com_crafttalk_chat_background_item_simple_server_message" />
-
-    <include
-        android:id="@+id/file_info"
-        android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        layout="@layout/com_crafttalk_chat_include_file_info"
-        android:layout_marginStart="@dimen/com_crafttalk_chat_message_content_padding_start"
-        android:layout_marginTop="@dimen/com_crafttalk_chat_message_content_padding_top"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/include_date" />
-
-    <View
-        android:id="@+id/border_content_end"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        android:layout_marginStart="@dimen/com_crafttalk_chat_message_content_padding_end"
-        app:layout_constraintStart_toEndOf="@id/file_info"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintBottom_toBottomOf="parent" />
-
-    <include
-        android:id="@+id/include_message_info"
-        android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        layout="@layout/com_crafttalk_chat_include_server_message_info"
-        android:layout_marginTop="@dimen/com_crafttalk_chat_message_content_padding_bottom"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/file_info" />
-
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/di/modules/init/RepositoryModule.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/di/modules/init/RepositoryModule.kt b/chat/src/main/java/com/crafttalk/chat/di/modules/init/RepositoryModule.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/di/modules/init/RepositoryModule.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,32 +0,0 @@
-package com.crafttalk.chat.di.modules.init
-
-import com.crafttalk.chat.data.repository.*
-import com.crafttalk.chat.domain.repository.*
-import dagger.Binds
-import dagger.Module
-import javax.inject.Singleton
-
-@Module
-abstract class RepositoryModule {
-
-    @Singleton
-    @Binds
-    abstract fun bindConditionRepository(conditionRepository: ConditionRepository): IConditionRepository
-
-    @Singleton
-    @Binds
-    abstract fun bindAuthRepository(authRepository: AuthRepository): IAuthRepository
-
-    @Singleton
-    @Binds
-    abstract fun bindVisitorRepository(visitorRepository: VisitorRepository): IVisitorRepository
-
-    @Singleton
-    @Binds
-    abstract fun bindNotificationRepository(notificationRepository: NotificationRepository): INotificationRepository
-
-    @Singleton
-    @Binds
-    abstract fun bindPersonRepository(personRepository: PersonRepository): IPersonRepository
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkMessage.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkMessage.kt b/chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkMessage.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkMessage.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,136 +0,0 @@
-package com.crafttalk.chat.domain.entity.message
-
-import com.crafttalk.chat.data.local.db.entity.MessageEntity
-import com.crafttalk.chat.domain.entity.file.TypeFile
-import com.crafttalk.chat.utils.ChatParams
-import com.google.gson.annotations.SerializedName
-import java.io.Serializable
-
-data class NetworkMessage (
-
-    @SerializedName (value = "id")
-    var id: String?,
-
-    @SerializedName (value = "id_from_channel")
-    val idFromChannel: String? = null,
-
-    @SerializedName (value = "message_type")
-    val messageType: Int,
-
-    @SerializedName (value = "isReply")
-    val isReply : Boolean,
-
-    @SerializedName (value = "parent_message_id", alternate = ["parent_msg_id"])
-    val parentMessageId: String? = null,
-
-    @SerializedName (value = "timestamp")
-    val timestamp: Long,
-
-    @SerializedName (value = "message")
-    var message: String? = null,
-
-    @SerializedName (value = "widget")
-    val widget: NetworkWidget? = null,
-
-    @SerializedName (value = "action")
-    val selectedAction: String? = null,
-
-    @SerializedName (value = "actions")
-    val actions: List<NetworkAction>? = null,
-
-    @SerializedName (value = "keyboard")
-    val keyboard: NetworkKeyboard? = null,
-
-    @SerializedName (value = "attachment_url")
-    var attachmentUrl: String? = null,
-
-    @SerializedName (value = "attachment_type")
-    val attachmentType: String? = null,
-
-    @SerializedName (value = "attachment_name")
-    val attachmentName: String? = null,
-
-    @SerializedName (value = "operator_id")
-    val operatorId: String? = null,
-
-    @SerializedName (value = "operator_name")
-    val operatorName: String? = null,
-
-    @SerializedName (value = "reply_to_message")
-    val replyToMessage: NetworkMessage? = null,
-
-    @SerializedName (value = "dialog_id")
-    val dialogId: String? = null
-
-) : Serializable {
-
-    val isText: Boolean
-    get() = !message.isNullOrBlank()
-
-    val isImage: Boolean
-    get() = !attachmentUrl.isNullOrEmpty() &&
-            !attachmentName.isNullOrEmpty() &&
-            !attachmentType.isNullOrEmpty() &&
-            (attachmentType == "IMAGE" || attachmentType.toLowerCase(
-                ChatParams.locale!!).startsWith("image"))
-
-    val isGif: Boolean
-    get() = !attachmentUrl.isNullOrEmpty() &&
-            !attachmentName.isNullOrEmpty() &&
-            !attachmentType.isNullOrEmpty() &&
-            (attachmentType == "IMAGE" || attachmentType.toLowerCase(
-                ChatParams.locale!!).startsWith("image")) &&
-            attachmentName.contains(".GIF", true)
-
-    val isFile: Boolean
-    get() = !attachmentUrl.isNullOrEmpty() &&
-            !attachmentName.isNullOrEmpty() &&
-            !attachmentType.isNullOrEmpty() &&
-            attachmentType == "FILE"
-
-    val isUnknownType: Boolean
-        get() = !attachmentUrl.isNullOrEmpty() &&
-                !attachmentName.isNullOrEmpty() &&
-                !attachmentType.isNullOrEmpty()
-
-    val isContainsContent: Boolean
-    get() = isText || isImage || isGif || isFile
-
-    val attachmentTypeFile: TypeFile?
-    get() = when {
-        isFile -> TypeFile.FILE
-        isImage -> TypeFile.IMAGE
-        isGif -> TypeFile.GIF
-        isUnknownType -> TypeFile.FILE
-        else -> null
-    }
-
-    val correctAttachmentUrl: String?
-    get() = if (attachmentUrl?.startsWith("/webchat/file/") == true) {
-        "${ChatParams.urlChatScheme}://${ChatParams.urlChatHost}${attachmentUrl}"
-    } else {
-        attachmentUrl
-    }
-
-    companion object {
-
-        fun map(messageEntity: MessageEntity) = NetworkMessage(
-            id = messageEntity.id,
-            messageType = messageEntity.messageType,
-            isReply = messageEntity.isReply,
-            parentMessageId = messageEntity.parentMsgId,
-            timestamp = messageEntity.timestamp,
-            message = messageEntity.message,
-            widget = messageEntity.widget?.let { NetworkWidget.map(it) },
-            actions = messageEntity.actions?.map { NetworkAction.map(it) },
-            keyboard = messageEntity.keyboard?.let { NetworkKeyboard.map(it) },
-            attachmentUrl = messageEntity.attachmentUrl,
-            attachmentType = messageEntity.attachmentType?.name,
-            attachmentName = messageEntity.attachmentName,
-            operatorId = messageEntity.operatorId,
-            operatorName = messageEntity.operatorName,
-            replyToMessage = null,
-            dialogId = messageEntity.dialogId
-        )
-    }
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/utils/TypeFailUpload.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/utils/TypeFailUpload.kt b/chat/src/main/java/com/crafttalk/chat/utils/TypeFailUpload.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/utils/TypeFailUpload.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,8 +0,0 @@
-package com.crafttalk.chat.utils
-
-enum class TypeFailUpload {
-    LARGE,
-    NOT_SUPPORT_TYPE,
-    TIMEOUT,
-    DEFAULT
-}
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_ic_file_download.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_ic_file_download.xml b/chat/src/main/res/drawable/com_crafttalk_chat_ic_file_download.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_ic_file_download.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,10 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="24dp"
-    android:height="24dp"
-    android:viewportWidth="24"
-    android:viewportHeight="24"
-    android:tint="#FFFFFF">
-    <path
-        android:fillColor="@android:color/white"
-        android:pathData="M19,9h-4V3H9v6H5l7,7 7,-7zM5,18v2h14v-2H5z"/>
-</vector>
Index: chat/src/main/java/com/crafttalk/chat/presentation/helper/extensions/View.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/helper/extensions/View.kt b/chat/src/main/java/com/crafttalk/chat/presentation/helper/extensions/View.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/helper/extensions/View.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,17 +0,0 @@
-package com.crafttalk.chat.presentation.helper.extensions
-
-import android.view.View
-import androidx.lifecycle.coroutineScope
-import androidx.lifecycle.findViewTreeLifecycleOwner
-import kotlinx.coroutines.*
-
-fun View.delayOnLifecycle(
-    durationInMillis: Long,
-    dispatcher: CoroutineDispatcher = Dispatchers.Main,
-    block: () -> Unit
-): Job? = findViewTreeLifecycleOwner()?.let { lifecycleOwner ->
-    lifecycleOwner.lifecycle.coroutineScope.launch(dispatcher) {
-        delay(durationInMillis)
-        block()
-    }
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/feature/file_viewer/ItemViewHolder.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/feature/file_viewer/ItemViewHolder.kt b/chat/src/main/java/com/crafttalk/chat/presentation/feature/file_viewer/ItemViewHolder.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/feature/file_viewer/ItemViewHolder.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,18 +0,0 @@
-package com.crafttalk.chat.presentation.feature.file_viewer
-
-import android.view.View
-import android.widget.ImageView
-import android.widget.TextView
-import androidx.recyclerview.widget.RecyclerView
-import com.crafttalk.chat.R
-
-class ItemViewHolder(view: View) : RecyclerView.ViewHolder(view) {
-    private var text: TextView = view.findViewById(R.id.description)
-    private var icon: ImageView = view.findViewById(R.id.icon)
-
-    fun bind(option: Option) {
-        text.text = option.title
-        icon.setImageDrawable(option.icon)
-    }
-
-}
Index: chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderTransferMessage.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderTransferMessage.kt b/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderTransferMessage.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderTransferMessage.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,50 +0,0 @@
-package com.crafttalk.chat.presentation.holders
-
-import android.annotation.SuppressLint
-import android.content.res.ColorStateList
-import android.view.View
-import android.widget.ImageView
-import android.widget.TextView
-import androidx.core.view.ViewCompat
-import com.crafttalk.chat.R
-import com.crafttalk.chat.presentation.base.BaseViewHolder
-import com.crafttalk.chat.presentation.helper.extensions.*
-import com.crafttalk.chat.presentation.model.TransferMessageItem
-import com.crafttalk.chat.utils.ChatAttr
-
-class HolderTransferMessage(
-    view: View
-) : BaseViewHolder<TransferMessageItem>(view) {
-    private val contentContainer: View? = view.findViewById(R.id.content_container)
-
-    private val message: TextView? = view.findViewById(R.id.server_message)
-    private val authorName: TextView? = view.findViewById(R.id.author_name)
-    private val authorPreview: ImageView? = view.findViewById(R.id.author_preview)
-    private val time: TextView? = view.findViewById(R.id.time)
-    private val status: ImageView? = view.findViewById(R.id.status)
-    private val date: TextView? = view.findViewById(R.id.date)
-
-    @SuppressLint("StringFormatInvalid")
-    override fun bindTo(item: TransferMessageItem) {
-        date?.setDate(item)
-        // set content
-        authorName?.setAuthor(item)
-        authorPreview?.setAuthorIcon(item.authorPreview)
-        time?.setTime(item)
-        status?.setStatusMessage(item)
-        message?.setMessageText(
-            textMessageRes = R.string.com_crafttalk_chat_message_join,
-            textMessageResArgs = arrayOf(item.authorName),
-            maxWidthTextMessage = ChatAttr.getInstance().widthItemOperatorTextMessage,
-            colorTextMessage = ChatAttr.getInstance().colorTextOperatorMessage,
-            sizeTextMessage = ChatAttr.getInstance().sizeTextOperatorMessage,
-            resFontFamilyMessage = ChatAttr.getInstance().resFontFamilyOperatorMessage,
-            isSelectableText = true
-        )
-        // set bg
-        contentContainer?.apply {
-            setBackgroundResource(ChatAttr.getInstance().bgOperatorMessageResId)
-            ViewCompat.setBackgroundTintList(this, ColorStateList.valueOf(ChatAttr.getInstance().colorBackgroundOperatorMessage))
-        }
-    }
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/local/db/entity/WidgetEntity.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/WidgetEntity.kt b/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/WidgetEntity.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/WidgetEntity.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,25 +0,0 @@
-package com.crafttalk.chat.data.local.db.entity
-
-import androidx.room.ColumnInfo
-import com.crafttalk.chat.domain.entity.message.NetworkWidget
-
-data class WidgetEntity(
-    @ColumnInfo(name = "widgetId")
-    val widgetId: String,
-    @ColumnInfo(name = "description")
-    val description: String,
-    @ColumnInfo(name = "payload")
-    val payload: Any
-) {
-
-    companion object {
-
-        fun map(networkWidget: NetworkWidget): WidgetEntity {
-            return WidgetEntity(
-                widgetId = networkWidget.widgetId,
-                description = networkWidget.description,
-                payload = networkWidget.params
-            )
-        }
-    }
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/di/modules/chat/RepositoryModule.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/di/modules/chat/RepositoryModule.kt b/chat/src/main/java/com/crafttalk/chat/di/modules/chat/RepositoryModule.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/di/modules/chat/RepositoryModule.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,28 +0,0 @@
-package com.crafttalk.chat.di.modules.chat
-
-import com.crafttalk.chat.data.repository.*
-import com.crafttalk.chat.di.ChatScope
-import com.crafttalk.chat.domain.repository.*
-import dagger.Binds
-import dagger.Module
-
-@Module
-abstract class RepositoryModule {
-
-    @ChatScope
-    @Binds
-    abstract fun bindFileRepository(fileRepository: FileRepository): IFileRepository
-
-    @ChatScope
-    @Binds
-    abstract fun bindMessageRepository(messageRepository: MessageRepository): IMessageRepository
-
-    @ChatScope
-    @Binds
-    abstract fun bindFeedbackRepository(feedbackRepository: FeedbackRepository): IFeedbackRepository
-
-    @ChatScope
-    @Binds
-    abstract fun bindConfigurationRepository(configurationRepository: ConfigurationRepository): IConfigurationRepository
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/local/db/entity/MessageEntity.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/MessageEntity.kt b/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/MessageEntity.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/MessageEntity.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,375 +0,0 @@
-package com.crafttalk.chat.data.local.db.entity
-
-import androidx.room.ColumnInfo
-import androidx.room.Entity
-import androidx.room.PrimaryKey
-import com.crafttalk.chat.data.helper.converters.text.convertTextToNormalString
-import com.crafttalk.chat.data.local.db.entity.MessageEntity.Companion.TABLE_NAME
-import com.crafttalk.chat.domain.entity.file.TypeDownloadProgress
-import com.crafttalk.chat.domain.entity.file.TypeFile
-import com.crafttalk.chat.domain.entity.message.MessageType
-import com.crafttalk.chat.domain.entity.message.NetworkButtonOperation
-import com.crafttalk.chat.domain.entity.tags.Tag
-import kotlin.math.abs
-import com.crafttalk.chat.domain.entity.message.NetworkMessage
-import com.google.gson.annotations.SerializedName
-import java.util.*
-
-@Entity(tableName = TABLE_NAME)
-data class MessageEntity(
-
-    @ColumnInfo(name = "uuid")
-    val uuid: String,
-
-    @PrimaryKey
-    @ColumnInfo(name = "id")
-    var id: String,
-
-    @ColumnInfo(name = "is_reply")
-    val isReply: Boolean,
-
-    @ColumnInfo(name = "message_type")
-    val messageType: Int,
-
-    @ColumnInfo(name = "parent_msg_id")
-    val parentMsgId: String? = null,
-
-    @ColumnInfo(name = "timestamp")
-    val timestamp: Long,
-
-    @ColumnInfo(name = "arrival_time")
-    val arrivalTime: Long? = null,
-
-    @ColumnInfo(name = "message")
-    val message: String? = null,
-
-    @ColumnInfo(name = "span_structure_list")
-    val spanStructureList: List<Tag> = listOf(),
-
-    @ColumnInfo(name = "widget")
-    val widget: WidgetEntity? = null,
-
-    @ColumnInfo(name = "actions")
-    val actions: List<ActionEntity>? = null,
-
-    @SerializedName(value = "keyboard")
-    val keyboard: KeyboardEntity? = null,
-
-    @ColumnInfo(name = "attachment_url")
-    val attachmentUrl: String? = null,
-
-    @ColumnInfo(name = "attachment_type")
-    val attachmentType: TypeFile? = null,
-
-    @ColumnInfo(name = "attachment_download_progress_type")
-    val attachmentDownloadProgressType: TypeDownloadProgress? = null,
-
-    @ColumnInfo(name = "attachment_name")
-    val attachmentName: String? = null,
-
-    @ColumnInfo(name = "attachment_size")
-    val attachmentSize: Long? = null,
-
-    @ColumnInfo(name = "operator_id")
-    val operatorId: String? = null,
-
-    @ColumnInfo(name = "operator_preview")
-    val operatorPreview: String? = null,
-
-    @ColumnInfo(name = "operator_name")
-    val operatorName: String? = null,
-
-    @ColumnInfo(name = "height")
-    val height: Int? = null,
-
-    @ColumnInfo(name = "width")
-    val width: Int? = null,
-
-    @ColumnInfo(name = "replied_message_id")
-    val repliedMessageId: String? = null,
-
-    @ColumnInfo(name = "replied_message_text")
-    val repliedMessageText: String? = null,
-
-    @ColumnInfo(name = "replied_message_span_structure_list")
-    val repliedTextSpanStructureList: List<Tag> = listOf(),
-
-    @ColumnInfo(name = "replied_message_attachment_url")
-    val repliedMessageAttachmentUrl: String? = null,
-
-    @ColumnInfo(name = "replied_message_attachment_type")
-    val repliedMessageAttachmentType: TypeFile? = null,
-
-    @ColumnInfo(name = "replied_message_attachment_name")
-    val repliedMessageAttachmentName: String? = null,
-
-    @ColumnInfo(name = "replied_message_attachment_size")
-    val repliedMessageAttachmentSize: Long? = null,
-
-    @ColumnInfo(name = "replied_message_attachment_download_progress_type")
-    val repliedMessageAttachmentDownloadProgressType: TypeDownloadProgress? = null,
-
-    @ColumnInfo(name = "replied_message_attachment_height")
-    val repliedMessageAttachmentHeight: Int? = null,
-
-    @ColumnInfo(name = "replied_message_attachment_width")
-    val repliedMessageAttachmentWidth: Int? = null,
-
-    @ColumnInfo(name = "dialog_id")
-    val dialogId: String? = null
-) {
-
-    fun hasSelectedAction(): Boolean {
-        return if (actions == null) {
-            false
-        } else {
-            actions.find { it.isSelected } != null
-        }
-    }
-
-    fun hasSelectedButton(): Boolean {
-        var hasActionBtn = false
-        var hasSelectedActionBtn = false
-        keyboard?.buttons?.forEach { horizontalList ->
-            horizontalList.forEach { button ->
-                if (button.typeOperation == NetworkButtonOperation.ACTION) {
-                    hasActionBtn = true
-                    if (button.selected) {
-                        hasSelectedActionBtn = true
-                    }
-                }
-            }
-        }
-        return if (keyboard?.buttons.isNullOrEmpty() || !hasActionBtn) {
-            false
-        } else {
-            hasSelectedActionBtn
-        }
-    }
-
-    override fun equals(other: Any?): Boolean {
-        return when (other) {
-            is MessageEntity -> {
-                        this.uuid == other.uuid &&
-                        this.isReply == other.isReply &&
-                        this.parentMsgId == other.parentMsgId &&
-                        this.message == other.message &&
-//                        (this.actions.isNullOrEmpty() && other.actions.isNullOrEmpty()) || (!this.actions.isNullOrEmpty() && !other.actions.isNullOrEmpty() && this.actions == other.actions) &&
-                        this.attachmentUrl == other.attachmentUrl &&
-                        this.attachmentType == other.attachmentType &&
-                        this.attachmentName == other.attachmentName &&
-                        this.operatorName == other.operatorName &&
-                        abs(this.timestamp - other.timestamp) <= COUNT_MS
-            }
-            else -> false
-        }
-    }
-
-    override fun hashCode(): Int {
-        var result = uuid.hashCode()
-        result = 31 * result + isReply.hashCode()
-        result = 31 * result + (parentMsgId?.hashCode() ?: 0)
-        result = 31 * result + (message?.hashCode() ?: 0)
-//        result = if (actions.isNullOrEmpty()) 31 * result else 31 * result + (actions.hashCode())
-        result = 31 * result + (attachmentUrl?.hashCode() ?: 0)
-        result = 31 * result + (attachmentType?.hashCode() ?: 0)
-        result = 31 * result + (attachmentName?.hashCode() ?: 0)
-        result = 31 * result + (operatorName?.hashCode() ?: 0)
-        return result
-    }
-
-    companion object {
-        private const val COUNT_MS = 1000
-        const val TABLE_NAME = "messages"
-        const val TABLE_NAME_BACKUP = "messages_backup"
-
-        fun map(
-            uuid: String,
-            networkMessage: NetworkMessage,
-            arrivalTime: Long,
-            operatorPreview: String?,
-            fileSize: Long? = null,
-            mediaFileHeight: Int? = null,
-            mediaFileWidth: Int? = null,
-            repliedMessageFileSize: Long? = null,
-            repliedMessageMediaFileHeight: Int? = null,
-            repliedMessageMediaFileWidth: Int? = null,
-        ): MessageEntity {
-            val list = arrayListOf<Tag>()
-            val message = networkMessage.message?.convertTextToNormalString(list)
-            val repliedList = arrayListOf<Tag>()
-            val repliedMessage = networkMessage.replyToMessage?.message?.convertTextToNormalString(repliedList)
-
-            return MessageEntity(
-                uuid = uuid,
-                id = networkMessage.id!!,
-                messageType = networkMessage.messageType,
-                isReply = networkMessage.isReply,
-                parentMsgId = networkMessage.parentMessageId,
-                timestamp = networkMessage.timestamp,
-                arrivalTime = arrivalTime,
-                message = message,
-                spanStructureList = list,
-                widget = if (networkMessage.isReply) networkMessage.widget?.let { WidgetEntity.map(it) } else null,
-                actions = if (networkMessage.isReply) networkMessage.actions?.let { ActionEntity.map(it) } else null,
-                keyboard = if (networkMessage.isReply) networkMessage.keyboard?.let { KeyboardEntity.map(it, listOf()) } else null,
-                attachmentUrl = networkMessage.correctAttachmentUrl,
-                attachmentType = networkMessage.attachmentTypeFile,
-                attachmentDownloadProgressType = TypeDownloadProgress.NOT_DOWNLOADED,
-                attachmentName = networkMessage.attachmentName,
-                attachmentSize = fileSize,
-                operatorId = networkMessage.operatorId,
-                operatorPreview = operatorPreview,
-                operatorName = if (networkMessage.isReply) networkMessage.operatorName else "Вы",
-                height = mediaFileHeight,
-                width = mediaFileWidth,
-                repliedMessageId = networkMessage.replyToMessage?.id,
-                repliedMessageText = repliedMessage,
-                repliedTextSpanStructureList = repliedList,
-                repliedMessageAttachmentUrl = networkMessage.replyToMessage?.correctAttachmentUrl,
-                repliedMessageAttachmentType = networkMessage.replyToMessage?.attachmentTypeFile,
-                repliedMessageAttachmentName = networkMessage.replyToMessage?.attachmentName,
-                repliedMessageAttachmentSize = repliedMessageFileSize,
-                repliedMessageAttachmentDownloadProgressType = TypeDownloadProgress.NOT_DOWNLOADED,
-                repliedMessageAttachmentHeight = repliedMessageMediaFileHeight,
-                repliedMessageAttachmentWidth = repliedMessageMediaFileWidth,
-                dialogId = networkMessage.dialogId
-            )
-        }
-
-        fun mapOperatorMessage(
-            uuid: String,
-            networkMessage: NetworkMessage,
-            arrivalTime: Long,
-            actionsSelected: List<String>,
-            buttonsSelected: List<String>,
-            operatorPreview: String?,
-            fileSize: Long? = null,
-            mediaFileHeight: Int? = null,
-            mediaFileWidth: Int? = null
-        ): MessageEntity {
-            val list = arrayListOf<Tag>()
-            val message = networkMessage.message?.convertTextToNormalString(list)
-
-            return MessageEntity(
-                uuid = uuid,
-                id = networkMessage.id!!,
-                messageType = networkMessage.messageType,
-                isReply = true,
-                parentMsgId = networkMessage.parentMessageId,
-                timestamp = networkMessage.timestamp,
-                arrivalTime = arrivalTime,
-                message = message,
-                spanStructureList = list,
-                widget = networkMessage.widget?.let { WidgetEntity.map(it) },
-                actions = networkMessage.actions?.let { ActionEntity.map(it, actionsSelected) },
-                keyboard = networkMessage.keyboard?.let { KeyboardEntity.map(it, buttonsSelected) },
-                attachmentUrl = networkMessage.correctAttachmentUrl,
-                attachmentType = networkMessage.attachmentTypeFile,
-                attachmentDownloadProgressType = TypeDownloadProgress.NOT_DOWNLOADED,
-                attachmentName = networkMessage.attachmentName,
-                attachmentSize = fileSize,
-                operatorId = networkMessage.operatorId,
-                operatorPreview = operatorPreview,
-                operatorName = networkMessage.operatorName,
-                height = mediaFileHeight,
-                width = mediaFileWidth,
-                dialogId = networkMessage.dialogId
-            )
-        }
-
-        fun mapUserMessage(
-            uuid: String,
-            networkMessage: NetworkMessage,
-            arrivalTime: Long,
-            status: Int,
-            operatorPreview: String?,
-            fileSize: Long? = null,
-            mediaFileHeight: Int? = null,
-            mediaFileWidth: Int? = null,
-            repliedMessageFileSize: Long? = null,
-            repliedMessageMediaFileHeight: Int? = null,
-            repliedMessageMediaFileWidth: Int? = null,
-        ): MessageEntity {
-            val list = arrayListOf<Tag>()
-            val message = networkMessage.message?.convertTextToNormalString(list)
-            val repliedList = arrayListOf<Tag>()
-            val repliedMessage = networkMessage.replyToMessage?.message?.convertTextToNormalString(repliedList)
-
-            return MessageEntity(
-                uuid = uuid,
-                id = networkMessage.idFromChannel ?: networkMessage.id!!,
-                messageType = status,
-                isReply = false,
-                parentMsgId = networkMessage.parentMessageId,
-                timestamp = networkMessage.timestamp,
-                arrivalTime = arrivalTime,
-                message = message,
-                spanStructureList = list,
-                attachmentUrl = networkMessage.correctAttachmentUrl,
-                attachmentType = networkMessage.attachmentTypeFile,
-                attachmentDownloadProgressType = TypeDownloadProgress.NOT_DOWNLOADED,
-                attachmentName = networkMessage.attachmentName,
-                attachmentSize = fileSize,
-                operatorId = networkMessage.operatorId,
-                operatorPreview = operatorPreview,
-                operatorName = "Вы",
-                height = mediaFileHeight,
-                width = mediaFileWidth,
-                repliedMessageId = networkMessage.replyToMessage?.id,
-                repliedMessageText = repliedMessage,
-                repliedTextSpanStructureList = repliedList,
-                repliedMessageAttachmentUrl = networkMessage.replyToMessage?.correctAttachmentUrl,
-                repliedMessageAttachmentType = networkMessage.replyToMessage?.attachmentTypeFile,
-                repliedMessageAttachmentName = networkMessage.replyToMessage?.attachmentName,
-                repliedMessageAttachmentSize = repliedMessageFileSize,
-                repliedMessageAttachmentDownloadProgressType = TypeDownloadProgress.NOT_DOWNLOADED,
-                repliedMessageAttachmentHeight = repliedMessageMediaFileHeight,
-                repliedMessageAttachmentWidth = repliedMessageMediaFileWidth,
-                dialogId = networkMessage.dialogId
-            )
-        }
-
-        fun mapOperatorJoinMessage(
-            uuid: String,
-            networkMessage: NetworkMessage,
-            arrivalTime: Long,
-            operatorPreview: String?
-        ): MessageEntity {
-            return MessageEntity(
-                uuid = uuid,
-                id = networkMessage.id!!,
-                messageType = networkMessage.messageType,
-                isReply = true,
-                parentMsgId = networkMessage.parentMessageId,
-                timestamp = networkMessage.timestamp,
-                arrivalTime = arrivalTime,
-                operatorId = networkMessage.operatorId,
-                operatorPreview = operatorPreview,
-                operatorName = networkMessage.operatorName,
-                dialogId = networkMessage.dialogId
-            )
-        }
-
-        fun mapInfoMessage(
-            uuid: String,
-            infoMessage: String,
-            timestamp: Long,
-            arrivalTime: Long
-        ): MessageEntity {
-            val list = arrayListOf<Tag>()
-            val message = infoMessage.convertTextToNormalString(list)
-
-            return MessageEntity(
-                uuid = uuid,
-                id = UUID.randomUUID().toString(),
-                messageType = MessageType.INFO_MESSAGE.valueType,
-                isReply = true,
-                timestamp = timestamp,
-                arrivalTime = arrivalTime,
-                message = message,
-                spanStructureList = list
-            )
-        }
-    }
-}
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_ic_document.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_ic_document.xml b/chat/src/main/res/drawable/com_crafttalk_chat_ic_document.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_ic_document.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,5 +0,0 @@
-<vector android:height="24dp" android:tint="#BDBDBD"
-    android:viewportHeight="24.0" android:viewportWidth="24.0"
-    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
-    <path android:fillColor="#FF000000" android:pathData="M6,2c-1.1,0 -1.99,0.9 -1.99,2L4,20c0,1.1 0.89,2 1.99,2L18,22c1.1,0 2,-0.9 2,-2L20,8l-6,-6L6,2zM13,9L13,3.5L18.5,9L13,9z"/>
-</vector>
Index: chat/src/main/java/com/crafttalk/chat/data/local/db/dao/FileDao.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/local/db/dao/FileDao.kt b/chat/src/main/java/com/crafttalk/chat/data/local/db/dao/FileDao.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/local/db/dao/FileDao.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,20 +0,0 @@
-package com.crafttalk.chat.data.local.db.dao
-
-import androidx.room.Dao
-import androidx.room.Insert
-import androidx.room.Query
-import com.crafttalk.chat.data.local.db.entity.FileEntity
-
-@Dao
-interface FileDao {
-
-    @Query("SELECT file_name FROM files")
-    fun getFilesNames(): List<String>
-
-    @Insert
-    fun addFile(file: FileEntity)
-
-    @Query("DELETE FROM files WHERE file_name = :fileName")
-    fun deleteFile(fileName: String)
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/repository/IAuthRepository.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/repository/IAuthRepository.kt b/chat/src/main/java/com/crafttalk/chat/domain/repository/IAuthRepository.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/repository/IAuthRepository.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,22 +0,0 @@
-package com.crafttalk.chat.domain.repository
-
-import com.crafttalk.chat.domain.entity.auth.Visitor
-import com.crafttalk.chat.presentation.ChatEventListener
-import java.io.File
-
-interface IAuthRepository {
-    fun logIn(
-        visitor: Visitor,
-        successAuthUi: () -> Unit,
-        failAuthUi: () -> Unit,
-        successAuthUx: suspend () -> Unit,
-        failAuthUx: suspend () -> Unit,
-        sync: suspend () -> Unit,
-        updateCurrentReadMessageTime: (newTimeMarks: List<Pair<String, Long>>) -> Unit,
-        updateCountUnreadMessages: (Int, Boolean) -> Unit,
-        getPersonPreview: suspend (personId: String) -> String?,
-        updatePersonName: suspend (personId: String?, currentPersonName: String?) -> Unit,
-        chatEventListener: ChatEventListener?
-    )
-    fun logOut(filesDir: File)
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/model/Role.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/model/Role.kt b/chat/src/main/java/com/crafttalk/chat/presentation/model/Role.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/model/Role.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,7 +0,0 @@
-package com.crafttalk.chat.presentation.model
-
-enum class Role {
-    USER,
-    OPERATOR,
-    NEUTRAL
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/ApiParams.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/ApiParams.kt b/chat/src/main/java/com/crafttalk/chat/data/ApiParams.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/ApiParams.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,7 +0,0 @@
-package com.crafttalk.chat.data
-
-object ApiParams {
-    const val FILE_NAME = "fileName"
-    const val UUID = "uuid"
-    const val FILE_FIELD_NAME = "fileB64"
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkButtonImageAlign.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkButtonImageAlign.kt b/chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkButtonImageAlign.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkButtonImageAlign.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,13 +0,0 @@
-package com.crafttalk.chat.domain.entity.message
-
-import com.google.gson.annotations.SerializedName
-
-enum class NetworkButtonImageAlign {
-
-    @SerializedName("Center")
-    CENTER,
-
-    @SerializedName("Left")
-    LEFT
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderUserTextMessage.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderUserTextMessage.kt b/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderUserTextMessage.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderUserTextMessage.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,95 +0,0 @@
-package com.crafttalk.chat.presentation.holders
-
-import android.content.res.ColorStateList
-import android.view.View
-import android.view.ViewGroup
-import android.widget.ImageView
-import android.widget.ProgressBar
-import android.widget.TextView
-import androidx.core.view.ViewCompat
-import com.crafttalk.chat.R
-import com.crafttalk.chat.presentation.base.BaseViewHolder
-import com.crafttalk.chat.presentation.helper.extensions.*
-import com.crafttalk.chat.presentation.helper.ui.bindRepliedMessage
-import com.crafttalk.chat.presentation.model.TextMessageItem
-import com.crafttalk.chat.utils.ChatAttr
-
-class HolderUserTextMessage(
-    view: View,
-    private val selectReplyMessage: (messageId: String) -> Unit,
-    private val updateData: (id: String, height: Int, width: Int) -> Unit
-) : BaseViewHolder<TextMessageItem>(view), View.OnClickListener {
-    private val contentContainer: View? = view.findViewById(R.id.content_container)
-
-    private val message: TextView? = view.findViewById(R.id.user_message)
-    private val repliedMessageContainer: ViewGroup? = view.findViewById(R.id.replied_message_container)
-    private val repliedBarrier: View? = view.findViewById(R.id.replied_barrier)
-    private val repliedMessage: TextView? = view.findViewById(R.id.replied_message)
-    private val repliedFileInfo: ViewGroup? = view.findViewById(R.id.replied_file_info)
-    private val repliedFileIcon: ImageView? = view.findViewById(R.id.file_icon)
-    private val repliedProgressDownload: ProgressBar? = view.findViewById(R.id.progress_download)
-    private val repliedFileName: TextView? = view.findViewById(R.id.file_name)
-    private val repliedFileSize: TextView? = view.findViewById(R.id.file_size)
-    private val repliedMediaFile: ImageView? = view.findViewById(R.id.replied_media_file)
-    private val repliedMediaFileWarning: ViewGroup? = view.findViewById(R.id.replied_media_file_warning)
-    private val authorName: TextView? = view.findViewById(R.id.author_name)
-    private val authorPreview: ImageView? = view.findViewById(R.id.author_preview)
-    private val time: TextView? = view.findViewById(R.id.time)
-    private val status: ImageView? = view.findViewById(R.id.status)
-    private val date: TextView? = view.findViewById(R.id.date)
-
-    private var replyMessageId: String? = null
-
-    init {
-        repliedMessageContainer?.setOnClickListener(this)
-    }
-
-    override fun onClick(view: View) {
-        when (view.id) {
-            R.id.replied_message_container -> replyMessageId?.run(selectReplyMessage)
-        }
-    }
-
-    override fun bindTo(item: TextMessageItem) {
-        replyMessageId = item.repliedMessage?.id
-
-        date?.setDate(item)
-        // set content
-        authorName?.setAuthor(item)
-        authorPreview?.setAuthorIcon(showAuthorIcon = false)
-        time?.setTime(item)
-        status?.setStatusMessage(item)
-        message?.setMessageText(
-            textMessage = item.message,
-            maxWidthTextMessage = ChatAttr.getInstance().widthItemUserTextMessage,
-            colorTextMessage = ChatAttr.getInstance().colorTextUserMessage,
-            colorTextLinkMessage = ChatAttr.getInstance().colorTextLinkUserMessage,
-            sizeTextMessage = ChatAttr.getInstance().sizeTextUserMessage,
-            resFontFamilyMessage = ChatAttr.getInstance().resFontFamilyUserMessage,
-            isClickableLink = true,
-            isSelectableText = true
-        )
-        bindRepliedMessage(
-            itemId = item.id,
-            itemRepliedMessage = item.repliedMessage,
-            isUserMessage = true,
-            repliedMessageContainer = repliedMessageContainer,
-            repliedBarrier = repliedBarrier,
-            repliedMessage = repliedMessage,
-            repliedFileInfo = repliedFileInfo,
-            repliedFileIcon = repliedFileIcon,
-            repliedProgressDownload = repliedProgressDownload,
-            repliedFileName = repliedFileName,
-            repliedFileSize = repliedFileSize,
-            repliedMediaFile = repliedMediaFile,
-            repliedMediaFileWarning = repliedMediaFileWarning,
-            updateData = updateData
-        )
-        // set bg
-        contentContainer?.apply {
-            setBackgroundResource(ChatAttr.getInstance().bgUserMessageResId)
-            ViewCompat.setBackgroundTintList(this, ColorStateList.valueOf(ChatAttr.getInstance().colorBackgroundUserMessage))
-        }
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_background_error_field_auth_form.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_background_error_field_auth_form.xml b/chat/src/main/res/drawable/com_crafttalk_chat_background_error_field_auth_form.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_background_error_field_auth_form.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,10 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<shape
-    android:shape="rectangle"
-    xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <solid android:color="#fff"/>
-    <stroke android:color="@color/com_crafttalk_chat_error" android:width="1dp"/>
-    <corners android:radius="5dp"/>
-
-</shape>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/utils/JSONObject.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/utils/JSONObject.kt b/chat/src/main/java/com/crafttalk/chat/utils/JSONObject.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/utils/JSONObject.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,28 +0,0 @@
-package com.crafttalk.chat.utils
-
-import org.json.JSONException
-import org.json.JSONObject
-
-fun JSONObject.getOrNull(key: String): Any? {
-    return if (has(key)) {
-        try {
-            get(key)
-        } catch (ex: JSONException) {
-            null
-        }
-    } else {
-        null
-    }
-}
-
-fun JSONObject.getStringOrNull(key: String): String? {
-    return if (has(key)) {
-        try {
-            getString(key)
-        } catch (ex: JSONException) {
-            null
-        }
-    } else {
-        null
-    }
-}
\ No newline at end of file
Index: chat/src/main/res/layout/com_crafttalk_chat_layout_auth.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_layout_auth.xml b/chat/src/main/res/layout/com_crafttalk_chat_layout_auth.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_layout_auth.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,74 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:padding="16dp"
-    android:orientation="vertical">
-
-    <TextView
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:text="@string/com_crafttalk_chat_auth_user_introduction"
-        android:textSize="18sp"
-        android:gravity="center"
-        android:layout_gravity="center" />
-
-    <EditText
-        android:id="@+id/first_name_user"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:hint="@string/com_crafttalk_chat_auth_user_first_name"
-        android:textSize="16sp"
-        android:textColor="#000"
-        android:inputType="text"
-        android:maxLines="1"
-        android:background="@drawable/com_crafttalk_chat_background_normal_field_auth_form"
-        android:padding="8dp"
-        android:layout_marginTop="16dp"
-        android:layout_gravity="center" />
-
-    <EditText
-        android:id="@+id/last_name_user"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:hint="@string/com_crafttalk_chat_auth_user_surname_name"
-        android:textSize="16sp"
-        android:textColor="#000"
-        android:inputType="text"
-        android:maxLines="1"
-        android:background="@drawable/com_crafttalk_chat_background_normal_field_auth_form"
-        android:padding="8dp"
-        android:layout_marginTop="16dp"
-        android:layout_gravity="center" />
-
-    <EditText
-        android:id="@+id/phone_user"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:hint="@string/com_crafttalk_chat_auth_user_phone"
-        android:textSize="16sp"
-        android:textColor="#000"
-        android:digits="1234567890+-() "
-        android:inputType="number"
-        android:imeOptions="actionDone"
-        android:maxLines="1"
-        android:background="@drawable/com_crafttalk_chat_background_normal_field_auth_form"
-        android:padding="8dp"
-        android:layout_marginTop="16dp"
-        android:layout_gravity="center" />
-
-    <TextView
-        android:id="@+id/sign_in"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:text="@string/com_crafttalk_chat_auth_sign_in"
-        android:textSize="14sp"
-        android:textColor="#fff"
-        android:gravity="center"
-        android:layout_gravity="center"
-        android:layout_marginTop="16dp"
-        android:background="@drawable/com_crafttalk_chat_background_sign_in_auth_form"
-        android:padding="8dp" />
-
-</LinearLayout>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/entity/notification/NetworkResultCheckSubscription.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/entity/notification/NetworkResultCheckSubscription.kt b/chat/src/main/java/com/crafttalk/chat/domain/entity/notification/NetworkResultCheckSubscription.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/entity/notification/NetworkResultCheckSubscription.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,5 +0,0 @@
-package com.crafttalk.chat.domain.entity.notification
-
-class NetworkResultCheckSubscription(
-    val result: Boolean
-)
\ No newline at end of file
Index: chat/src/main/res/layout/com_crafttalk_chat_item_server_gif_message.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_item_server_gif_message.xml b/chat/src/main/res/layout/com_crafttalk_chat_item_server_gif_message.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_item_server_gif_message.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,97 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:layout_marginStart="@dimen/com_crafttalk_chat_message_margin_start"
-    android:layout_marginTop="@dimen/com_crafttalk_chat_message_margin_top"
-    android:layout_marginEnd="@dimen/com_crafttalk_chat_message_margin_end"
-    android:layout_marginBottom="@dimen/com_crafttalk_chat_message_margin_bottom">
-
-    <include
-        android:id="@+id/include_date"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        layout="@layout/com_crafttalk_chat_include_date_message" />
-
-    <View
-        android:id="@+id/content_container"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/include_date"
-        app:layout_constraintEnd_toEndOf="@id/barrier_gif_end"
-        app:layout_constraintBottom_toBottomOf="@id/barrier_gif_bottom"
-        tools:background="@drawable/com_crafttalk_chat_background_item_simple_server_message" />
-
-    <ImageView
-        android:id="@+id/server_gif"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:scaleType="fitXY"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/include_date"
-        tools:layout_width="150dp"
-        tools:layout_height="150dp"
-        tools:src="@tools:sample/avatars"
-        tools:padding="10dp"
-        tools:visibility="visible" />
-
-    <include
-        android:id="@+id/server_gif_warning"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        layout="@layout/com_crafttalk_chat_include_media_warning"
-        android:visibility="gone"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/include_date"
-        tools:layout_width="150dp"
-        tools:layout_height="150dp"
-        tools:visibility="gone" />
-
-    <TextView
-        android:id="@+id/download_file"
-        android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        android:text="@string/com_crafttalk_chat_download"
-        android:gravity="center"
-        android:padding="8dp"
-        android:layout_marginTop="@dimen/com_crafttalk_chat_download_btn_margin_top"
-        app:layout_constraintStart_toStartOf="@id/server_gif"
-        app:layout_constraintEnd_toEndOf="@id/server_gif"
-        app:layout_constraintTop_toBottomOf="@id/server_gif"
-        tools:visibility="visible" />
-
-    <androidx.constraintlayout.widget.Barrier
-        android:id="@+id/barrier_gif_end"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        app:barrierDirection="end"
-        app:constraint_referenced_ids="server_gif,server_gif_warning" />
-
-    <androidx.constraintlayout.widget.Barrier
-        android:id="@+id/barrier_gif_bottom"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        app:barrierDirection="bottom"
-        app:constraint_referenced_ids="server_gif,server_gif_warning" />
-
-    <androidx.constraintlayout.widget.Barrier
-        android:id="@+id/barrier_content_bottom"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        app:barrierDirection="bottom"
-        app:constraint_referenced_ids="server_gif,server_gif_warning,download_file" />
-
-    <include
-        android:id="@+id/include_message_info"
-        android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        layout="@layout/com_crafttalk_chat_include_server_message_info"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/barrier_content_bottom" />
-
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_ic_search.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_ic_search.xml b/chat/src/main/res/drawable/com_crafttalk_chat_ic_search.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_ic_search.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,5 +0,0 @@
-<vector android:height="24dp" android:tint="#000000"
-    android:viewportHeight="24" android:viewportWidth="24"
-    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
-    <path android:fillColor="@android:color/black" android:pathData="M15.5,14h-0.79l-0.28,-0.27C15.41,12.59 16,11.11 16,9.5 16,5.91 13.09,3 9.5,3S3,5.91 3,9.5 5.91,16 9.5,16c1.61,0 3.09,-0.59 4.23,-1.57l0.27,0.28v0.79l5,4.99L20.49,19l-4.99,-5zM9.5,14C7.01,14 5,11.99 5,9.5S7.01,5 9.5,5 14,7.01 14,9.5 11.99,14 9.5,14z"/>
-</vector>
Index: chat/src/main/res/drawable/com_crafttalk_chat_ic_star_outline.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_ic_star_outline.xml b/chat/src/main/res/drawable/com_crafttalk_chat_ic_star_outline.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_ic_star_outline.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,5 +0,0 @@
-<vector android:height="24dp" android:tint="#FFFFFF"
-    android:viewportHeight="24" android:viewportWidth="24"
-    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
-    <path android:fillColor="@android:color/white" android:pathData="M22,9.24l-7.19,-0.62L12,2 9.19,8.63 2,9.24l5.46,4.73L5.82,21 12,17.27 18.18,21l-1.63,-7.03L22,9.24zM12,15.4l-3.76,2.27 1,-4.28 -3.32,-2.88 4.38,-0.38L12,6.1l1.71,4.04 4.38,0.38 -3.32,2.88 1,4.28L12,15.4z"/>
-</vector>
Index: chat/src/main/res/drawable/com_crafttalk_chat_ic_operator.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_ic_operator.xml b/chat/src/main/res/drawable/com_crafttalk_chat_ic_operator.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_ic_operator.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,5 +0,0 @@
-<vector android:height="24dp" android:tint="#ddd"
-    android:viewportHeight="24" android:viewportWidth="24"
-    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
-    <path android:fillColor="@android:color/white" android:pathData="M12,2C6.48,2 2,6.48 2,12s4.48,10 10,10 10,-4.48 10,-10S17.52,2 12,2zM12,5c1.66,0 3,1.34 3,3s-1.34,3 -3,3 -3,-1.34 -3,-3 1.34,-3 3,-3zM12,19.2c-2.5,0 -4.71,-1.28 -6,-3.22 0.03,-1.99 4,-3.08 6,-3.08 1.99,0 5.97,1.09 6,3.08 -1.29,1.94 -3.5,3.22 -6,3.22z"/>
-</vector>
Index: chat/src/main/java/com/crafttalk/chat/utils/ChatAttr.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/utils/ChatAttr.kt b/chat/src/main/java/com/crafttalk/chat/utils/ChatAttr.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/utils/ChatAttr.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,281 +0,0 @@
-package com.crafttalk.chat.utils
-
-import android.content.Context
-import android.content.res.TypedArray
-import android.graphics.PorterDuff
-import android.graphics.drawable.Drawable
-import android.os.Build
-import androidx.core.content.ContextCompat
-import androidx.core.graphics.drawable.DrawableCompat
-import com.crafttalk.chat.R
-import com.crafttalk.chat.presentation.helper.extensions.getDimensionOrNull
-import com.crafttalk.chat.presentation.helper.extensions.getFloatOrNull
-import com.crafttalk.chat.presentation.helper.extensions.getResourceIdOrNull
-import com.crafttalk.chat.presentation.helper.ui.getSizeScreenInPx
-
-class ChatAttr
-private constructor(
-    attrArr: TypedArray,
-    context: Context
-) {
-
-    val widthScreenInPx = getSizeScreenInPx(context).first.toFloat()
-    val heightScreenInPx = getSizeScreenInPx(context).second.toFloat()
-
-    val timeDelayed = attrArr.getInt(R.styleable.ChatView_timeDelayed, 0).toLong()
-    val delayDownloadDocument = attrArr.getInt(R.styleable.ChatView_delay_download_document, 1000).toLong()
-    val replyEnable = attrArr.getBoolean(R.styleable.ChatView_reply_enable, false)
-
-    val colorMain = attrArr.getColor(R.styleable.ChatView_color_main, ContextCompat.getColor(context, R.color.com_crafttalk_chat_default_color_main))
-    val colorBlack = ContextCompat.getColor(context, R.color.com_crafttalk_chat_black)
-    val colorTextInternetConnectionWarning = attrArr.getColor(R.styleable.ChatView_color_text_warning, ContextCompat.getColor(context, R.color.com_crafttalk_chat_default_color_text_warning))
-    val colorTextInfo = attrArr.getColor(R.styleable.ChatView_color_company, ContextCompat.getColor(context, R.color.com_crafttalk_chat_default_color_info))
-    val colorTextUserMessage = attrArr.getColor(R.styleable.ChatView_color_text_user_message, ContextCompat.getColor(context, R.color.com_crafttalk_chat_default_color_text_user_message))
-    val colorBarrierUserRepliedMessage = attrArr.getColor(R.styleable.ChatView_color_barrier_user_replied_message, ContextCompat.getColor(context, R.color.com_crafttalk_chat_default_color_barrier_replied_message))
-    val colorBarrierOperatorRepliedMessage = attrArr.getColor(R.styleable.ChatView_color_barrier_operator_replied_message, colorMain)
-    val colorTextUserRepliedMessage = attrArr.getColor(R.styleable.ChatView_color_text_user_replied_message, ContextCompat.getColor(context, R.color.com_crafttalk_chat_default_color_text_user_replied_message))
-    val colorTextOperatorRepliedMessage = attrArr.getColor(R.styleable.ChatView_color_text_operator_replied_message, ContextCompat.getColor(context, R.color.com_crafttalk_chat_default_color_text_user_replied_message))
-    val colorTextOperatorMessage = attrArr.getColor(R.styleable.ChatView_color_text_operator_message, ContextCompat.getColor(context, R.color.com_crafttalk_chat_default_color_text_server_message))
-    val colorTextOperatorAction = attrArr.getColor(R.styleable.ChatView_color_text_operator_action, ContextCompat.getColor(context, R.color.com_crafttalk_chat_default_color_text_server_action))
-    val colorTextOperatorSelectedAction = attrArr.getColor(R.styleable.ChatView_color_text_operator_selected_action, ContextCompat.getColor(context, R.color.com_crafttalk_chat_white))
-    val colorTextOperatorButton = attrArr.getColor(R.styleable.ChatView_color_text_operator_button, colorMain)
-    val colorPrimaryTextOperatorButton = attrArr.getColor(R.styleable.ChatView_color_primary_text_operator_button, colorTextOperatorButton)
-    val colorSecondaryTextOperatorButton = attrArr.getColor(R.styleable.ChatView_color_secondary_text_operator_button, colorTextOperatorButton)
-    val colorNegativeTextOperatorButton = attrArr.getColor(R.styleable.ChatView_color_negative_text_operator_button, colorTextOperatorButton)
-    val colorTextOperatorSelectedButton = attrArr.getColor(R.styleable.ChatView_color_text_operator_selected_button, ContextCompat.getColor(context, R.color.com_crafttalk_chat_white))
-    val colorPrimaryTextOperatorSelectedButton = attrArr.getColor(R.styleable.ChatView_color_primary_text_operator_selected_button, colorTextOperatorSelectedButton)
-    val colorSecondaryTextOperatorSelectedButton = attrArr.getColor(R.styleable.ChatView_color_secondary_text_operator_selected_button, colorTextOperatorSelectedButton)
-    val colorNegativeTextOperatorSelectedButton = attrArr.getColor(R.styleable.ChatView_color_negative_text_operator_selected_button, colorTextOperatorSelectedButton)
-    private val colorFileName = attrArr.getColor(R.styleable.ChatView_color_file_name, ContextCompat.getColor(context, R.color.com_crafttalk_chat_default_color_info))
-    val colorUserFileName = attrArr.getColor(R.styleable.ChatView_color_user_file_name, colorFileName)
-    val colorUserRepliedFileName = attrArr.getColor(R.styleable.ChatView_color_user_replied_file_name, colorFileName)
-    val colorOperatorRepliedFileName = attrArr.getColor(R.styleable.ChatView_color_operator_replied_file_name, colorFileName)
-    val colorOperatorFileName = attrArr.getColor(R.styleable.ChatView_color_operator_file_name, colorFileName)
-    private val colorFileSize = attrArr.getColor(R.styleable.ChatView_color_file_size, ContextCompat.getColor(context, R.color.com_crafttalk_chat_default_color_info))
-    val colorUserFileSize = attrArr.getColor(R.styleable.ChatView_color_user_file_size, colorFileSize)
-    val colorUserRepliedFileSize = attrArr.getColor(R.styleable.ChatView_color_user_replied_file_size, colorFileSize)
-    val colorOperatorRepliedFileSize = attrArr.getColor(R.styleable.ChatView_color_operator_replied_file_size, colorFileSize)
-    val colorOperatorFileSize = attrArr.getColor(R.styleable.ChatView_color_operator_file_size, colorFileSize)
-    val colorTextUserMessageAuthor = attrArr.getColor(R.styleable.ChatView_color_text_user_message_author, ContextCompat.getColor(context, R.color.com_crafttalk_chat_default_color_info))
-    val colorTextOperatorMessageAuthor = attrArr.getColor(R.styleable.ChatView_color_text_operator_message_author, ContextCompat.getColor(context, R.color.com_crafttalk_chat_default_color_info))
-    private val colorUserMessageTime = attrArr.getColor(R.styleable.ChatView_color_user_message_time, ContextCompat.getColor(context, R.color.com_crafttalk_chat_default_color_info))
-    val colorUserFileMessageTime = attrArr.getColor(R.styleable.ChatView_color_user_file_message_time, colorUserMessageTime)
-    val colorUserGifMessageTime = attrArr.getColor(R.styleable.ChatView_color_user_gif_message_time, colorUserMessageTime)
-    val colorUserImageMessageTime = attrArr.getColor(R.styleable.ChatView_color_user_image_message_time, colorUserMessageTime)
-    val colorUserTextMessageTime = attrArr.getColor(R.styleable.ChatView_color_user_text_message_time, colorUserMessageTime)
-    private val colorOperatorMessageTime = attrArr.getColor(R.styleable.ChatView_color_operator_message_time, ContextCompat.getColor(context, R.color.com_crafttalk_chat_default_color_info))
-    val colorOperatorFileMessageTime = attrArr.getColor(R.styleable.ChatView_color_operator_file_message_time, colorOperatorMessageTime)
-    val colorOperatorGifMessageTime = attrArr.getColor(R.styleable.ChatView_color_operator_gif_message_time, colorOperatorMessageTime)
-    val colorOperatorImageMessageTime = attrArr.getColor(R.styleable.ChatView_color_operator_image_message_time, colorOperatorMessageTime)
-    val colorOperatorTextMessageTime = attrArr.getColor(R.styleable.ChatView_color_operator_text_message_time, colorOperatorMessageTime)
-    val colorOperatorWidgetMessageTime = attrArr.getColor(R.styleable.ChatView_color_operator_widget_message_time, colorOperatorMessageTime)
-    private val colorUserMessageStatus = attrArr.getColor(R.styleable.ChatView_color_user_message_status, ContextCompat.getColor(context, R.color.com_crafttalk_chat_default_color_info))
-    val colorUserFileMessageStatus = attrArr.getColor(R.styleable.ChatView_color_user_file_message_status, colorUserMessageStatus)
-    val colorUserGifMessageStatus = attrArr.getColor(R.styleable.ChatView_color_user_gif_message_status, colorUserMessageStatus)
-    val colorUserImageMessageStatus = attrArr.getColor(R.styleable.ChatView_color_user_image_message_status, colorUserMessageStatus)
-    val colorUserTextMessageStatus = attrArr.getColor(R.styleable.ChatView_color_user_text_message_status, colorUserMessageStatus)
-    val colorTextDateGrouping = attrArr.getColor(R.styleable.ChatView_color_text_date_grouping, ContextCompat.getColor(context, R.color.com_crafttalk_chat_default_color_info))
-    val colorTextLinkOperatorMessage = attrArr.getColor(R.styleable.ChatView_color_text_link_operator_message, ContextCompat.getColor(context, R.color.com_crafttalk_chat_default_color_text_link_server_message))
-    val colorTextLinkUserMessage = attrArr.getColor(R.styleable.ChatView_color_text_link_user_message, ContextCompat.getColor(context, R.color.com_crafttalk_chat_default_color_text_link_user_message))
-    val colorTextPhoneOperatorMessage = attrArr.getColor(R.styleable.ChatView_color_text_phone_operator_message, ContextCompat.getColor(context, R.color.com_crafttalk_chat_default_color_text_phone_server_message))
-    val colorTextPhoneUserMessage = attrArr.getColor(R.styleable.ChatView_color_text_phone_user_message, ContextCompat.getColor(context, R.color.com_crafttalk_chat_default_color_text_phone_user_message))
-
-    val colorBackgroundUserMessage = attrArr.getColor(R.styleable.ChatView_color_bg_user_message, ContextCompat.getColor(context, R.color.com_crafttalk_chat_default_color_bg_user_message))
-    val colorBackgroundUserMediaFileMessage = attrArr.getColor(R.styleable.ChatView_color_bg_user_media_file_message, ContextCompat.getColor(context, R.color.com_crafttalk_chat_default_color_bg_user_message))
-    val colorBackgroundOperatorMessage = attrArr.getColor(R.styleable.ChatView_color_bg_operator_message, ContextCompat.getColor(context, R.color.com_crafttalk_chat_default_color_bg_server_message))
-    val colorBackgroundOperatorMediaFileMessage = attrArr.getColor(R.styleable.ChatView_color_bg_operator_media_file_message, ContextCompat.getColor(context, R.color.com_crafttalk_chat_default_color_bg_server_message))
-    val colorBackgroundOperatorAction = attrArr.getColor(R.styleable.ChatView_color_bg_operator_action, ContextCompat.getColor(context, R.color.com_crafttalk_chat_default_color_bg_server_action))
-    val colorBackgroundOperatorSelectedAction = attrArr.getColor(R.styleable.ChatView_color_bg_operator_selected_action, colorMain)
-    val backgroundResOperatorButton = attrArr.getInt(R.styleable.ChatView_resource_bg_operator_button, R.drawable.com_crafttalk_chat_background_item_button)
-    val backgroundPrimaryResOperatorButton = attrArr.getInt(R.styleable.ChatView_resource_primary_bg_operator_button, backgroundResOperatorButton)
-    val backgroundSecondaryResOperatorButton = attrArr.getInt(R.styleable.ChatView_resource_secondary_bg_operator_button, backgroundResOperatorButton)
-    val backgroundNegativeResOperatorButton = attrArr.getInt(R.styleable.ChatView_resource_negative_bg_operator_button, backgroundResOperatorButton)
-    val backgroundResOperatorSelectedButton = attrArr.getInt(R.styleable.ChatView_resource_bg_operator_selected_button, R.drawable.com_crafttalk_chat_background_item_selected_button)
-    val backgroundPrimaryResOperatorSelectedButton = attrArr.getInt(R.styleable.ChatView_resource_primary_bg_operator_selected_button, backgroundResOperatorSelectedButton)
-    val backgroundSecondaryResOperatorSelectedButton = attrArr.getInt(R.styleable.ChatView_resource_secondary_bg_operator_selected_button, backgroundResOperatorSelectedButton)
-    val backgroundNegativeResOperatorSelectedButton = attrArr.getInt(R.styleable.ChatView_resource_negative_bg_operator_selected_button, backgroundResOperatorSelectedButton)
-    val colorBordersOperatorAction = attrArr.getColor(R.styleable.ChatView_color_borders_operator_action, ContextCompat.getColor(context, R.color.com_crafttalk_chat_default_color_borders_server_action))
-
-    val drawableProgressIndeterminate = attrArr.getDrawable(R.styleable.ChatView_drawable_progress_indeterminate)
-    val drawableAttachFile = attrArr.getDrawable(R.styleable.ChatView_drawable_attach_file) ?: ContextCompat.getDrawable(context, R.drawable.com_crafttalk_chat_ic_attach_file)
-    val drawableSendMessage = attrArr.getDrawable(R.styleable.ChatView_drawable_send_message) ?: ContextCompat.getDrawable(context, R.drawable.com_crafttalk_chat_ic_send)
-    val drawableDocumentNotDownloadedIcon = attrArr.getDrawable(R.styleable.ChatView_drawable_document_not_downloaded_icon)
-    val drawableDocumentDownloadingIcon = attrArr.getDrawable(R.styleable.ChatView_drawable_document_downloading_icon)
-    val drawableDocumentDownloadedIcon = attrArr.getDrawable(R.styleable.ChatView_drawable_document_downloaded_icon)
-    val drawableReplyMessageIcon = attrArr.getDrawable(R.styleable.ChatView_drawable_reply_message) ?: ContextCompat.getDrawable(context, R.drawable.com_crafttalk_chat_ic_reply_message)
-
-    val sizeTextInternetConnectionWarning = attrArr.getDimensionPixelSize(R.styleable.ChatView_size_warning, context.resources.getDimensionPixelSize(R.dimen.com_crafttalk_chat_default_size_warning)).toFloat()
-    val sizeTextInfoText = attrArr.getDimensionPixelSize(R.styleable.ChatView_size_info, context.resources.getDimensionPixelSize(R.dimen.com_crafttalk_chat_default_size_info)).toFloat()
-    val sizeTextUserMessage = attrArr.getDimensionPixelSize(R.styleable.ChatView_size_user_message, context.resources.getDimensionPixelSize(R.dimen.com_crafttalk_chat_default_size_user_message)).toFloat()
-    val sizeTextUserRepliedMessage = attrArr.getDimensionPixelSize(R.styleable.ChatView_size_user_replied_message, context.resources.getDimensionPixelSize(R.dimen.com_crafttalk_chat_default_size_user_replied_message)).toFloat()
-    val sizeTextOperatorRepliedMessage = attrArr.getDimensionPixelSize(R.styleable.ChatView_size_operator_replied_message, context.resources.getDimensionPixelSize(R.dimen.com_crafttalk_chat_default_size_user_replied_message)).toFloat()
-    val sizeTextOperatorMessage = attrArr.getDimensionPixelSize(R.styleable.ChatView_size_operator_message, context.resources.getDimensionPixelSize(R.dimen.com_crafttalk_chat_default_size_server_message)).toFloat()
-    val sizeTextOperatorAction = attrArr.getDimensionPixelSize(R.styleable.ChatView_size_operator_action, context.resources.getDimensionPixelSize(R.dimen.com_crafttalk_chat_default_size_server_action)).toFloat()
-    val sizeTextOperatorButton = attrArr.getDimensionPixelSize(R.styleable.ChatView_size_operator_button, context.resources.getDimensionPixelSize(R.dimen.com_crafttalk_chat_default_size_server_button)).toFloat()
-    private val sizeFileName = attrArr.getDimensionPixelSize(R.styleable.ChatView_size_file_name, context.resources.getDimensionPixelSize(R.dimen.com_crafttalk_chat_default_size_info)).toFloat()
-    val sizeUserFileName = attrArr.getDimension(R.styleable.ChatView_size_user_file_name, sizeFileName)
-    val sizeUserRepliedFileName = attrArr.getDimension(R.styleable.ChatView_size_user_replied_file_name, sizeFileName)
-    val sizeOperatorRepliedFileName = attrArr.getDimension(R.styleable.ChatView_size_operator_replied_file_name, sizeFileName)
-    val sizeOperatorFileName = attrArr.getDimension(R.styleable.ChatView_size_operator_file_name, sizeFileName)
-    private val sizeFileSize = attrArr.getDimensionPixelSize(R.styleable.ChatView_size_file_size, context.resources.getDimensionPixelSize(R.dimen.com_crafttalk_chat_default_size_info)).toFloat()
-    val sizeUserFileSize = attrArr.getDimension(R.styleable.ChatView_size_user_file_size, sizeFileSize)
-    val sizeUserRepliedFileSize = attrArr.getDimension(R.styleable.ChatView_size_user_replied_file_size, sizeFileSize)
-    val sizeOperatorRepliedFileSize = attrArr.getDimension(R.styleable.ChatView_size_operator_replied_file_size, sizeFileSize)
-    val sizeOperatorFileSize = attrArr.getDimension(R.styleable.ChatView_size_operator_file_size, sizeFileSize)
-
-    val sizeUserMessageAuthor = attrArr.getDimensionPixelSize(R.styleable.ChatView_size_user_message_author, context.resources.getDimensionPixelSize(R.dimen.com_crafttalk_chat_default_size_author)).toFloat()
-    val sizeOperatorMessageAuthor = attrArr.getDimensionPixelSize(R.styleable.ChatView_size_operator_message_author, context.resources.getDimensionPixelSize(R.dimen.com_crafttalk_chat_default_size_author)).toFloat()
-    val sizeOperatorMessageAuthorPreview = attrArr.getDimensionPixelSize(R.styleable.ChatView_size_operator_message_author_preview, context.resources.getDimensionPixelSize(R.dimen.com_crafttalk_chat_default_size_author_preview))
-    val sizeUserMessageTime = attrArr.getDimensionPixelSize(R.styleable.ChatView_size_user_message_time, context.resources.getDimensionPixelSize(R.dimen.com_crafttalk_chat_default_size_time)).toFloat()
-    val sizeOperatorMessageTime = attrArr.getDimensionPixelSize(R.styleable.ChatView_size_operator_message_time, context.resources.getDimensionPixelSize(R.dimen.com_crafttalk_chat_default_size_time)).toFloat()
-    val sizeTextDateGrouping = attrArr.getDimensionPixelSize(R.styleable.ChatView_size_text_date_grouping, context.resources.getDimensionPixelSize(R.dimen.com_crafttalk_chat_default_size_info)).toFloat()
-
-    private val widthItemUserTextMessageInPercent by lazy { attrArr.getFloat(R.styleable.ChatView_width_item_user_text_message_in_percent, 0.6f) * widthScreenInPx }
-    private val widthItemOperatorTextMessageInPercent by lazy { attrArr.getFloat(R.styleable.ChatView_width_item_operator_text_message_in_percent, 0.75f) * widthScreenInPx }
-    private val widthItemUserFileIconMessageInPercent = attrArr.getFloatOrNull(R.styleable.ChatView_width_item_user_file_icon_message_in_percent)?.let { it * widthScreenInPx }
-    private val widthItemOperatorFileIconMessageInPercent = attrArr.getFloatOrNull(R.styleable.ChatView_width_item_operator_file_icon_message_in_percent)?.let { it * widthScreenInPx }
-    private val widthItemUserFilePreviewWarningMessageInPercent = attrArr.getFloatOrNull(R.styleable.ChatView_width_item_user_file_preview_warning_message_in_percent)?.let { it * widthScreenInPx } ?: (widthScreenInPx / 2)
-    private val widthItemOperatorFilePreviewWarningMessageInPercent = attrArr.getFloatOrNull(R.styleable.ChatView_width_item_operator_file_preview_warning_message_in_percent)?.let { it * widthScreenInPx } ?: (widthScreenInPx / 2)
-    private val widthElongatedItemUserFilePreviewMessageInPercent = attrArr.getFloatOrNull(R.styleable.ChatView_width_elongated_item_user_file_preview_message_in_percent)?.let { it * widthScreenInPx } ?: (0.7f * widthScreenInPx)
-    private val widthElongatedItemOperatorFilePreviewMessageInPercent = attrArr.getFloatOrNull(R.styleable.ChatView_width_elongated_item_operator_file_preview_message_in_percent)?.let { it * widthScreenInPx } ?: (0.7f * widthScreenInPx)
-    private val heightElongatedItemUserFilePreviewMessageInPercent = attrArr.getFloatOrNull(R.styleable.ChatView_height_elongated_item_user_file_preview_message_in_percent)?.let { it * heightScreenInPx } ?: (0.4f * heightScreenInPx)
-    private val heightElongatedItemOperatorFilePreviewMessageInPercent = attrArr.getFloatOrNull(R.styleable.ChatView_height_elongated_item_operator_file_preview_message_in_percent)?.let { it * heightScreenInPx } ?: (0.4f * heightScreenInPx)
-    val widthItemUserTextMessage = (attrArr.getDimensionOrNull(R.styleable.ChatView_width_item_user_text_message) ?: widthItemUserTextMessageInPercent).toInt()
-    val widthItemOperatorTextMessage = (attrArr.getDimensionOrNull(R.styleable.ChatView_width_item_operator_text_message) ?: widthItemOperatorTextMessageInPercent).toInt()
-    val horizontalSpacingOperatorButton = attrArr.getDimension(R.styleable.ChatView_horizontal_spacing_operator_button, context.resources.getDimension(R.dimen.com_crafttalk_chat_horizontal_spacing_operator_button))
-    val verticalSpacingOperatorButton = attrArr.getDimension(R.styleable.ChatView_vertical_spacing_operator_button, context.resources.getDimension(R.dimen.com_crafttalk_chat_vertical_spacing_operator_button))
-    val widthItemUserFileIconMessage = (attrArr.getDimensionOrNull(R.styleable.ChatView_width_item_user_file_icon_message) ?: widthItemUserFileIconMessageInPercent)?.toInt()
-    val widthItemOperatorFileIconMessage = (attrArr.getDimensionOrNull(R.styleable.ChatView_width_item_operator_file_icon_message) ?: widthItemOperatorFileIconMessageInPercent)?.toInt()
-    val widthItemUserFilePreviewWarningMessage = (attrArr.getDimensionOrNull(R.styleable.ChatView_width_item_user_file_preview_warning_message) ?: widthItemUserFilePreviewWarningMessageInPercent).toInt()
-    val widthItemOperatorFilePreviewWarningMessage = (attrArr.getDimensionOrNull(R.styleable.ChatView_width_item_operator_file_preview_warning_message) ?: widthItemOperatorFilePreviewWarningMessageInPercent).toInt()
-    val widthElongatedItemUserFilePreviewMessage = (attrArr.getDimensionOrNull(R.styleable.ChatView_width_elongated_item_user_file_preview_message) ?: widthElongatedItemUserFilePreviewMessageInPercent).toInt()
-    val widthElongatedItemOperatorFilePreviewMessage = (attrArr.getDimensionOrNull(R.styleable.ChatView_width_elongated_item_operator_file_preview_message) ?: widthElongatedItemOperatorFilePreviewMessageInPercent).toInt()
-    val heightElongatedItemUserFilePreviewMessage = (attrArr.getDimensionOrNull(R.styleable.ChatView_height_elongated_item_user_file_preview_message) ?: heightElongatedItemUserFilePreviewMessageInPercent).toInt()
-    val heightElongatedItemOperatorFilePreviewMessage = (attrArr.getDimensionOrNull(R.styleable.ChatView_height_elongated_item_operator_file_preview_message) ?: heightElongatedItemOperatorFilePreviewMessageInPercent).toInt()
-
-    private val roundedMediaFilePreviewMessage = attrArr.getDimensionOrNull(R.styleable.ChatView_rounded_media_file_preview_message)
-    private val roundedGifFilePreviewMessage = attrArr.getDimensionOrNull(R.styleable.ChatView_rounded_gif_file_preview_message)
-    private val defaultRoundedMediaFilePreview = context.resources.getDimensionPixelSize(R.dimen.com_crafttalk_chat_default_rounded_media_file_preview).toFloat()
-    private val defaultRoundedGifFilePreview = context.resources.getDimensionPixelSize(R.dimen.com_crafttalk_chat_default_rounded_gif_file_preview).toFloat()
-    val roundedTopLeftUserMediaFilePreviewMessage = attrArr.getDimensionOrNull(R.styleable.ChatView_rounded_top_left_user_media_file_preview_message) ?: roundedMediaFilePreviewMessage ?: defaultRoundedMediaFilePreview
-    val roundedTopRightUserMediaFilePreviewMessage = attrArr.getDimensionOrNull(R.styleable.ChatView_rounded_top_right_user_media_file_preview_message) ?: roundedMediaFilePreviewMessage ?: defaultRoundedMediaFilePreview
-    val roundedBottomLeftUserMediaFilePreviewMessage = attrArr.getDimensionOrNull(R.styleable.ChatView_rounded_bottom_left_user_media_file_preview_message) ?: roundedMediaFilePreviewMessage ?: defaultRoundedMediaFilePreview
-    val roundedBottomRightUserMediaFilePreviewMessage = attrArr.getDimensionOrNull(R.styleable.ChatView_rounded_bottom_right_user_media_file_preview_message) ?: roundedMediaFilePreviewMessage ?: 0f
-    val roundedTopLeftUserGifFilePreviewMessage = attrArr.getDimensionOrNull(R.styleable.ChatView_rounded_top_left_user_gif_file_preview_message) ?: roundedGifFilePreviewMessage ?: defaultRoundedGifFilePreview
-    val roundedTopRightUserGifFilePreviewMessage = attrArr.getDimensionOrNull(R.styleable.ChatView_rounded_top_right_user_gif_file_preview_message) ?: roundedGifFilePreviewMessage ?: defaultRoundedGifFilePreview
-    val roundedBottomLeftUserGifFilePreviewMessage = attrArr.getDimensionOrNull(R.styleable.ChatView_rounded_bottom_left_user_gif_file_preview_message) ?: roundedGifFilePreviewMessage ?: defaultRoundedGifFilePreview
-    val roundedBottomRightUserGifFilePreviewMessage = attrArr.getDimensionOrNull(R.styleable.ChatView_rounded_bottom_right_user_gif_file_preview_message) ?: roundedGifFilePreviewMessage ?: 0f
-    val roundedTopLeftOperatorMediaFilePreviewMessage = attrArr.getDimensionOrNull(R.styleable.ChatView_rounded_top_left_operator_media_file_preview_message) ?: roundedMediaFilePreviewMessage ?: defaultRoundedMediaFilePreview
-    val roundedTopRightOperatorMediaFilePreviewMessage = attrArr.getDimensionOrNull(R.styleable.ChatView_rounded_top_right_operator_media_file_preview_message) ?: roundedMediaFilePreviewMessage ?: defaultRoundedMediaFilePreview
-    val roundedBottomLeftOperatorMediaFilePreviewMessage = attrArr.getDimensionOrNull(R.styleable.ChatView_rounded_bottom_left_operator_media_file_preview_message) ?: roundedMediaFilePreviewMessage ?: 0f
-    val roundedBottomRightOperatorMediaFilePreviewMessage = attrArr.getDimensionOrNull(R.styleable.ChatView_rounded_bottom_right_operator_media_file_preview_message) ?: roundedMediaFilePreviewMessage ?: defaultRoundedMediaFilePreview
-    val roundedTopLeftOperatorGifFilePreviewMessage = attrArr.getDimensionOrNull(R.styleable.ChatView_rounded_top_left_operator_gif_file_preview_message) ?: roundedGifFilePreviewMessage ?: defaultRoundedGifFilePreview
-    val roundedTopRightOperatorGifFilePreviewMessage = attrArr.getDimensionOrNull(R.styleable.ChatView_rounded_top_right_operator_gif_file_preview_message) ?: roundedGifFilePreviewMessage ?: defaultRoundedGifFilePreview
-    val roundedBottomLeftOperatorGifFilePreviewMessage = attrArr.getDimensionOrNull(R.styleable.ChatView_rounded_bottom_left_operator_gif_file_preview_message) ?: roundedGifFilePreviewMessage ?: 0f
-    val roundedBottomRightOperatorGifFilePreviewMessage = attrArr.getDimensionOrNull(R.styleable.ChatView_rounded_bottom_right_operator_gif_file_preview_message) ?: roundedGifFilePreviewMessage ?: defaultRoundedGifFilePreview
-
-    private val resFontFamilyAllText = attrArr.getResourceIdOrNull(R.styleable.ChatView_resource_font_family_all_text)
-    val resFontFamilyUserMessage = resFontFamilyAllText ?: attrArr.getResourceIdOrNull(R.styleable.ChatView_resource_font_family_user_message)
-    val resFontFamilyOperatorMessage = resFontFamilyAllText ?: attrArr.getResourceIdOrNull(R.styleable.ChatView_resource_font_family_operator_message)
-    val resFontFamilyOperatorAction = resFontFamilyAllText ?: attrArr.getResourceIdOrNull(R.styleable.ChatView_resource_font_family_operator_action)
-    val resFontFamilyOperatorButton = resFontFamilyAllText ?: attrArr.getResourceIdOrNull(R.styleable.ChatView_resource_font_family_operator_button)
-    val resFontFamilyFileInfo = resFontFamilyAllText ?: attrArr.getResourceIdOrNull(R.styleable.ChatView_resource_font_family_file_info)
-    val resFontFamilyMessageAuthor = resFontFamilyAllText ?: attrArr.getResourceIdOrNull(R.styleable.ChatView_resource_font_family_message_author)
-    val resFontFamilyMessageTime = resFontFamilyAllText ?: attrArr.getResourceIdOrNull(R.styleable.ChatView_resource_font_family_message_time)
-    val resFontFamilyMessageDate = resFontFamilyAllText ?: attrArr.getResourceIdOrNull(R.styleable.ChatView_resource_font_family_message_date)
-
-    val marginStartMediaFile = attrArr.getDimension(R.styleable.ChatView_margin_start_media_file, context.resources.getDimension(R.dimen.com_crafttalk_chat_default_margin_start_media_file)).toInt()
-    val marginEndMediaFile = attrArr.getDimension(R.styleable.ChatView_margin_end_media_file, context.resources.getDimension(R.dimen.com_crafttalk_chat_default_margin_end_media_file)).toInt()
-    val marginTopMediaFile = attrArr.getDimension(R.styleable.ChatView_margin_top_media_file, context.resources.getDimension(R.dimen.com_crafttalk_chat_default_margin_top_media_file)).toInt()
-    val marginBottomMediaFile = attrArr.getDimension(R.styleable.ChatView_margin_bottom_media_file, context.resources.getDimension(R.dimen.com_crafttalk_chat_default_margin_bottom_media_file)).toInt()
-
-    val companyName = attrArr.getString(R.styleable.ChatView_company_name) ?: context.getString(R.string.com_crafttalk_chat_name_company)
-    val showCompanyName = attrArr.getBoolean(R.styleable.ChatView_show_company_name, false)
-    val showInternetConnectionState = attrArr.getBoolean(R.styleable.ChatView_show_internet_connection_state, true)
-    val showChatState = attrArr.getBoolean(R.styleable.ChatView_show_chat_state, true)
-    val showUpperLimiter = attrArr.getBoolean(R.styleable.ChatView_show_upper_limiter, true)
-    val showStartingProgress = attrArr.getBoolean(R.styleable.ChatView_show_starting_progress, true)
-
-    val showUserMessageAuthor = attrArr.getBoolean(R.styleable.ChatView_show_user_message_author, true)
-    val showUserMessageStatus = attrArr.getBoolean(R.styleable.ChatView_show_user_message_status, true)
-
-    val bgUserMessageResId = attrArr.getResourceId(R.styleable.ChatView_resource_bg_user_message, R.drawable.com_crafttalk_chat_background_item_simple_user_message)
-    val bgOperatorMessageResId = attrArr.getResourceId(R.styleable.ChatView_resource_bg_operator_message, R.drawable.com_crafttalk_chat_background_item_simple_server_message)
-
-    val layoutItemUserTextMessage: Int? = attrArr.getResourceIdOrNull(R.styleable.ChatView_layout_item_user_text_message)
-    val layoutItemUserImageMessage: Int? = attrArr.getResourceIdOrNull(R.styleable.ChatView_layout_item_user_image_message)
-    val layoutItemUserGifMessage: Int? = attrArr.getResourceIdOrNull(R.styleable.ChatView_layout_item_user_gif_message)
-    val layoutItemUserFileMessage: Int? = attrArr.getResourceIdOrNull(R.styleable.ChatView_layout_item_user_file_message)
-    val layoutItemUserUnionMessage: Int? = attrArr.getResourceIdOrNull(R.styleable.ChatView_layout_item_user_union_message)
-    val layoutItemOperatorTextMessage: Int? = attrArr.getResourceIdOrNull(R.styleable.ChatView_layout_item_operator_text_message)
-    val layoutItemOperatorImageMessage: Int? = attrArr.getResourceIdOrNull(R.styleable.ChatView_layout_item_operator_image_message)
-    val layoutItemOperatorGifMessage: Int? = attrArr.getResourceIdOrNull(R.styleable.ChatView_layout_item_operator_gif_message)
-    val layoutItemOperatorFileMessage: Int? = attrArr.getResourceIdOrNull(R.styleable.ChatView_layout_item_operator_file_message)
-    val layoutItemOperatorUnionMessage: Int? = attrArr.getResourceIdOrNull(R.styleable.ChatView_layout_item_operator_union_message)
-    val layoutItemTransferMessage: Int? = attrArr.getResourceIdOrNull(R.styleable.ChatView_layout_item_transfer_message)
-    val layoutItemInfoMessage: Int? = attrArr.getResourceIdOrNull(R.styleable.ChatView_layout_item_info_message)
-    val layoutItemWidgetMessage: Int? = attrArr.getResourceIdOrNull(R.styleable.ChatView_layout_item_widget_message)
-
-    //    download
-    val mediaFileDownloadMode = attrArr.getInt(R.styleable.ChatView_media_file_download_mode, 0).let { MediaFileDownloadMode.values()[it] }
-    val colorUserFileMessageDownload = attrArr.getResourceId(R.styleable.ChatView_color_user_file_message_download, R.color.com_crafttalk_chat_color_download_file)
-    val colorOperatorFileMessageDownload = attrArr.getResourceId(R.styleable.ChatView_color_operator_file_message_download, R.color.com_crafttalk_chat_color_download_file)
-    val sizeUserFileMessageDownload = attrArr.getDimension(R.styleable.ChatView_size_user_file_message_download, context.resources.getDimension(R.dimen.com_crafttalk_chat_default_size_download))
-    val sizeOperatorFileMessageDownload = attrArr.getDimension(R.styleable.ChatView_size_operator_file_message_download, context.resources.getDimension(R.dimen.com_crafttalk_chat_default_size_download))
-    val backgroundUserFileMessageDownload = attrArr.getResourceId(R.styleable.ChatView_background_user_file_message_download, R.drawable.com_crafttalk_chat_background_download_file)
-    val backgroundOperatorFileMessageDownload = attrArr.getResourceId(R.styleable.ChatView_background_operator_file_message_download, R.drawable.com_crafttalk_chat_background_download_file)
-
-//    warnings
-    val titleSuccessDownloadFileWarning = attrArr.getString(R.styleable.ChatView_title_success_download_file_warning) ?: context.getString(R.string.com_crafttalk_chat_download_file_success)
-    val colorSuccessDownloadFileWarning = attrArr.getColor(R.styleable.ChatView_color_success_download_file_warning, ContextCompat.getColor(context, R.color.com_crafttalk_chat_white))
-    val backgroundSuccessDownloadFileWarning = attrArr.getColor(R.styleable.ChatView_background_success_download_file_warning, ContextCompat.getColor(context, R.color.com_crafttalk_chat_success))
-    val titleFailDownloadFileWarning = attrArr.getString(R.styleable.ChatView_title_fail_download_file_warning) ?: context.getString(R.string.com_crafttalk_chat_download_file_fail)
-    val colorFailDownloadFileWarning = attrArr.getColor(R.styleable.ChatView_color_fail_download_file_warning, ContextCompat.getColor(context, R.color.com_crafttalk_chat_white))
-    val backgroundFailDownloadFileWarning = attrArr.getColor(R.styleable.ChatView_background_fail_download_file_warning, ContextCompat.getColor(context, R.color.com_crafttalk_chat_error))
-
-//    feedback
-    val delayFeedbackScreenAppears = attrArr.getInt(R.styleable.ChatView_delay_feedback_screen_appears, 1000).toLong()
-    val colorFeedbackTitle = attrArr.getColor(R.styleable.ChatView_color_feedback_title, ContextCompat.getColor(context, R.color.com_crafttalk_chat_gray_707070))
-    val sizeFeedbackTitle = attrArr.getDimensionPixelSize(R.styleable.ChatView_size_feedback_title, context.resources.getDimensionPixelSize(R.dimen.com_crafttalk_chat_default_size_feedback_title)).toFloat()
-    val colorFeedbackStar = attrArr.getColor(R.styleable.ChatView_color_feedback_star, colorMain)
-
-//    voice input
-    val showVoiceInput = attrArr.getBoolean(R.styleable.ChatView_show_voice_input, false)
-    val delayVoiceInputPostRecording = attrArr.getInt(R.styleable.ChatView_delay_voice_input_post_recording, 1000).toLong()
-    val delayVoiceInputBetweenRecurringWarnings = attrArr.getInt(R.styleable.ChatView_delay_voice_input_between_recurring_warnings, 2000).toLong()
-    val drawableVoiceInputMicOn = attrArr.getDrawable(R.styleable.ChatView_drawable_voice_input_mic_on) ?: ContextCompat.getDrawable(context, R.drawable.com_crafttalk_chat_ic_voice_mic_on)
-    val drawableVoiceInputMicOff = attrArr.getDrawable(R.styleable.ChatView_drawable_voice_input_mic_off) ?: ContextCompat.getDrawable(context, R.drawable.com_crafttalk_chat_ic_voice_mic_off)
-
-//    search
-    val enableSearch = attrArr.getBoolean(R.styleable.ChatView_enable_search, false)
-    val enableAutoSearch = attrArr.getBoolean(R.styleable.ChatView_enable_auto_search, false)
-    val colorSelectSearchText = attrArr.getColor(R.styleable.ChatView_color_select_search_text, ContextCompat.getColor(context, R.color.com_crafttalk_chat_yellow_ffeb3b))
-    val colorCurrentSelectSearchText = attrArr.getColor(R.styleable.ChatView_color_current_select_search_text, ContextCompat.getColor(context, R.color.com_crafttalk_chat_orange_ffb300))
-    val colorTextSearchCoincidence = attrArr.getColor(R.styleable.ChatView_color_search_coincidence_text, colorBlack)
-    val backgroundSearchSwitch = attrArr.getColor(R.styleable.ChatView_background_search_switch, ContextCompat.getColor(context, R.color.com_crafttalk_chat_gray))
-    val colorSearchTop = attrArr.getColor(R.styleable.ChatView_color_search_top, colorBlack)
-    val colorSearchBottom = attrArr.getColor(R.styleable.ChatView_color_search_bottom, colorBlack)
-    val sizeTextSearchCoincidenceText = attrArr.getDimensionPixelSize(R.styleable.ChatView_size_text_search_coincidence, context.resources.getDimensionPixelSize(R.dimen.com_crafttalk_chat_default_size_search_coincidence)).toFloat()
-
-    val drawableBackgroundSignInButton: Drawable = DrawableCompat.wrap(ContextCompat.getDrawable(context, R.drawable.com_crafttalk_chat_background_sign_in_auth_form)!!).apply {
-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
-            DrawableCompat.setTint(this, colorMain)
-        } else {
-            this.mutate().setColorFilter(colorMain, PorterDuff.Mode.SRC_IN)
-        }
-    }
-
-    companion object {
-        private var INSTANCE: ChatAttr? = null
-
-        fun getInstance(attrArr: TypedArray? = null, context: Context? = null): ChatAttr =
-            if (attrArr == null) {
-                INSTANCE!!
-            } else {
-                synchronized(this) {
-                    ChatAttr(attrArr, context!!).also { INSTANCE = it }
-                }
-            }
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_ic_scroll_down.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_ic_scroll_down.xml b/chat/src/main/res/drawable/com_crafttalk_chat_ic_scroll_down.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_ic_scroll_down.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,16 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="44dp"
-    android:height="44dp"
-    android:viewportWidth="44"
-    android:viewportHeight="44">
-    <path
-        android:pathData="M22,0L22,0A22,22 0,0 1,44 22L44,22A22,22 0,0 1,22 44L22,44A22,22 0,0 1,0 22L0,22A22,22 0,0 1,22 0z"
-        android:fillColor="#F3F3F5"/>
-    <path
-        android:pathData="M12,19L22,29L32,19"
-        android:strokeLineJoin="round"
-        android:strokeWidth="2"
-        android:fillColor="#00000000"
-        android:strokeColor="#000000"
-        android:strokeLineCap="round"/>
-</vector>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/entity/file/TypeUpload.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/entity/file/TypeUpload.kt b/chat/src/main/java/com/crafttalk/chat/domain/entity/file/TypeUpload.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/entity/file/TypeUpload.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,6 +0,0 @@
-package com.crafttalk.chat.domain.entity.file
-
-enum class TypeUpload {
-    JSON,
-    MULTIPART
-}
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_ic_circle_warning.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_ic_circle_warning.xml b/chat/src/main/res/drawable/com_crafttalk_chat_ic_circle_warning.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_ic_circle_warning.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,9 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="24dp"
-    android:height="24dp"
-    android:viewportWidth="24"
-    android:viewportHeight="24">
-  <path
-      android:fillColor="#ef5350"
-      android:pathData="M12,2C6.48,2 2,6.48 2,12s4.48,10 10,10 10,-4.48 10,-10S17.52,2 12,2zM13,17h-2v-6h2v6zM13,9h-2L11,7h2v2z"/>
-</vector>
Index: chat/src/main/java/com/crafttalk/chat/domain/interactors/FeedbackInteractor.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/interactors/FeedbackInteractor.kt b/chat/src/main/java/com/crafttalk/chat/domain/interactors/FeedbackInteractor.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/interactors/FeedbackInteractor.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,15 +0,0 @@
-package com.crafttalk.chat.domain.interactors
-
-import com.crafttalk.chat.domain.repository.IFeedbackRepository
-import javax.inject.Inject
-
-class FeedbackInteractor
-@Inject constructor(
-    private val feedbackRepository: IFeedbackRepository
-) {
-
-    fun giveFeedbackOnOperator(countStars: Int) {
-        feedbackRepository.giveFeedbackOnOperator(countStars)
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/entity/auth/Visitor.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/entity/auth/Visitor.kt b/chat/src/main/java/com/crafttalk/chat/domain/entity/auth/Visitor.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/entity/auth/Visitor.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,137 +0,0 @@
-package com.crafttalk.chat.domain.entity.auth
-
-import com.crafttalk.chat.utils.getOrNull
-import com.crafttalk.chat.utils.getStringOrNull
-import com.google.gson.annotations.SerializedName
-import org.json.JSONObject
-import java.io.Serializable
-import java.util.*
-import kotlin.collections.HashMap
-
-class Visitor (
-    val uuid: String,
-    val token: String,
-    @SerializedName(value = "first_name")
-    val firstName: String,
-    @SerializedName(value = "last_name")
-    val lastName: String,
-    val email: String?,
-    val phone: String?,
-    val contract: String?, // номер контракта клиента
-    val birthday: String?, // дата рождения клиента
-    val hash: String? = null
-) : Serializable {
-
-    private val addedFields = HashMap<String, Any>()
-
-    override fun toString(): String {
-        return "${uuid}, ${token}, ${firstName}, ${lastName}, ${email}, ${phone}, ${contract}, ${birthday}"
-    }
-
-    fun addNewField(fieldName: String, fieldValue: Any) {
-        addedFields[fieldName] = fieldValue
-    }
-
-    fun removeAddedField(firstName: String) {
-        addedFields.remove(firstName)
-    }
-
-    fun getJsonObject(): JSONObject {
-        val visitorJson = JSONObject()
-        visitorJson.put("uuid", uuid)
-        visitorJson.put("token", token)
-        visitorJson.put("first_name", firstName)
-        visitorJson.put("last_name", lastName)
-        visitorJson.put("email", email)
-        visitorJson.put("phone", phone)
-        visitorJson.put("contract", contract)
-        visitorJson.put("birthday", birthday)
-        visitorJson.put("hash", hash)
-        if (addedFields != null) {
-            for ((key, value) in addedFields) {
-                visitorJson.put(key, value)
-            }
-        }
-        return visitorJson
-    }
-
-    companion object {
-
-        private const val DEFAULT_FIRST_NAME = "user"
-        private const val DEFAULT_LAST_NAME = "userovich"
-        private const val DEFAULT_PHONE = "0"
-        private const val DEFAULT_MAIL = "test@gmail.com"
-        private const val DEFAULT_CONTRACT = "test_contract"
-        private const val DEFAULT_BIRTHDAY = "28.05.1975"
-
-        fun map(args: Array<out String>, fields: HashMap<String, Any>?): Visitor {
-            var firstName: String
-            var lastName: String
-            var phone: String
-            try {
-                firstName = args[0]
-                lastName = args[1]
-                phone = args[2]
-            } catch (ex: Exception) {
-                firstName = DEFAULT_FIRST_NAME
-                lastName = DEFAULT_LAST_NAME
-                phone = DEFAULT_PHONE
-            }
-
-            val uuid = UUID.randomUUID().toString()
-
-            return Visitor(
-                uuid,
-                "${uuid}default",
-                firstName,
-                lastName,
-                DEFAULT_MAIL,
-                phone,
-                DEFAULT_CONTRACT,
-                DEFAULT_BIRTHDAY
-            ).apply {
-                addedFields.clear()
-                fields?.forEach {
-                    addNewField(it.key, it.value)
-                }
-            }
-        }
-
-        fun getVisitorFromJson(json: String?): Visitor? {
-            json ?: return null
-            val jsonObject = JSONObject(json)
-            val visitor = Visitor(
-                uuid = jsonObject.getStringOrNull("uuid").orEmpty(),
-                token = jsonObject.getStringOrNull("token").orEmpty(),
-                firstName = jsonObject.getStringOrNull("first_name").orEmpty(),
-                lastName = jsonObject.getStringOrNull("last_name").orEmpty(),
-                email = jsonObject.getStringOrNull("email"),
-                phone = jsonObject.getStringOrNull("phone"),
-                contract = jsonObject.getStringOrNull("contract"),
-                birthday = jsonObject.getStringOrNull("birthday"),
-                hash = jsonObject.getStringOrNull("hash")
-            )
-            visitor.addedFields.clear()
-            jsonObject.keys()
-                .asSequence()
-                .filter { it !in listOf(
-                    "uuid",
-                    "token",
-                    "first_name",
-                    "last_name",
-                    "email",
-                    "phone",
-                    "contract",
-                    "birthday",
-                    "hash"
-                ) }
-                .forEach { key ->
-                    jsonObject.getOrNull(key.toString())?.let { value ->
-                        visitor.addNewField(key.toString(), value)
-                    }
-                }
-            return visitor
-        }
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/local/db/migrations/Migration_3_4.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/local/db/migrations/Migration_3_4.kt b/chat/src/main/java/com/crafttalk/chat/data/local/db/migrations/Migration_3_4.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/local/db/migrations/Migration_3_4.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,23 +0,0 @@
-package com.crafttalk.chat.data.local.db.migrations
-
-import androidx.room.migration.Migration
-import androidx.sqlite.db.SupportSQLiteDatabase
-import com.crafttalk.chat.data.local.db.entity.MessageEntity
-
-object Migration_3_4: Migration(3, 4) {
-    override fun migrate(database: SupportSQLiteDatabase) {
-
-        database.execSQL("ALTER TABLE ${MessageEntity.TABLE_NAME} ADD COLUMN dialog_id TEXT DEFAULT NULL")
-        database.execSQL("ALTER TABLE ${MessageEntity.TABLE_NAME} ADD COLUMN replied_message_id TEXT DEFAULT NULL")
-        database.execSQL("ALTER TABLE ${MessageEntity.TABLE_NAME} ADD COLUMN replied_message_text TEXT DEFAULT NULL")
-        database.execSQL("ALTER TABLE ${MessageEntity.TABLE_NAME} ADD COLUMN replied_message_span_structure_list TEXT NOT NULL DEFAULT '[]'")
-        database.execSQL("ALTER TABLE ${MessageEntity.TABLE_NAME} ADD COLUMN replied_message_attachment_url TEXT DEFAULT NULL")
-        database.execSQL("ALTER TABLE ${MessageEntity.TABLE_NAME} ADD COLUMN replied_message_attachment_type TEXT DEFAULT NULL")
-        database.execSQL("ALTER TABLE ${MessageEntity.TABLE_NAME} ADD COLUMN replied_message_attachment_name TEXT DEFAULT NULL")
-        database.execSQL("ALTER TABLE ${MessageEntity.TABLE_NAME} ADD COLUMN replied_message_attachment_size INTEGER DEFAULT NULL")
-        database.execSQL("ALTER TABLE ${MessageEntity.TABLE_NAME} ADD COLUMN replied_message_attachment_download_progress_type TEXT DEFAULT NULL")
-        database.execSQL("ALTER TABLE ${MessageEntity.TABLE_NAME} ADD COLUMN replied_message_attachment_height INTEGER DEFAULT NULL")
-        database.execSQL("ALTER TABLE ${MessageEntity.TABLE_NAME} ADD COLUMN replied_message_attachment_width INTEGER DEFAULT NULL")
-
-    }
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/model/MessageModel.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/model/MessageModel.kt b/chat/src/main/java/com/crafttalk/chat/presentation/model/MessageModel.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/model/MessageModel.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,158 +0,0 @@
-package com.crafttalk.chat.presentation.model
-
-import android.text.SpannableString
-import com.crafttalk.chat.R
-import com.crafttalk.chat.presentation.base.BaseItem
-import com.crafttalk.chat.presentation.model.Role.*
-import com.crafttalk.chat.domain.entity.message.MessageType as StateMessage
-
-sealed class MessageModel(
-    open val id: String,
-    open val role: Role,
-    open val timestamp: Long,
-    open val authorName: String,
-    open val authorPreview: String? = null,
-    open val stateCheck: StateMessage,
-    var isFirstMessageInDay: Boolean = false
-) : BaseItem() {
-    override fun <T : BaseItem> isSame(item: T): Boolean {
-        return item is MessageModel && item.id == id
-    }
-}
-
-data class DefaultMessageItem(
-    override val id: String,
-    override val timestamp: Long
-) : MessageModel(id, NEUTRAL, timestamp, "", null, StateMessage.DEFAULT, false) {
-    override fun getLayout(): Int = R.layout.com_crafttalk_chat_item_default_message
-}
-
-data class TextMessageItem(
-    override val id: String,
-    override val role: Role,
-    val message: SpannableString,
-    val actions: List<ActionItem>?,
-    val hasSelectedAction: Boolean,
-    val buttons: List<ButtonsListItem>?,
-    val hasSelectedButton: Boolean,
-    val repliedMessage: RepliedMessageModel?,
-    override val timestamp: Long,
-    override val authorName: String,
-    override val authorPreview: String?,
-    override val stateCheck: StateMessage
-) : MessageModel(id, role, timestamp, authorName, authorPreview, stateCheck) {
-    override fun getLayout(): Int {
-        return when(role) {
-            USER -> R.layout.com_crafttalk_chat_item_user_text_message
-            OPERATOR -> R.layout.com_crafttalk_chat_item_server_text_message
-            NEUTRAL -> R.layout.com_crafttalk_chat_item_default_message
-        }
-    }
-}
-
-data class ImageMessageItem(
-    override val id: String,
-    override val role: Role,
-    val image: FileModel,
-    override val timestamp: Long,
-    override val authorName: String,
-    override val authorPreview: String?,
-    override val stateCheck: StateMessage
-) : MessageModel(id, role, timestamp, authorName, authorPreview, stateCheck) {
-    override fun getLayout(): Int {
-        return when(role) {
-            USER -> R.layout.com_crafttalk_chat_item_user_image_message
-            OPERATOR -> R.layout.com_crafttalk_chat_item_server_image_message
-            NEUTRAL -> R.layout.com_crafttalk_chat_item_default_message
-        }
-    }
-}
-
-data class GifMessageItem(
-    override val id: String,
-    override val role: Role,
-    val gif: FileModel,
-    override val timestamp: Long,
-    override val authorName: String,
-    override val authorPreview: String?,
-    override val stateCheck: StateMessage
-) : MessageModel(id, role, timestamp, authorName, authorPreview, stateCheck) {
-    override fun getLayout(): Int {
-        return when(role) {
-            USER -> R.layout.com_crafttalk_chat_item_user_gif_message
-            OPERATOR -> R.layout.com_crafttalk_chat_item_server_gif_message
-            NEUTRAL -> R.layout.com_crafttalk_chat_item_default_message
-        }
-    }
-}
-
-data class FileMessageItem(
-    override val id: String,
-    override val role: Role,
-    val document: FileModel,
-    override val timestamp: Long,
-    override val authorName: String,
-    override val authorPreview: String?,
-    override val stateCheck: StateMessage
-) : MessageModel(id, role, timestamp, authorName, authorPreview, stateCheck) {
-    override fun getLayout() : Int {
-        return when(role) {
-            USER -> R.layout.com_crafttalk_chat_item_user_file_message
-            OPERATOR -> R.layout.com_crafttalk_chat_item_server_file_message
-            NEUTRAL -> R.layout.com_crafttalk_chat_item_default_message
-        }
-    }
-}
-
-data class UnionMessageItem(
-    override val id: String,
-    override val role: Role,
-    val message: SpannableString,
-    val actions: List<ActionItem>?,
-    val hasSelectedAction: Boolean,
-    val buttons: List<ButtonsListItem>?,
-    val hasSelectedButton: Boolean,
-    val file: FileModel,
-    override val timestamp: Long,
-    override val authorName: String,
-    override val authorPreview: String?,
-    override val stateCheck: StateMessage
-) : MessageModel(id, role, timestamp, authorName, authorPreview, stateCheck) {
-    override fun getLayout() : Int {
-        return when(role) {
-            USER -> R.layout.com_crafttalk_chat_item_user_union_message
-            OPERATOR -> R.layout.com_crafttalk_chat_item_server_union_message
-            NEUTRAL -> R.layout.com_crafttalk_chat_item_default_message
-        }
-    }
-}
-
-data class TransferMessageItem(
-    override val id: String,
-    override val timestamp: Long,
-    override val authorName: String,
-    override val authorPreview: String?
-) : MessageModel(id, NEUTRAL, timestamp, authorName, authorPreview, StateMessage.TRANSFER_TO_OPERATOR) {
-    override fun getLayout(): Int = R.layout.com_crafttalk_chat_item_transfer_message
-}
-
-data class InfoMessageItem(
-    override val id: String,
-    val message: SpannableString,
-    override val timestamp: Long
-) : MessageModel(id, NEUTRAL, timestamp, "", null, StateMessage.INFO_MESSAGE) {
-    override fun getLayout(): Int = R.layout.com_crafttalk_chat_item_info_message
-}
-
-data class WidgetMessageItem(
-    override val id: String,
-    val message: SpannableString?,
-    val widgetId: String,
-    val payload: Any,
-    override val timestamp: Long,
-    override val authorName: String,
-    override val authorPreview: String?,
-    override val stateCheck: StateMessage
-) : MessageModel(id, OPERATOR, timestamp, authorName, authorPreview, stateCheck) {
-    override fun getLayout(): Int = R.layout.com_crafttalk_chat_item_server_widget_message
-}
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_background_item_simple_server_message.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_background_item_simple_server_message.xml b/chat/src/main/res/drawable/com_crafttalk_chat_background_item_simple_server_message.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_background_item_simple_server_message.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<shape
-    android:shape="rectangle"
-    xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <solid android:color="@color/com_crafttalk_chat_default_color_bg_server_message"/>
-    <corners android:topLeftRadius="5dp" android:topRightRadius="5dp" android:bottomRightRadius="5dp"/>
-</shape>
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_ic_file_downloaded.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_ic_file_downloaded.xml b/chat/src/main/res/drawable/com_crafttalk_chat_ic_file_downloaded.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_ic_file_downloaded.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,10 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="24dp"
-    android:height="24dp"
-    android:viewportWidth="24"
-    android:viewportHeight="24"
-    android:tint="#FFFFFF">
-    <path
-        android:fillColor="@android:color/white"
-        android:pathData="M6,2c-1.1,0 -1.99,0.9 -1.99,2L4,20c0,1.1 0.89,2 1.99,2L18,22c1.1,0 2,-0.9 2,-2L20,8l-6,-6L6,2zM13,9L13,3.5L18.5,9L13,9z"/>
-</vector>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkBodySearch.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkBodySearch.kt b/chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkBodySearch.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkBodySearch.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,11 +0,0 @@
-package com.crafttalk.chat.domain.entity.message
-
-import com.crafttalk.chat.utils.ChatParams
-
-data class NetworkBodySearch(
-    val visitorUuid: String,
-    val searchText: String,
-    val clientId: String = ChatParams.urlChatNameSpace!!,
-    val searchFields: String = "All",
-    val lastMessageTimestamp: Long = 1660662206650
-)
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/adapters/AdapterButton.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/adapters/AdapterButton.kt b/chat/src/main/java/com/crafttalk/chat/presentation/adapters/AdapterButton.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/adapters/AdapterButton.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,22 +0,0 @@
-package com.crafttalk.chat.presentation.adapters
-
-import android.view.ViewGroup
-import com.crafttalk.chat.presentation.base.BaseAdapter
-import com.crafttalk.chat.presentation.base.BaseViewHolder
-import com.crafttalk.chat.presentation.helper.extensions.inflate
-import com.crafttalk.chat.presentation.holders.HolderButtons
-import com.crafttalk.chat.presentation.model.ButtonsListItem
-
-class AdapterButton(
-    private val messageId: String,
-    private val hasSelectedButton: Boolean,
-    private val selectButton: (messageId: String, actionId: String, buttonId: String) -> Unit
-) : BaseAdapter<ButtonsListItem>() {
-
-    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): BaseViewHolder<ButtonsListItem> {
-        return HolderButtons(parent.inflate(viewType), hasSelectedButton) { actionId, buttonId ->
-            selectButton(messageId, actionId, buttonId)
-        }
-    }
-
-}
Index: chat/src/main/java/com/crafttalk/chat/utils/ClickableLinkMode.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/utils/ClickableLinkMode.kt b/chat/src/main/java/com/crafttalk/chat/utils/ClickableLinkMode.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/utils/ClickableLinkMode.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,6 +0,0 @@
-package com.crafttalk.chat.utils
-
-enum class ClickableLinkMode {
-    ALL,
-    SECURE
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/local/db/entity/converters/TypeDownloadProgressConverter.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/converters/TypeDownloadProgressConverter.kt b/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/converters/TypeDownloadProgressConverter.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/converters/TypeDownloadProgressConverter.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,27 +0,0 @@
-package com.crafttalk.chat.data.local.db.entity.converters
-
-import androidx.room.TypeConverter
-import com.crafttalk.chat.domain.entity.file.TypeDownloadProgress
-import com.google.gson.Gson
-import com.google.gson.reflect.TypeToken
-import java.lang.reflect.Type
-
-class TypeDownloadProgressConverter {
-
-    @TypeConverter
-    fun fromTypeFile(typeDownloadProgress: TypeDownloadProgress?): String? {
-        typeDownloadProgress ?: return null
-        val type: Type = object : TypeToken<TypeDownloadProgress>() {}.type
-        val gson = Gson()
-        return gson.toJson(typeDownloadProgress, type)
-    }
-
-    @TypeConverter
-    fun toTypeFile(typeDownloadProgress: String?): TypeDownloadProgress? {
-        typeDownloadProgress ?: return null
-        val type: Type = object : TypeToken<TypeDownloadProgress>() {}.type
-        val gson = Gson()
-        return gson.fromJson(typeDownloadProgress, type)
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/helper/groupers/modelGrouper.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/helper/groupers/modelGrouper.kt b/chat/src/main/java/com/crafttalk/chat/presentation/helper/groupers/modelGrouper.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/helper/groupers/modelGrouper.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,24 +0,0 @@
-package com.crafttalk.chat.presentation.helper.groupers
-
-import android.annotation.SuppressLint
-import com.crafttalk.chat.presentation.model.MessageModel
-import java.text.SimpleDateFormat
-
-@SuppressLint("SimpleDateFormat")
-fun groupPageByDate(messages: List<MessageModel>): List<MessageModel> {
-    messages.forEach {
-        it.isFirstMessageInDay = false
-    }
-
-    val formatTime = SimpleDateFormat("dd.MM.yyyy")
-    val listWithDate = messages.map { formatTime.format(it.timestamp) }
-
-    listWithDate.toSet().forEach { date ->
-        val index = listWithDate.indexOfLast { it == date }
-        if (index != -1) {
-            messages[index].isFirstMessageInDay = true
-        }
-    }
-
-    return messages
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/local/db/entity/KeyboardEntity.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/KeyboardEntity.kt b/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/KeyboardEntity.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/KeyboardEntity.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,23 +0,0 @@
-package com.crafttalk.chat.data.local.db.entity
-
-import androidx.room.ColumnInfo
-import com.crafttalk.chat.domain.entity.message.NetworkKeyboard
-
-data class KeyboardEntity(
-    @ColumnInfo(name = "buttons")
-    val buttons: List<List<ButtonEntity>>
-) {
-
-    companion object {
-
-        fun map(keyboard: NetworkKeyboard, buttonsSelected: List<String>): KeyboardEntity {
-            val buttons: MutableList<List<ButtonEntity>> = mutableListOf()
-            keyboard.buttons.forEach { horizontalButtons ->
-                buttons.add(ButtonEntity.map(horizontalButtons, buttonsSelected))
-            }
-            return KeyboardEntity(
-                buttons = buttons
-            )
-        }
-    }
-}
\ No newline at end of file
Index: chat/src/main/res/layout/com_crafttalk_chat_item_user_union_message.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_item_user_union_message.xml b/chat/src/main/res/layout/com_crafttalk_chat_item_user_union_message.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_item_user_union_message.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,161 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:layout_marginStart="@dimen/com_crafttalk_chat_message_margin_start"
-    android:layout_marginTop="@dimen/com_crafttalk_chat_message_margin_top"
-    android:layout_marginEnd="@dimen/com_crafttalk_chat_message_margin_end"
-    android:layout_marginBottom="@dimen/com_crafttalk_chat_message_margin_bottom">
-
-    <include
-        android:id="@+id/include_date"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        layout="@layout/com_crafttalk_chat_include_date_message" />
-
-    <View
-        android:id="@+id/content_container"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        app:layout_constraintStart_toStartOf="@id/border_content_start"
-        app:layout_constraintTop_toTopOf="@id/user_message"
-        app:layout_constraintEnd_toEndOf="@id/user_message"
-        app:layout_constraintBottom_toBottomOf="@id/border_content_bottom"
-        tools:background="@drawable/com_crafttalk_chat_background_item_simple_user_message" />
-
-    <TextView
-        android:id="@+id/user_message"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:gravity="end"
-        android:autoLink="email|web"
-        android:fontFamily="@font/com_crafttalk_chat_ubuntu_light"
-        android:textFontWeight="300"
-        android:paddingEnd="@dimen/com_crafttalk_chat_message_content_padding_end"
-        android:paddingTop="@dimen/com_crafttalk_chat_message_content_padding_top"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/include_date"
-        tools:text="Привет, мое имя Тест"
-        tools:textColor="@color/com_crafttalk_chat_white" />
-
-    <View
-        android:id="@+id/border"
-        android:layout_width="0dp"
-        android:layout_height="1dp"
-        android:background="@color/com_crafttalk_chat_gray"
-        android:layout_marginEnd="@dimen/com_crafttalk_chat_message_content_padding_end"
-        app:layout_constraintStart_toStartOf="@id/barrier_content_start"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/user_message"
-        app:layout_constraintBottom_toTopOf="@id/barrier_attach_top" />
-
-    <ImageView
-        android:id="@+id/user_media"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        android:scaleType="fitXY"
-        android:visibility="gone"
-        android:layout_marginTop="16dp"
-        android:layout_marginEnd="@dimen/com_crafttalk_chat_message_content_padding_end"
-        app:layout_constraintHorizontal_bias="1"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/user_message"
-        tools:layout_width="200dp"
-        tools:layout_height="200dp"
-        tools:src="@tools:sample/avatars"
-        tools:visibility="gone" />
-
-    <TextView
-        android:id="@+id/download_file"
-        android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        android:text="@string/com_crafttalk_chat_download"
-        android:gravity="center"
-        android:padding="8dp"
-        android:layout_marginTop="@dimen/com_crafttalk_chat_download_btn_margin_top"
-        android:visibility="gone"
-        app:layout_constraintStart_toStartOf="@id/user_media"
-        app:layout_constraintEnd_toEndOf="@id/user_media"
-        app:layout_constraintTop_toBottomOf="@id/user_media"
-        tools:visibility="gone" />
-
-    <include
-        android:id="@+id/user_media_warning"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        layout="@layout/com_crafttalk_chat_include_media_warning"
-        android:visibility="gone"
-        android:layout_marginTop="16dp"
-        android:layout_marginEnd="@dimen/com_crafttalk_chat_message_content_padding_end"
-        app:layout_constraintHorizontal_bias="1"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/user_message"
-        tools:layout_width="200dp"
-        tools:layout_height="200dp"
-        tools:visibility="gone" />
-
-    <include
-        android:id="@+id/file_info"
-        android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        layout="@layout/com_crafttalk_chat_include_file_info"
-        android:visibility="gone"
-        android:layout_marginTop="16dp"
-        android:layout_marginEnd="@dimen/com_crafttalk_chat_message_content_padding_end"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/user_message"
-        tools:visibility="visible" />
-
-    <androidx.constraintlayout.widget.Barrier
-        android:id="@+id/barrier_content_start"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        app:barrierDirection="start"
-        app:barrierAllowsGoneWidgets="false"
-        app:constraint_referenced_ids="file_info,user_message,user_media,download_file,user_media_warning" />
-
-    <androidx.constraintlayout.widget.Barrier
-        android:id="@+id/barrier_attach_top"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        app:barrierDirection="top"
-        app:barrierAllowsGoneWidgets="false"
-        app:constraint_referenced_ids="user_media,download_file,user_media_warning,file_info" />
-
-    <androidx.constraintlayout.widget.Barrier
-        android:id="@+id/barrier_attach_bottom"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        app:barrierDirection="bottom"
-        app:barrierAllowsGoneWidgets="false"
-        app:constraint_referenced_ids="user_media,download_file,user_media_warning,file_info" />
-
-    <View
-        android:id="@+id/border_content_bottom"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        android:layout_marginTop="@dimen/com_crafttalk_chat_message_content_padding_bottom"
-        app:layout_constraintTop_toBottomOf="@id/barrier_attach_bottom" />
-
-    <View
-        android:id="@+id/border_content_start"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        android:layout_marginEnd="@dimen/com_crafttalk_chat_message_content_padding_start"
-        app:layout_constraintEnd_toStartOf="@id/barrier_content_start" />
-
-    <include
-        android:id="@+id/include_message_info"
-        android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        layout="@layout/com_crafttalk_chat_include_user_message_info"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/content_container" />
-
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: chat/src/main/res/layout/com_crafttalk_chat_item_default_message.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_item_default_message.xml b/chat/src/main/res/layout/com_crafttalk_chat_item_default_message.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_item_default_message.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:orientation="vertical"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"/>
\ No newline at end of file
Index: chat/src/main/res/layout/com_crafttalk_chat_layout_warning_snackbar.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_layout_warning_snackbar.xml b/chat/src/main/res/layout/com_crafttalk_chat_layout_warning_snackbar.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_layout_warning_snackbar.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,5 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<com.crafttalk.chat.presentation.custom_views.custom_snackbar.WarningSnackbarView
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"/>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/local/db/entity/FileEntity.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/FileEntity.kt b/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/FileEntity.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/FileEntity.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,15 +0,0 @@
-package com.crafttalk.chat.data.local.db.entity
-
-import androidx.room.ColumnInfo
-import androidx.room.Entity
-import androidx.room.PrimaryKey
-
-@Entity(tableName = "files")
-data class FileEntity(
-    val uuid: String,
-    @ColumnInfo(name = "file_name")
-    val fileName: String
-) {
-    @PrimaryKey(autoGenerate = true)
-    var idKey: Long = 0
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/helper/extensions/ImageView.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/helper/extensions/ImageView.kt b/chat/src/main/java/com/crafttalk/chat/presentation/helper/extensions/ImageView.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/helper/extensions/ImageView.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,263 +0,0 @@
-package com.crafttalk.chat.presentation.helper.extensions
-
-import android.annotation.SuppressLint
-import android.graphics.drawable.Drawable
-import android.view.View
-import android.view.ViewGroup
-import android.widget.ImageView
-import com.bumptech.glide.Glide
-import com.bumptech.glide.load.DataSource
-import com.bumptech.glide.load.engine.GlideException
-import com.bumptech.glide.load.resource.bitmap.GranularRoundedCorners
-import com.bumptech.glide.request.RequestListener
-import com.bumptech.glide.request.RequestOptions
-import com.bumptech.glide.request.target.Target
-import com.crafttalk.chat.R
-import com.crafttalk.chat.domain.entity.file.TypeDownloadProgress
-import com.crafttalk.chat.domain.entity.message.MessageType
-import com.crafttalk.chat.presentation.model.*
-import com.crafttalk.chat.utils.ChatAttr
-import com.bumptech.glide.load.model.LazyHeaders
-import com.bumptech.glide.load.model.GlideUrl
-import com.crafttalk.chat.utils.ChatParams
-
-fun ImageView.setStatusMessage(message: MessageModel) {
-    if (message.role == Role.USER && ChatAttr.getInstance().showUserMessageStatus) {
-        visibility = when (message.stateCheck) {
-            MessageType.RECEIVED_BY_MEDIATO -> {
-                Glide.with(context)
-                    .load(R.drawable.com_crafttalk_chat_ic_check)
-                    .into(this)
-                View.VISIBLE
-            }
-            MessageType.RECEIVED_BY_OPERATOR -> {
-                Glide.with(context)
-                    .load(R.drawable.com_crafttalk_chat_ic_db_check)
-                    .into(this)
-                View.VISIBLE
-            }
-            else -> View.GONE
-        }
-        when (message) {
-            is TextMessageItem -> setColorFilter(ChatAttr.getInstance().colorUserTextMessageStatus)
-            is ImageMessageItem -> setColorFilter(ChatAttr.getInstance().colorUserImageMessageStatus)
-            is GifMessageItem -> setColorFilter(ChatAttr.getInstance().colorUserGifMessageStatus)
-            is FileMessageItem -> setColorFilter(ChatAttr.getInstance().colorUserFileMessageStatus)
-            is UnionMessageItem -> setColorFilter(ChatAttr.getInstance().colorUserTextMessageStatus)
-        }
-    } else {
-        visibility = View.GONE
-    }
-}
-
-fun ImageView.setAuthorIcon(authorPreview: String? = null, showAuthorIcon: Boolean = true) {
-    if (showAuthorIcon) {
-        Glide.with(context)
-            .load(createCorrectGlideUrl(authorPreview) ?: R.drawable.com_crafttalk_chat_ic_operator)
-            .circleCrop()
-            .apply(
-                RequestOptions().override(
-                    ChatAttr.getInstance().sizeOperatorMessageAuthorPreview,
-                    ChatAttr.getInstance().sizeOperatorMessageAuthorPreview
-                )
-            )
-            .error(R.drawable.com_crafttalk_chat_ic_operator)
-            .listener(
-                object : RequestListener<Drawable> {
-                    override fun onLoadFailed(e: GlideException?, model: Any?, target: Target<Drawable>?, isFirstResource: Boolean): Boolean {
-                        setColorFilter(ChatAttr.getInstance().colorMain)
-                        return false
-                    }
-                    override fun onResourceReady(resource: Drawable?, model: Any?, target: Target<Drawable>?, dataSource: DataSource?, isFirstResource: Boolean): Boolean {
-                        if (authorPreview == null) {
-                            setColorFilter(ChatAttr.getInstance().colorMain)
-                        } else {
-                            colorFilter = null
-                        }
-                        return false
-                    }
-                }
-            )
-            .into(this)
-        visibility = View.VISIBLE
-    } else {
-        visibility = View.GONE
-    }
-}
-
-fun ImageView.settingMediaFile(isUnionMessageItem: Boolean = false) {
-    if (!isUnionMessageItem) {
-        setPadding(
-            ChatAttr.getInstance().marginStartMediaFile,
-            ChatAttr.getInstance().marginTopMediaFile,
-            ChatAttr.getInstance().marginEndMediaFile,
-            ChatAttr.getInstance().marginBottomMediaFile
-        )
-    }
-}
-
-@SuppressLint("ResourceAsColor")
-fun ImageView.loadMediaFile(
-    id: String,
-    mediaFile: FileModel?,
-    updateData: (id: String, height: Int, width: Int) -> Unit,
-    isUserMessage: Boolean,
-    isUnionMessage: Boolean,
-    warningContainer: ViewGroup? = null,
-    isGif: Boolean = false,
-    maxHeight: Int? = null,
-    maxWidth: Int? = null
-) {
-    if (mediaFile == null) {
-        visibility = View.GONE
-        return
-    }
-
-    warningContainer?.visibility = View.GONE
-
-    val mediaFileHeight = mediaFile.height ?: 0
-    val mediaFileWidth = mediaFile.width ?: 0
-
-    when {
-        !mediaFile.failLoading && mediaFileHeight > mediaFileWidth && isUserMessage -> {
-            layoutParams.width =
-                if (maxHeight != null) maxHeight * mediaFileWidth / mediaFileHeight
-                else ChatAttr.getInstance().heightElongatedItemUserFilePreviewMessage * mediaFileWidth / mediaFileHeight
-            layoutParams.height = maxHeight ?: ChatAttr.getInstance().heightElongatedItemUserFilePreviewMessage
-        }
-        !mediaFile.failLoading && mediaFileHeight <= mediaFileWidth && isUserMessage -> {
-            layoutParams.width = maxWidth ?: ChatAttr.getInstance().widthElongatedItemUserFilePreviewMessage
-            layoutParams.height =
-                if (maxWidth != null) maxWidth * mediaFileHeight / mediaFileWidth
-                else ChatAttr.getInstance().widthElongatedItemUserFilePreviewMessage * mediaFileHeight / mediaFileWidth
-        }
-        !mediaFile.failLoading && mediaFileHeight > mediaFileWidth && !isUserMessage -> {
-            layoutParams.width =
-                if (maxHeight != null) maxHeight * mediaFileWidth / mediaFileHeight
-                else ChatAttr.getInstance().heightElongatedItemOperatorFilePreviewMessage * mediaFileWidth / mediaFileHeight
-            layoutParams.height = maxHeight ?: ChatAttr.getInstance().heightElongatedItemOperatorFilePreviewMessage
-        }
-        !mediaFile.failLoading && mediaFileHeight <= mediaFileWidth && !isUserMessage -> {
-            layoutParams.width = maxWidth ?: ChatAttr.getInstance().widthElongatedItemOperatorFilePreviewMessage
-            layoutParams.height =
-                if (maxWidth != null) maxWidth * mediaFileHeight / mediaFileWidth
-                else ChatAttr.getInstance().widthElongatedItemOperatorFilePreviewMessage * mediaFileHeight / mediaFileWidth
-        }
-        mediaFile.failLoading && isUserMessage -> {
-            layoutParams.width = maxWidth ?: ChatAttr.getInstance().widthItemUserFilePreviewWarningMessage
-            layoutParams.height = maxHeight ?: ChatAttr.getInstance().widthItemUserFilePreviewWarningMessage
-        }
-        mediaFile.failLoading && !isUserMessage -> {
-            layoutParams.width = maxWidth ?: ChatAttr.getInstance().widthItemOperatorFilePreviewWarningMessage
-            layoutParams.height = maxHeight ?: ChatAttr.getInstance().widthItemOperatorFilePreviewWarningMessage
-        }
-    }
-
-    var roundedTopLeft = 0f
-    var roundedTopRight = 0f
-    var roundedBottomRight = 0f
-    var roundedBottomLeft = 0f
-
-    when {
-        isUserMessage && isGif -> {
-            roundedTopLeft = ChatAttr.getInstance().roundedTopLeftUserGifFilePreviewMessage
-            roundedTopRight = ChatAttr.getInstance().roundedTopRightUserGifFilePreviewMessage
-            roundedBottomRight = ChatAttr.getInstance().roundedBottomRightUserGifFilePreviewMessage
-            roundedBottomLeft = ChatAttr.getInstance().roundedBottomLeftUserGifFilePreviewMessage
-        }
-        isUserMessage && !isGif -> {
-            roundedTopLeft = ChatAttr.getInstance().roundedTopLeftUserMediaFilePreviewMessage
-            roundedTopRight = ChatAttr.getInstance().roundedTopRightUserMediaFilePreviewMessage
-            roundedBottomRight = ChatAttr.getInstance().roundedBottomRightUserMediaFilePreviewMessage
-            roundedBottomLeft = ChatAttr.getInstance().roundedBottomLeftUserMediaFilePreviewMessage
-        }
-        !isUserMessage && isGif -> {
-            roundedTopLeft = ChatAttr.getInstance().roundedTopLeftOperatorGifFilePreviewMessage
-            roundedTopRight = ChatAttr.getInstance().roundedTopRightOperatorGifFilePreviewMessage
-            roundedBottomRight = ChatAttr.getInstance().roundedBottomRightOperatorGifFilePreviewMessage
-            roundedBottomLeft = ChatAttr.getInstance().roundedBottomLeftOperatorGifFilePreviewMessage
-        }
-        !isUserMessage && !isGif -> {
-            roundedTopLeft = ChatAttr.getInstance().roundedTopLeftOperatorMediaFilePreviewMessage
-            roundedTopRight = ChatAttr.getInstance().roundedTopRightOperatorMediaFilePreviewMessage
-            roundedBottomRight = ChatAttr.getInstance().roundedBottomRightOperatorMediaFilePreviewMessage
-            roundedBottomLeft = ChatAttr.getInstance().roundedBottomLeftOperatorMediaFilePreviewMessage
-        }
-    }
-
-    Glide.with(context)
-        .apply { if (isGif) asGif() }
-        .load(createCorrectGlideUrl(mediaFile.url))
-        .apply(RequestOptions().override(layoutParams.width, layoutParams.height))
-        .apply(RequestOptions.bitmapTransform(GranularRoundedCorners(
-            roundedTopLeft,
-            roundedTopRight,
-            roundedBottomRight,
-            roundedBottomLeft
-        )))
-        .placeholder(R.drawable.com_crafttalk_chat_background_item_media_message_placeholder)
-        .error(R.drawable.com_crafttalk_chat_background_item_media_message_placeholder)
-        .listener(
-            object : RequestListener<Drawable> {
-                override fun onLoadFailed(e: GlideException?, model: Any?, target: Target<Drawable>?, isFirstResource: Boolean): Boolean {
-                    warningContainer?.apply {
-                        layoutParams.width = this@loadMediaFile.layoutParams.width
-                        layoutParams.height = this@loadMediaFile.layoutParams.height
-                        setBackgroundResource(R.drawable.com_crafttalk_chat_background_item_media_message_placeholder)
-
-                        if (!isUnionMessage) {
-                            setPadding(
-                                ChatAttr.getInstance().marginStartMediaFile,
-                                ChatAttr.getInstance().marginTopMediaFile,
-                                ChatAttr.getInstance().marginEndMediaFile,
-                                ChatAttr.getInstance().marginBottomMediaFile
-                            )
-                        }
-                        visibility = View.VISIBLE
-                    }
-                    this@loadMediaFile.visibility = View.GONE
-                    return false
-                }
-                override fun onResourceReady(resource: Drawable?, model: Any?, target: Target<Drawable>?, dataSource: DataSource?, isFirstResource: Boolean): Boolean {
-                    this@loadMediaFile.visibility = View.VISIBLE
-                    if (mediaFile.failLoading) {
-                        resource ?: return false
-                        updateData(id, resource.intrinsicHeight, resource.intrinsicWidth)
-                    }
-                    return false
-                }
-            }
-        )
-        .into(this)
-}
-
-fun ImageView.setFileIcon(typeDownloadProgress: TypeDownloadProgress) {
-    Glide.with(context)
-        .load(
-            when (typeDownloadProgress) {
-                TypeDownloadProgress.NOT_DOWNLOADED -> ChatAttr.getInstance().drawableDocumentNotDownloadedIcon ?: R.drawable.com_crafttalk_chat_ic_file_download
-                TypeDownloadProgress.DOWNLOADING -> ChatAttr.getInstance().drawableDocumentDownloadingIcon ?: R.drawable.com_crafttalk_chat_ic_file_downloading
-                TypeDownloadProgress.DOWNLOADED -> ChatAttr.getInstance().drawableDocumentDownloadedIcon ?: R.drawable.com_crafttalk_chat_ic_file_downloaded
-            }
-        )
-        .into(this)
-}
-
-fun createCorrectGlideUrl(url: String?): GlideUrl? {
-    if (url == null) return null
-    val headers = if (ChatParams.visitorUuid.isEmpty()) {
-        LazyHeaders.Builder().build()
-    } else {
-        LazyHeaders.Builder()
-            .addHeader(
-                "Cookie",
-                "webchat-${ChatParams.urlChatNameSpace}-uuid=${ChatParams.visitorUuid}"
-            )
-            .addHeader(
-                "ct-webchat-client-id",
-                ChatParams.visitorUuid
-            )
-            .build()
-    }
-    return GlideUrl(url, headers)
-}
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_background_sign_in_auth_form.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_background_sign_in_auth_form.xml b/chat/src/main/res/drawable/com_crafttalk_chat_background_sign_in_auth_form.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_background_sign_in_auth_form.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,9 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<shape
-    android:shape="rectangle"
-    xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <solid android:color="@color/com_crafttalk_chat_default_color_main"/>
-    <corners android:radius="5dp"/>
-
-</shape>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/interactors/NotificationInteractor.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/interactors/NotificationInteractor.kt b/chat/src/main/java/com/crafttalk/chat/domain/interactors/NotificationInteractor.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/interactors/NotificationInteractor.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,24 +0,0 @@
-package com.crafttalk.chat.domain.interactors
-
-import com.crafttalk.chat.domain.repository.INotificationRepository
-import javax.inject.Inject
-
-class NotificationInteractor
-@Inject constructor(
-    private val notificationRepository: INotificationRepository,
-    private val visitorInteractor: VisitorInteractor
-) {
-
-    fun subscribeNotification() {
-        visitorInteractor.getVisitor()?.let {
-            notificationRepository.subscribe(it.uuid)
-        }
-    }
-
-    fun unsubscribeNotification() {
-        visitorInteractor.getVisitor()?.let {
-            notificationRepository.unSubscribe(it.uuid)
-        }
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/ChatViewModelFactory.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/ChatViewModelFactory.kt b/chat/src/main/java/com/crafttalk/chat/presentation/ChatViewModelFactory.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/ChatViewModelFactory.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,32 +0,0 @@
-package com.crafttalk.chat.presentation
-
-import android.content.Context
-import androidx.lifecycle.ViewModel
-import androidx.lifecycle.ViewModelProvider
-import com.crafttalk.chat.domain.interactors.*
-
-@Suppress("UNCHECKED_CAST")
-class ChatViewModelFactory constructor(
-    private val authChatInteractor: AuthInteractor,
-    private val messageInteractor: MessageInteractor,
-    private val searchInteractor: SearchInteractor,
-    private val fileInteractor: FileInteractor,
-    private val conditionInteractor: ConditionInteractor,
-    private val feedbackInteractor: FeedbackInteractor,
-    private val configurationInteractor: ConfigurationInteractor,
-    private val context: Context
-): ViewModelProvider.Factory {
-
-    override fun <T : ViewModel?> create(modelClass: Class<T>): T {
-        return ChatViewModel(
-            authChatInteractor,
-            messageInteractor,
-            searchInteractor,
-            fileInteractor,
-            conditionInteractor,
-            feedbackInteractor,
-            configurationInteractor,
-            context
-        ) as T
-    }
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/utils/OperatorPreviewMode.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/utils/OperatorPreviewMode.kt b/chat/src/main/java/com/crafttalk/chat/utils/OperatorPreviewMode.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/utils/OperatorPreviewMode.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,6 +0,0 @@
-package com.crafttalk.chat.utils
-
-enum class OperatorPreviewMode {
-    CACHE,
-    ALWAYS_REQUEST
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/api/rest/MessageApi.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/api/rest/MessageApi.kt b/chat/src/main/java/com/crafttalk/chat/data/api/rest/MessageApi.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/api/rest/MessageApi.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,29 +0,0 @@
-package com.crafttalk.chat.data.api.rest
-
-import com.crafttalk.chat.domain.entity.message.NetworkBodySearch
-import com.crafttalk.chat.domain.entity.message.NetworkMessage
-import com.crafttalk.chat.domain.entity.message.NetworkSearch
-import com.crafttalk.chat.utils.ChatParams
-import retrofit2.Call
-import retrofit2.http.*
-
-interface MessageApi {
-
-    @GET("webhooks/webchat/{namespace}/message_feed")
-    fun uploadMessages(
-        @Header("Cookie") cookie: String = "webchat-${ChatParams.urlChatNameSpace}-uuid=${ChatParams.visitorUuid}",
-        @Header("ct-webchat-client-id") uuidHeader: String = ChatParams.visitorUuid,
-        @Path("namespace") clientId : String = ChatParams.urlChatNameSpace!!,
-        @Query("visitor_uuid") uuid: String,
-        @Query("last_timestamp") timestamp: Long,
-        @Query("message_count") messageCount: Int = ChatParams.countDownloadedMessages,
-        @Query("from_active_dialog") fromActiveDialog: Int = 0
-    ) : Call<List<NetworkMessage>>
-
-    @POST("webchat/search")
-    fun searchMessages(
-        @Header("Cookie") cookie: String = "webchat-${ChatParams.urlChatNameSpace}-uuid=${ChatParams.visitorUuid}",
-        @Header("ct-webchat-client-id") uuid: String = ChatParams.visitorUuid,
-        @Body body: NetworkBodySearch
-    ) : Call<NetworkSearch>
-}
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_background_upload_history.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_background_upload_history.xml b/chat/src/main/res/drawable/com_crafttalk_chat_background_upload_history.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_background_upload_history.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<shape
-    android:shape="rectangle"
-    xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <solid android:color="@color/com_crafttalk_chat_gray_707070"/>
-    <corners android:radius="8dp"/>
-</shape>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/repository/PersonRepository.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/repository/PersonRepository.kt b/chat/src/main/java/com/crafttalk/chat/data/repository/PersonRepository.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/repository/PersonRepository.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,67 +0,0 @@
-package com.crafttalk.chat.data.repository
-
-import android.database.sqlite.SQLiteConstraintException
-import android.util.Log
-import com.crafttalk.chat.data.api.rest.PersonApi
-import com.crafttalk.chat.data.helper.network.toData
-import com.crafttalk.chat.data.local.db.dao.MessagesDao
-import com.crafttalk.chat.data.local.db.dao.PersonDao
-import com.crafttalk.chat.data.local.db.entity.PersonEntity
-import com.crafttalk.chat.domain.repository.IPersonRepository
-import com.crafttalk.chat.utils.ChatParams
-import com.crafttalk.chat.utils.OperatorNameMode
-import com.crafttalk.chat.utils.OperatorPreviewMode
-import java.lang.Exception
-import javax.inject.Inject
-
-class PersonRepository
-@Inject constructor(
-    private val personDao: PersonDao,
-    private val messagesDao: MessagesDao,
-    private val personApi: PersonApi
-) : IPersonRepository {
-
-    override suspend fun updatePersonName(personId: String?, currentPersonName: String?) {
-        personId ?: return
-        currentPersonName ?: return
-        if (personId.isEmpty()) return
-        when (ChatParams.operatorNameMode) {
-            OperatorNameMode.ACTUAL -> {
-                messagesDao.updatePersonName(personId, currentPersonName)
-            }
-        }
-    }
-
-    override suspend fun getPersonPreview(personId: String, visitorToken: String): String? {
-        if (personId.isEmpty()) return null
-        return try {
-            when (ChatParams.operatorPreviewMode) {
-                OperatorPreviewMode.CACHE -> {
-                    personDao.getPersonPreview(personId)
-                        ?: personApi.getPersonPreview(
-                            personId = personId,
-                            visitorToken = visitorToken
-                        ).toData()?.picture?.apply {
-                            try {
-                                personDao.addPersonPreview(PersonEntity(personId, this))
-                                messagesDao.updatePersonPreview(personId, this)
-                            } catch (ex: SQLiteConstraintException) {}
-                        }
-                }
-                OperatorPreviewMode.ALWAYS_REQUEST -> {
-                    personApi.getPersonPreview(
-                        personId = personId,
-                        visitorToken = visitorToken
-                    ).toData()?.picture.apply {
-                        messagesDao.updatePersonPreview(personId, this)
-                    }
-                }
-                else -> null
-            }
-        } catch (ex: Exception) {
-            Log.e("FAIL_REQUEST", "getPersonPreview fail: ${ex.message}")
-            null
-        }
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/repository/MessageRepository.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/repository/MessageRepository.kt b/chat/src/main/java/com/crafttalk/chat/data/repository/MessageRepository.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/repository/MessageRepository.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,356 +0,0 @@
-package com.crafttalk.chat.data.repository
-
-import android.content.Context
-import android.util.Log
-import com.crafttalk.chat.data.api.rest.MessageApi
-import com.crafttalk.chat.data.api.socket.SocketApi
-import com.crafttalk.chat.data.helper.network.toData
-import com.crafttalk.chat.data.local.db.dao.MessagesDao
-import com.crafttalk.chat.data.local.db.entity.ActionEntity
-import com.crafttalk.chat.data.local.db.entity.ButtonEntity
-import com.crafttalk.chat.data.local.db.entity.KeyboardEntity
-import com.crafttalk.chat.domain.repository.IMessageRepository
-import javax.inject.Inject
-import com.crafttalk.chat.data.local.db.entity.MessageEntity
-import com.crafttalk.chat.domain.entity.file.TypeDownloadProgress
-import com.crafttalk.chat.domain.entity.message.MessageType
-import com.crafttalk.chat.domain.entity.message.NetworkBodySearch
-import com.crafttalk.chat.domain.entity.message.NetworkMessage
-import com.crafttalk.chat.domain.entity.message.NetworkSearch
-import com.crafttalk.chat.domain.transfer.TransferFileInfo
-import com.crafttalk.chat.presentation.helper.ui.getSizeMediaFile
-import com.crafttalk.chat.presentation.helper.ui.getWeightFile
-import com.crafttalk.chat.presentation.helper.ui.getWeightMediaFile
-import com.crafttalk.chat.utils.ChatParams
-import kotlinx.coroutines.async
-import kotlinx.coroutines.withTimeoutOrNull
-
-class MessageRepository
-@Inject constructor(
-    private val context: Context,
-    private val messagesDao: MessagesDao,
-    private val socketApi: SocketApi,
-    private val messageApi: MessageApi
-) : IMessageRepository {
-
-    override fun getMessages() = messagesDao
-        .getMessages()
-
-    override fun getAllMessages() = messagesDao
-        .getAllMessages()
-
-    override fun getCountUnreadMessages(
-        currentReadMessageTime: Long,
-        ignoredMessageTypes: List<Int>
-    ) = messagesDao
-        .getCountUnreadMessages(
-            currentReadMessageTime= currentReadMessageTime,
-            ignoredMessageTypes = ignoredMessageTypes
-        )
-
-    override suspend fun getPositionByTimestamp(id: String, timestamp: Long): Int? {
-        return if (messagesDao.emptyAvailable(id)) {
-            messagesDao.getPositionByTimestamp(timestamp)
-        } else {
-            null
-        }
-    }
-
-    override fun getTimestampMessageById(messageId: String) = messagesDao
-        .getTimestampMessageById(messageId)
-
-    override fun getCountMessagesInclusiveTimestamp(timestampMessage: Long) = messagesDao
-        .getCountMessagesInclusiveTimestamp(timestampMessage)
-
-    override fun getCountUnreadMessagesRange(
-        currentReadMessageTime: Long,
-        timestampLastMessage: Long,
-        ignoredMessageTypes: List<Int>
-    ) = messagesDao
-        .getCountUnreadMessagesRange(
-            currentReadMessageTime = currentReadMessageTime,
-            timestampLastMessage = timestampLastMessage,
-            ignoredMessageTypes = ignoredMessageTypes
-        )
-
-    override suspend fun getTimeFirstMessage() = messagesDao
-        .getFirstTime()
-
-    override suspend fun getTimeLastMessage() = messagesDao
-        .getLastTime()
-
-    override suspend fun uploadMessages(
-        uuid: String,
-        startTime: Long?,
-        endTime: Long,
-        updateReadPoint: (newPositions: List<Pair<String, Long>>) -> Boolean,
-        syncMessagesAcrossDevices: (countUnreadMessages: Int) -> Unit,
-        allMessageLoaded: () -> Unit,
-        notAllMessageLoaded: () -> Unit,
-        getPersonPreview: suspend (personId: String) -> String?,
-        getFileInfo: suspend (context: Context, networkMessage: NetworkMessage) -> TransferFileInfo?,
-        updateSearchMessagePosition: suspend (insertedMessages: List<MessageEntity>) -> Unit
-    ): List<MessageEntity> {
-
-        try {
-            val fullPullMessages= mutableListOf<NetworkMessage>()
-
-            var lastTimestamp = endTime
-            while (true) {
-                val listMessages = withTimeoutOrNull(ChatParams.uploadPoolMessagesTimeout) {
-                    async {
-                        socketApi.uploadMessages(
-                            timestamp = lastTimestamp
-                        )
-                    }.await()
-                }?.filter { it.messageType != MessageType.INITIAL_MESSAGE.valueType || ChatParams.showInitialMessage == true }
-                socketApi.closeHistoryListener()
-                listMessages ?: break
-
-                if (startTime == null) {
-                    fullPullMessages.addAll(listMessages)
-//                    Раскоментить когда исправиться задача ...
-//                    val countRealMessages = listMessages.filter {
-//                        it.messageType in listOf(MessageType.VISITOR_MESSAGE.valueType, MessageType.INITIAL_MESSAGE.valueType) &&
-//                        it.isContainsContent &&
-//                        it.selectedAction.isNullOrBlank()
-//                    }.size
-//                    if (listMessages.isEmpty() /*|| countRealMessages < ChatParams.countDownloadedMessages*/) {
-//                        allMessageLoaded()
-//                    }
-                    break
-                }
-
-                val firstTimeMessage = listMessages
-                    .sortedBy { it.timestamp }
-                    .find { it.messageType in listOf(MessageType.VISITOR_MESSAGE.valueType, MessageType.INITIAL_MESSAGE.valueType, MessageType.TRANSFER_TO_OPERATOR.valueType) }?.timestamp
-
-                fullPullMessages.addAll(listMessages.filter { it.timestamp >= startTime })
-
-                if (firstTimeMessage == null) {
-                    break
-                }
-                if (firstTimeMessage <= startTime) break
-
-                lastTimestamp = firstTimeMessage
-            }
-
-            if (fullPullMessages.isEmpty()) {
-                allMessageLoaded()
-                return listOf()
-            } else {
-                notAllMessageLoaded()
-            }
-
-            if (fullPullMessages.find { it.messageType == MessageType.INITIAL_MESSAGE.valueType } != null) {
-                messagesDao.deleteAllMessageByType(MessageType.INITIAL_MESSAGE.valueType)
-            }
-
-            val actionSelectionMessages = fullPullMessages.filter { !it.selectedAction.isNullOrBlank() && it.messageType == MessageType.VISITOR_MESSAGE.valueType }.map { it.selectedAction ?: "" }
-            val messageStatuses = fullPullMessages.filter { it.messageType in listOf(MessageType.RECEIVED_BY_MEDIATO.valueType, MessageType.RECEIVED_BY_OPERATOR.valueType) }
-
-            val operatorMessagesWithContent = fullPullMessages.filter { it.isReply && it.messageType in listOf(MessageType.VISITOR_MESSAGE.valueType, MessageType.INITIAL_MESSAGE.valueType) && it.isContainsContent }.map { networkMessage ->
-                val fileInfo = getFileInfo(context, networkMessage)
-                MessageEntity.mapOperatorMessage(
-                    uuid = uuid,
-                    networkMessage = networkMessage,
-                    arrivalTime = System.currentTimeMillis(),
-                    actionsSelected = actionSelectionMessages,
-                    buttonsSelected = listOf(),
-                    operatorPreview = networkMessage.operatorId?.let { getPersonPreview(it) },
-                    fileSize = fileInfo?.size,
-                    mediaFileHeight = fileInfo?.height,
-                    mediaFileWidth = fileInfo?.width
-                )
-            }
-
-            val userMessagesWithContent = fullPullMessages.filter { !it.isReply &&  it.messageType == MessageType.VISITOR_MESSAGE.valueType && it.isContainsContent }.map { networkMessage ->
-                val statusesConcreteMessage: List<Int> = messageStatuses.filter { it.parentMessageId == networkMessage.idFromChannel }.map { it.messageType }
-                val newStatus: Int = when {
-                    statusesConcreteMessage.contains(MessageType.RECEIVED_BY_OPERATOR.valueType) -> MessageType.RECEIVED_BY_OPERATOR.valueType
-                    statusesConcreteMessage.contains(MessageType.RECEIVED_BY_MEDIATO.valueType) -> MessageType.RECEIVED_BY_MEDIATO.valueType
-                    else -> MessageType.VISITOR_MESSAGE.valueType
-                }
-                val fileInfo = getFileInfo(context, networkMessage)
-                val repliedFileInfo = networkMessage.replyToMessage?.let { getFileInfo(context, it) }
-                MessageEntity.mapUserMessage(
-                    uuid = uuid,
-                    networkMessage = networkMessage,
-                    arrivalTime = System.currentTimeMillis(),
-                    status = newStatus,
-                    operatorPreview = networkMessage.operatorId?.let { getPersonPreview(it) },
-                    fileSize = fileInfo?.size,
-                    mediaFileHeight = fileInfo?.height,
-                    mediaFileWidth = fileInfo?.width,
-                    repliedMessageFileSize = repliedFileInfo?.size,
-                    repliedMessageMediaFileHeight = repliedFileInfo?.height,
-                    repliedMessageMediaFileWidth = repliedFileInfo?.width,
-                )
-            }
-
-            val messagesAboutJoin = fullPullMessages.filter { it.messageType == MessageType.TRANSFER_TO_OPERATOR.valueType }.map { networkMessage ->
-                MessageEntity.mapOperatorJoinMessage(
-                    uuid = uuid,
-                    networkMessage = networkMessage,
-                    arrivalTime = System.currentTimeMillis(),
-                    operatorPreview = networkMessage.operatorId?.let { getPersonPreview(it) }
-                )
-            }
-
-            val resultMessages = mutableListOf<MessageEntity>().apply {
-                addAll(operatorMessagesWithContent.distinctBy { it.id }.filter { !messagesDao.hasThisMessage(it.id) })
-                addAll(userMessagesWithContent.distinctBy { it.id }.filter { !messagesDao.hasThisMessage(it.id) })
-                addAll(messagesAboutJoin.distinctBy { it.id }.filter { !messagesDao.hasThisMessage(it.id) })
-            }
-
-            val maxTimestampUserMessage = userMessagesWithContent.maxByOrNull { it.timestamp }?.timestamp
-            Log.d("TEST_DATA_LOP", "rep maxTimestampUserMessage - ${maxTimestampUserMessage};")
-            if (maxTimestampUserMessage != null) {
-                val messagesForUpdateReadPoint = resultMessages.filter { it.timestamp <= maxTimestampUserMessage }
-                        .map { Pair(it.id, it.timestamp) }
-                Log.d("TEST_DATA_LOP", "rep messagesForUpdateReadPoint - ${messagesForUpdateReadPoint};")
-                updateReadPoint(messagesForUpdateReadPoint)
-            }
-
-            ChatParams.glueMessage?.let { msg ->
-                resultMessages.add(MessageEntity.mapInfoMessage(
-                    uuid = uuid,
-                    infoMessage = msg,
-                    timestamp = (resultMessages.maxOfOrNull { it.timestamp } ?: messagesDao.getLastTime() ?: System.currentTimeMillis()) + 1,
-                    arrivalTime = System.currentTimeMillis()
-                ))
-            }
-
-            removeAllInfoMessages()
-            updateSearchMessagePosition(resultMessages)
-            messagesDao.insertMessages(resultMessages)
-
-            maxTimestampUserMessage?.let { timestampLastUserMessage ->
-                resultMessages.filter { it.timestamp > timestampLastUserMessage }.size.run(syncMessagesAcrossDevices)
-            }
-
-            return resultMessages
-        } catch (ex: Exception) {
-            return listOf()
-        }
-    }
-
-    override suspend fun mergeNewMessages() {
-        socketApi.mergeNewMessages()
-    }
-
-    override suspend fun updatePersonNames(
-        messages: List<MessageEntity>,
-        updatePersonName: suspend (personId: String?, currentPersonName: String?) -> Unit
-    ) {
-        messages.sortedBy { it.timestamp }.forEach {
-            updatePersonName(it.operatorId, it.operatorName)
-        }
-    }
-
-    override suspend fun getFileInfo(
-        context: Context,
-        networkMessage: NetworkMessage
-    ): TransferFileInfo? {
-        return when {
-            (networkMessage.messageType in listOf(MessageType.VISITOR_MESSAGE.valueType, MessageType.RECEIVED_BY_MEDIATO.valueType, MessageType.RECEIVED_BY_OPERATOR.valueType)) && (networkMessage.isImage || networkMessage.isGif) -> {
-                networkMessage.correctAttachmentUrl?.let { url ->
-                    val pair = getSizeMediaFile(context, url)
-                    TransferFileInfo(
-                        height = pair?.first,
-                        width = pair?.second
-                    )
-                }
-            }
-            (networkMessage.messageType in listOf(MessageType.VISITOR_MESSAGE.valueType, MessageType.RECEIVED_BY_MEDIATO.valueType, MessageType.RECEIVED_BY_OPERATOR.valueType))  && networkMessage.isFile -> {
-                networkMessage.correctAttachmentUrl?.let { url ->
-                    TransferFileInfo(
-                        size = getWeightFile(url) ?: getWeightMediaFile(context, url)
-                    )
-                }
-            }
-            else -> null
-        }
-    }
-
-    override suspend fun sendMessages(message: String, repliedMessageId: String?) {
-        val repliedMessage = repliedMessageId?.let { messagesDao.getMessageById(it) }?.let { NetworkMessage.map(it) }
-        socketApi.sendMessage(message, repliedMessage)
-    }
-
-    override suspend fun readMessage(messageId: String) {
-        socketApi.readMessage(messageId)
-    }
-
-    override suspend fun searchTimestampsMessages(uuid: String, searchText: String): NetworkSearch? {
-        return messageApi.searchMessages(
-            body = NetworkBodySearch(
-                visitorUuid = uuid,
-                searchText = searchText
-            )
-        ).toData()
-    }
-
-    override suspend fun selectAction(messageId: String, actionId: String) {
-        socketApi.selectAction(actionId)
-        messagesDao.getMessageById(messageId)?.let {
-            val updatedActions = it.actions?.map { action ->
-                ActionEntity(
-                    action.actionId,
-                    action.actionText,
-                    action.actionId == actionId
-                )
-            }
-            messagesDao.selectAction(messageId, updatedActions)
-        }
-    }
-
-    override suspend fun selectButton(messageId: String, actionId: String, buttonId: String) {
-        socketApi.selectAction(actionId)
-        messagesDao.getMessageById(messageId)?.let {
-            val updatedButtons = it.keyboard?.buttons?.map { horizontalButtons ->
-                horizontalButtons.map { button: ButtonEntity ->
-                    ButtonEntity(
-                        buttonId = button.buttonId,
-                        title = button.title,
-                        action = button.action,
-                        typeOperation = button.typeOperation,
-                        color = button.color,
-                        image = button.image,
-                        imageEmoji = button.imageEmoji,
-                        hasFullSize = button.hasFullSize,
-                        selected = button.buttonId == buttonId
-                    )
-                }
-            }
-            messagesDao.selectButton(messageId, KeyboardEntity(updatedButtons ?: listOf()))
-        }
-    }
-
-    override fun selectButtonInWidget(actionId: String) {
-        socketApi.selectAction(actionId)
-    }
-
-    override fun updateSizeMessage(id: String, height: Int, width: Int) {
-        messagesDao.updateSizeMessage(id, height, width)
-    }
-
-    override fun updateTypeDownloadProgressOfMessageWithAttachment(
-        id: String,
-        typeDownloadProgress: TypeDownloadProgress
-    ) {
-        messagesDao.updateTypeDownloadProgress(id, typeDownloadProgress)
-    }
-
-    override fun removeAllInfoMessages() {
-        messagesDao.deleteAllMessageByType(MessageType.INFO_MESSAGE.valueType)
-    }
-
-    override fun removeAllMessages() {
-        messagesDao.deleteAllMessages()
-    }
-
-    override fun setUpdateSearchMessagePosition(updateSearchMessagePosition: suspend (insertedMessages: List<MessageEntity>) -> Unit) {
-        socketApi.setUpdateSearchMessagePosition(updateSearchMessagePosition)
-    }
-}
\ No newline at end of file
Index: chat/src/main/res/layout/com_crafttalk_chat_layout_warning.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_layout_warning.xml b/chat/src/main/res/layout/com_crafttalk_chat_layout_warning.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_layout_warning.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,73 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:layout_below="@id/upper_limiter"
-    android:padding="16dp">
-
-    <ImageView
-        android:id="@+id/warning_icon"
-        android:layout_width="100dp"
-        android:layout_height="100dp"
-        android:rotation="180"
-        android:src="@drawable/com_crafttalk_chat_ic_circle_warning"
-        app:layout_constraintVertical_chainStyle="packed"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintBottom_toTopOf="@id/warning_title" />
-
-    <TextView
-        android:id="@+id/warning_title"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:text="@string/com_crafttalk_chat_warning_title"
-        android:textSize="18sp"
-        android:gravity="center"
-        android:layout_marginTop="16dp"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/warning_icon"
-        app:layout_constraintBottom_toTopOf="@id/warning_description" />
-
-    <TextView
-        android:id="@+id/warning_description"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:text="@string/com_crafttalk_chat_warning_reload"
-        android:textSize="18sp"
-        android:gravity="center"
-        android:layout_marginTop="16dp"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/warning_title"
-        app:layout_constraintBottom_toTopOf="@id/warning_refresh" />
-
-    <ImageView
-        android:id="@+id/warning_refresh"
-        android:layout_width="80dp"
-        android:layout_height="80dp"
-        android:src="@drawable/com_crafttalk_chat_ic_refresh"
-        android:layout_marginTop="16dp"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/warning_description"
-        app:layout_constraintBottom_toBottomOf="parent" />
-
-    <ProgressBar
-        android:id="@+id/warning_loading"
-        android:layout_width="80dp"
-        android:layout_height="80dp"
-        android:indeterminateDrawable="@drawable/com_crafttalk_chat_spinner_ring"
-        android:indeterminateOnly="true"
-        android:visibility="gone"
-        android:layout_marginTop="16dp"
-        app:layout_constraintVertical_bias="0"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/warning_description"
-        app:layout_constraintBottom_toBottomOf="parent" />
-
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/push/ChatPushService.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/push/ChatPushService.kt b/chat/src/main/java/com/crafttalk/chat/data/push/ChatPushService.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/push/ChatPushService.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,5 +0,0 @@
-package com.crafttalk.chat.data.push
-
-import com.google.firebase.messaging.FirebaseMessagingService
-
-open class ChatPushService: FirebaseMessagingService()
Index: chat/src/main/java/com/crafttalk/chat/domain/entity/file/TypeDownloadProgress.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/entity/file/TypeDownloadProgress.kt b/chat/src/main/java/com/crafttalk/chat/domain/entity/file/TypeDownloadProgress.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/entity/file/TypeDownloadProgress.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,7 +0,0 @@
-package com.crafttalk.chat.domain.entity.file
-
-enum class TypeDownloadProgress {
-    NOT_DOWNLOADED,
-    DOWNLOADING,
-    DOWNLOADED
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/helper/permission/PermissionHelper.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/helper/permission/PermissionHelper.kt b/chat/src/main/java/com/crafttalk/chat/presentation/helper/permission/PermissionHelper.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/helper/permission/PermissionHelper.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,38 +0,0 @@
-package com.crafttalk.chat.presentation.helper.permission
-
-import android.content.Context
-import android.content.pm.PackageManager
-import android.os.Build
-import androidx.core.content.ContextCompat
-
-fun checkPermission(
-    permissions: Array<String>,
-    context: Context,
-    noPermission: () -> Unit,
-    onPermissionsGranted: () -> Unit
-) {
-    if (Build.VERSION.SDK_INT < Build.VERSION_CODES.M || permissions.all {
-            ContextCompat.checkSelfPermission(
-                context,
-                it
-            ) == PackageManager.PERMISSION_GRANTED
-        }) {
-        onPermissionsGranted()
-    } else {
-        noPermission()
-    }
-}
-
-fun requestPermissionWithAction(
-    context: Context,
-    action: () -> Unit = {},
-    permissions: Array<String>,
-    noPermission: (permissions: Array<String>, actionsAfterObtainingPermission: () -> Unit) -> Unit
-) {
-    checkPermission(
-        permissions = permissions,
-        context = context,
-        noPermission = { noPermission(permissions) { action() } },
-        onPermissionsGranted = action
-    )
-}
\ No newline at end of file
Index: chat/src/main/res/layout/com_crafttalk_chat_item_server_widget_message.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_item_server_widget_message.xml b/chat/src/main/res/layout/com_crafttalk_chat_item_server_widget_message.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_item_server_widget_message.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:layout_marginStart="@dimen/com_crafttalk_chat_message_margin_start"
-    android:layout_marginTop="@dimen/com_crafttalk_chat_message_margin_top"
-    android:layout_marginBottom="@dimen/com_crafttalk_chat_message_margin_bottom">
-
-    <include
-        android:id="@+id/include_date"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginEnd="@dimen/com_crafttalk_chat_message_margin_end"
-        layout="@layout/com_crafttalk_chat_include_date_message" />
-
-    <androidx.constraintlayout.widget.ConstraintLayout
-        android:id="@+id/widget_container"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/include_date" />
-
-    <include
-        android:id="@+id/include_message_info"
-        android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        layout="@layout/com_crafttalk_chat_include_server_message_info"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/widget_container" />
-
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: chat/src/main/res/layout/com_crafttalk_chat_bottom_sheet_show_gif.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_bottom_sheet_show_gif.xml b/chat/src/main/res/layout/com_crafttalk_chat_bottom_sheet_show_gif.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_bottom_sheet_show_gif.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,34 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:orientation="vertical"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent">
-
-    <androidx.appcompat.widget.Toolbar
-        android:layout_width="match_parent"
-        android:layout_height="?attr/actionBarSize"
-        android:background="@color/com_crafttalk_chat_black_translucent">
-
-        <ImageView
-            android:id="@+id/gif_navigate_back"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:src="@drawable/com_crafttalk_chat_ic_arrow_back" />
-
-        <ImageView
-            android:id="@+id/gif_download"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:src="@drawable/com_crafttalk_chat_ic_file_download"
-            android:layout_gravity="end"
-            android:layout_marginEnd="16dp" />
-
-    </androidx.appcompat.widget.Toolbar>
-
-    <ImageView
-        android:id="@+id/gif_show"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent" />
-
-</LinearLayout>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/local/db/entity/converters/ActionConverter.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/converters/ActionConverter.kt b/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/converters/ActionConverter.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/converters/ActionConverter.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,27 +0,0 @@
-package com.crafttalk.chat.data.local.db.entity.converters
-
-import androidx.room.TypeConverter
-import com.crafttalk.chat.data.local.db.entity.ActionEntity
-import com.google.gson.Gson
-import com.google.gson.reflect.TypeToken
-import java.lang.reflect.Type
-
-class ActionConverter {
-
-    @TypeConverter
-    fun fromActions(actions: List<ActionEntity>?): String? {
-        actions ?: return null
-        val type: Type = object : TypeToken<List<ActionEntity>>() {}.type
-        val gson = Gson()
-        return gson.toJson(actions, type)
-    }
-
-    @TypeConverter
-    fun toActions(actions: String?): List<ActionEntity>? {
-        actions ?: return null
-        val type: Type = object : TypeToken<List<ActionEntity>>() {}.type
-        val gson = Gson()
-        return gson.fromJson(actions, type)
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_background_item_selected_button.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_background_item_selected_button.xml b/chat/src/main/res/drawable/com_crafttalk_chat_background_item_selected_button.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_background_item_selected_button.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,9 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<shape
-    android:shape="rectangle"
-    xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <solid android:color="@color/com_crafttalk_chat_default_color_main"/>
-    <corners android:radius="5dp"/>
-
-</shape>
\ No newline at end of file
Index: chat/src/main/res/layout/com_crafttalk_chat_include_user_message_info.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_include_user_message_info.xml b/chat/src/main/res/layout/com_crafttalk_chat_include_user_message_info.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_include_user_message_info.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,49 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:paddingTop="@dimen/com_crafttalk_chat_message_info_margin_top">
-
-    <TextView
-        android:id="@+id/author_name"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:fontFamily="@font/com_crafttalk_chat_ubuntu_regular"
-        android:textFontWeight="600"
-        android:gravity="center_vertical"
-        android:layout_marginEnd="4dp"
-        app:layout_constraintEnd_toStartOf="@id/time"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintBottom_toBottomOf="parent"
-        tools:text="Пользователь"
-        tools:visibility="visible" />
-
-    <TextView
-        android:id="@+id/time"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:fontFamily="@font/com_crafttalk_chat_ubuntu_regular"
-        android:textFontWeight="600"
-        android:gravity="center_vertical"
-        android:layout_marginEnd="4dp"
-        app:layout_goneMarginEnd="0dp"
-        app:layout_constraintEnd_toStartOf="@id/status"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintBottom_toBottomOf="parent"
-        tools:text="10:30"
-        tools:visibility="visible" />
-
-    <ImageView
-        android:id="@+id/status"
-        android:layout_width="14dp"
-        android:layout_height="14dp"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintBottom_toBottomOf="parent"
-        tools:src="@drawable/com_crafttalk_chat_ic_check"
-        tools:visibility="visible" />
-
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkWidget.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkWidget.kt b/chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkWidget.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkWidget.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,59 +0,0 @@
-package com.crafttalk.chat.domain.entity.message
-
-import com.crafttalk.chat.data.local.db.entity.WidgetEntity
-import com.crafttalk.chat.utils.ChatParams
-import com.google.gson.*
-import com.google.gson.annotations.SerializedName
-import java.lang.reflect.Type
-
-data class NetworkWidget(
-    @SerializedName(value = "id", alternate = ["widgetId"])
-    val widgetId: String,
-    @SerializedName(value = "description")
-    val description: String,
-    @SerializedName(value = "params", alternate = ["payload"])
-    val params: Any
-) {
-
-    companion object {
-
-        fun map(widgetEntity: WidgetEntity) = NetworkWidget(
-            widgetId = widgetEntity.widgetId,
-            description = widgetEntity.description,
-            params = widgetEntity.payload
-        )
-    }
-}
-
-class NetworkWidgetDeserializer : JsonDeserializer<NetworkWidget?> {
-
-    override fun deserialize(
-        json: JsonElement?,
-        typeOfT: Type?,
-        context: JsonDeserializationContext?
-    ): NetworkWidget? {
-        val jsonObject = json?.asJsonObject ?: return null
-        if (!jsonObject.has("id")) return null
-        if (!jsonObject.has("params")) return null
-
-        val widgetId = jsonObject["id"].asString
-        val widgetDescription = if (jsonObject.has("description")) {
-            jsonObject["description"].asString
-        } else {
-            ""
-        }
-        return try {
-            val paramObj = Gson().fromJson(
-                jsonObject["params"].toString(),
-                ChatParams.methodGetPayloadTypeWidget(widgetId) ?: HashMap<String, Any>()::class.java
-            )
-            NetworkWidget(
-                widgetId = widgetId,
-                description = widgetDescription,
-                params = paramObj
-            )
-        } catch (ex: Exception) {
-            null
-        }
-    }
-}
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_spinner_ring.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_spinner_ring.xml b/chat/src/main/res/drawable/com_crafttalk_chat_spinner_ring.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_spinner_ring.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<animated-rotate xmlns:android="http://schemas.android.com/apk/res/android"
-    android:pivotX="50%"
-    android:pivotY="50%" >
-
-    <shape
-        android:innerRadiusRatio="4"
-        android:shape="ring"
-        android:thicknessRatio="5.333"
-        android:useLevel="false" >
-        <size
-            android:height="18dip"
-            android:width="18dip" />
-
-        <gradient
-            android:centerColor="#886688cc"
-            android:centerY="0.50"
-            android:endColor="#ff6688cc"
-            android:startColor="#fff"
-            android:type="sweep"
-            android:useLevel="false" />
-    </shape>
-
-</animated-rotate>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/listeners.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/listeners.kt b/chat/src/main/java/com/crafttalk/chat/presentation/listeners.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/listeners.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,58 +0,0 @@
-package com.crafttalk.chat.presentation
-
-import com.crafttalk.chat.utils.TypeFailUpload
-
-interface ChatPermissionListener {
-    fun requestedPermissions(permissions: Array<String>, messages: Array<String>, action: () -> Unit)
-}
-
-interface UploadFileListener {
-    fun successUpload()
-    fun failUpload(message: String, type: TypeFailUpload)
-}
-
-interface DownloadFileListener {
-    fun successDownload()
-    fun failDownload()
-    fun failDownload(title: String) {}
-}
-
-interface ChatInternetConnectionListener {
-    fun connect() // has internet
-    fun failConnect() // hasn't internet
-    fun lossConnection() // hasn't internet
-    fun reconnect() // has internet
-}
-
-interface ChatStateListener {
-    fun startSynchronization()
-    fun endSynchronization()
-}
-
-interface MergeHistoryListener {
-    fun showDialog()
-    fun startMerge()
-    fun endMerge()
-}
-
-interface StateStartingProgressListener {
-    fun start()
-    fun stop()
-}
-
-interface NavigationListener {
-    fun navigate(targetName: String)
-}
-
-interface ChatEventListener {
-    fun operatorStartWriteMessage()
-    fun operatorStopWriteMessage()
-    fun finishDialog()
-    fun showUploadHistoryBtn()
-    fun synchronized()
-}
-
-interface SearchListener {
-    fun start()
-    fun stop()
-}
\ No newline at end of file
Index: chat/src/main/res/layout/com_crafttalk_chat_item_user_file_message.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_item_user_file_message.xml b/chat/src/main/res/layout/com_crafttalk_chat_item_user_file_message.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_item_user_file_message.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,58 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:layout_marginStart="@dimen/com_crafttalk_chat_message_margin_start"
-    android:layout_marginTop="@dimen/com_crafttalk_chat_message_margin_top"
-    android:layout_marginEnd="@dimen/com_crafttalk_chat_message_margin_end"
-    android:layout_marginBottom="@dimen/com_crafttalk_chat_message_margin_bottom">
-
-    <include
-        android:id="@+id/include_date"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        layout="@layout/com_crafttalk_chat_include_date_message" />
-
-    <View
-        android:id="@+id/content_container"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        app:layout_constraintStart_toStartOf="@id/border_content_start"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/include_date"
-        app:layout_constraintBottom_toTopOf="@id/include_message_info"
-        tools:background="@drawable/com_crafttalk_chat_background_item_simple_user_message" />
-
-    <include
-        android:id="@+id/file_info"
-        android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        layout="@layout/com_crafttalk_chat_include_file_info"
-        android:layout_marginTop="@dimen/com_crafttalk_chat_message_content_padding_top"
-        android:layout_marginEnd="@dimen/com_crafttalk_chat_message_content_padding_end"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/include_date" />
-
-    <View
-        android:id="@+id/border_content_start"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        android:layout_marginEnd="@dimen/com_crafttalk_chat_message_content_padding_start"
-        app:layout_constraintEnd_toStartOf="@id/file_info"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintBottom_toBottomOf="parent" />
-
-    <include
-        android:id="@+id/include_message_info"
-        android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        layout="@layout/com_crafttalk_chat_include_user_message_info"
-        android:layout_marginTop="@dimen/com_crafttalk_chat_message_content_padding_bottom"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/file_info" />
-
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/base/BaseItem.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/base/BaseItem.kt b/chat/src/main/java/com/crafttalk/chat/presentation/base/BaseItem.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/base/BaseItem.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,6 +0,0 @@
-package com.crafttalk.chat.presentation.base
-
-abstract class BaseItem {
-    abstract fun getLayout() : Int
-    abstract fun <T : BaseItem> isSame(item: T) : Boolean
-}
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_ic_voice_mic_off.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_ic_voice_mic_off.xml b/chat/src/main/res/drawable/com_crafttalk_chat_ic_voice_mic_off.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_ic_voice_mic_off.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,9 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="24dp"
-    android:height="24dp"
-    android:viewportWidth="24"
-    android:viewportHeight="24">
-  <path
-      android:fillColor="#FF000000"
-      android:pathData="M12,15c1.66,0 2.99,-1.34 2.99,-3L15,6c0,-1.66 -1.34,-3 -3,-3S9,4.34 9,6v6c0,1.66 1.34,3 3,3zM17.3,12c0,3 -2.54,5.1 -5.3,5.1S6.7,15 6.7,12L5,12c0,3.42 2.72,6.23 6,6.72L11,22h2v-3.28c3.28,-0.48 6,-3.3 6,-6.72h-1.7z"/>
-</vector>
Index: chat/src/main/java/com/crafttalk/chat/presentation/model/TypeMultiple.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/model/TypeMultiple.kt b/chat/src/main/java/com/crafttalk/chat/presentation/model/TypeMultiple.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/model/TypeMultiple.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,6 +0,0 @@
-package com.crafttalk.chat.presentation.model
-
-enum class TypeMultiple {
-    SINGLE,
-    MULTIPLE
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/interactors/MessageInteractor.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/interactors/MessageInteractor.kt b/chat/src/main/java/com/crafttalk/chat/domain/interactors/MessageInteractor.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/interactors/MessageInteractor.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,201 +0,0 @@
-package com.crafttalk.chat.domain.interactors
-
-import android.content.Context
-import androidx.paging.DataSource
-import com.crafttalk.chat.data.local.db.entity.MessageEntity
-import com.crafttalk.chat.domain.entity.message.MessageType
-import com.crafttalk.chat.domain.repository.IConditionRepository
-import com.crafttalk.chat.domain.repository.IMessageRepository
-import javax.inject.Inject
-
-class MessageInteractor
-@Inject constructor(
-    private val messageRepository: IMessageRepository,
-    private val conditionRepository: IConditionRepository,
-    private val visitorInteractor: VisitorInteractor,
-    private val personInteractor: PersonInteractor
-) {
-
-    fun getAllMessages(): DataSource.Factory<Int, MessageEntity> =
-        messageRepository.getMessages()
-
-    fun clearDbIfMessagesDuplicated(context: Context) {
-        try {
-            val messages = messageRepository.getAllMessages()
-            if (messages.size != messages.distinctBy { it.id }.size) {
-                context.deleteDatabase("chat.db")
-            }
-        } catch (ex: Exception) {
-            context.deleteDatabase("chat.db")
-        }
-    }
-
-    fun getCountUnreadMessages(currentReadMessageTime: Long, timestampLastMessage: Long?): Int? {
-        return if (timestampLastMessage == null) {
-            messageRepository.getCountUnreadMessages(
-                currentReadMessageTime = currentReadMessageTime,
-                ignoredMessageTypes = listOf(MessageType.INFO_MESSAGE.valueType)
-            )
-        } else {
-            messageRepository.getCountUnreadMessagesRange(
-                currentReadMessageTime = currentReadMessageTime,
-                timestampLastMessage = timestampLastMessage,
-                ignoredMessageTypes = listOf(MessageType.INFO_MESSAGE.valueType)
-            )
-        }
-    }
-
-    fun getCountMessagesInclusiveTimestampById(messageId: String): Int? {
-        return messageRepository.getTimestampMessageById(messageId)?.run(messageRepository::getCountMessagesInclusiveTimestamp)
-    }
-
-    suspend fun sendMessage(message: String, repliedMessageId: String?) {
-        messageRepository.sendMessages(message, repliedMessageId)
-    }
-
-    suspend fun readMessage(messageId: String) {
-        messageRepository.readMessage(messageId)
-    }
-
-    suspend fun selectActionInMessage(messageId: String, actionId: String) {
-        messageRepository.selectAction(messageId, actionId)
-    }
-
-    suspend fun selectButtonInMessage(messageId: String, actionId: String, buttonId: String) {
-        messageRepository.selectButton(messageId, actionId, buttonId)
-    }
-
-    fun selectButtonInWidget(actionId: String) {
-        messageRepository.selectButtonInWidget(actionId)
-    }
-
-    suspend fun uploadHistoryMessages(
-        eventStateHistoryLoaded: (isAllHistoryLoaded: Boolean) -> Unit,
-        uploadHistoryComplete: () -> Unit,
-        updateSearchMessagePosition: suspend (insertedMessages: List<MessageEntity>) -> Unit,
-        executeAnyway: Boolean
-    ) {
-        val visitor = visitorInteractor.getVisitor() ?: return
-        val statusExistenceMessages = conditionRepository.getStatusExistenceMessages()
-        val flagAllHistoryLoaded = conditionRepository.getFlagAllHistoryLoaded()
-
-        when {
-            !statusExistenceMessages && executeAnyway -> uploadHistoryComplete()
-            statusExistenceMessages && (!flagAllHistoryLoaded || executeAnyway) -> messageRepository
-                .getTimeFirstMessage()
-                ?.let { firstMessageTime ->
-                    messageRepository.uploadMessages(
-                        uuid = visitor.uuid,
-                        startTime = null,
-                        endTime = firstMessageTime,
-                        updateReadPoint = { false },
-                        syncMessagesAcrossDevices = {},
-                        allMessageLoaded = {
-                            eventStateHistoryLoaded(true)
-                            conditionRepository.saveFlagAllHistoryLoaded(true)
-                        },
-                        notAllMessageLoaded = {
-                            eventStateHistoryLoaded(false)
-                            conditionRepository.saveFlagAllHistoryLoaded(false)
-                        },
-                        getPersonPreview = { personId ->
-                            personInteractor.getPersonPreview(personId, visitor.token)
-                        },
-                        getFileInfo = messageRepository::getFileInfo,
-                        updateSearchMessagePosition = updateSearchMessagePosition
-                    )
-                    uploadHistoryComplete()
-                }
-        }
-    }
-
-    // при переходе на холд добавить вызов метода, обновляющего состояния у сообщений, находящихся в статусе "отправляется"
-    suspend fun syncMessages(
-        updateReadPoint: (newTimeMarks: List<Pair<String, Long>>) -> Boolean,
-        syncMessagesAcrossDevices: (indexFirstUnreadMessage: Int) -> Unit,
-        eventStateHistoryLoaded: (isAllHistoryLoaded: Boolean) -> Unit,
-        updateSearchMessagePosition: suspend (insertedMessages: List<MessageEntity>) -> Unit
-    ) {
-        val visitor = visitorInteractor.getVisitor() ?: return
-        val syncMessagesAcrossDevicesWrapper: (countUnreadMessages: Int) -> Unit = { countUnreadMessages ->
-            syncMessagesAcrossDevices(
-                if (countUnreadMessages > 0) countUnreadMessages - 1
-                else 0
-            )
-        }
-
-        if (conditionRepository.getStatusExistenceMessages()) {
-            messageRepository.getTimeLastMessage()?.let { lastMessageTime ->
-                val messages = messageRepository.uploadMessages(
-                    uuid = visitor.uuid,
-                    startTime = lastMessageTime + 1,
-                    endTime = 0,
-                    updateReadPoint = updateReadPoint,
-                    syncMessagesAcrossDevices = syncMessagesAcrossDevicesWrapper,
-                    allMessageLoaded = {},
-                    notAllMessageLoaded = {},
-                    getPersonPreview = { personId ->
-                        personInteractor.getPersonPreview(personId, visitor.token)
-                    },
-                    getFileInfo = messageRepository::getFileInfo,
-                    updateSearchMessagePosition = updateSearchMessagePosition
-                )
-                messageRepository.updatePersonNames(messages, personInteractor::updatePersonName)
-                messageRepository.mergeNewMessages()
-            }
-        } else {
-//            if (remoteReadMessageTime == 0L) {
-                val messages = messageRepository.uploadMessages(
-                    uuid = visitor.uuid,
-                    startTime = null,
-                    endTime = 0,
-                    updateReadPoint = updateReadPoint,
-                    syncMessagesAcrossDevices = syncMessagesAcrossDevices,
-                    allMessageLoaded = {
-                        eventStateHistoryLoaded(true)
-                        conditionRepository.saveFlagAllHistoryLoaded(true)
-                    },
-                    notAllMessageLoaded = {
-                        eventStateHistoryLoaded(false)
-                        conditionRepository.saveFlagAllHistoryLoaded(false)
-                    },
-                    getPersonPreview = { personId ->
-                        personInteractor.getPersonPreview(personId, visitor.token)
-                    },
-                    getFileInfo = messageRepository::getFileInfo,
-                    updateSearchMessagePosition = updateSearchMessagePosition
-                )
-                messageRepository.updatePersonNames(messages, personInteractor::updatePersonName)
-                messageRepository.mergeNewMessages()
-//            } else {
-//                val messages = messageRepository.uploadMessages(
-//                    uuid = visitor.uuid,
-//                    token = visitor.token,
-//                    startTime = remoteReadMessageTime,
-//                    endTime = 0,
-//                    updateReadPoint = updateReadPoint,
-//                    syncMessagesAcrossDevices = syncMessagesAcrossDevices,
-//                    returnedEmptyPool = {},
-//                    getPersonPreview = { personId ->
-//                        personInteractor.getPersonPreview(personId, visitor.token)
-//                    },
-//                    getFileInfo = messageRepository::getFileInfo
-//                )
-//                messageRepository.updatePersonNames(messages, personInteractor::updatePersonName)
-//                messageRepository.mergeNewMessages()
-//            }
-        }
-    }
-
-    fun updateSizeMessage(id: String, height: Int, width: Int) {
-        messageRepository.updateSizeMessage(id, height, width)
-    }
-
-    fun removeAllInfoMessages() {
-        messageRepository.removeAllInfoMessages()
-    }
-
-    fun setUpdateSearchMessagePosition(updateSearchMessagePosition: suspend (insertedMessages: List<MessageEntity>) -> Unit) {
-        messageRepository.setUpdateSearchMessagePosition(updateSearchMessagePosition)
-    }
-}
\ No newline at end of file
Index: chat/src/test/java/com/crafttalk/chat/ExampleUnitTest.kt
===================================================================
diff --git a/chat/src/test/java/com/crafttalk/chat/ExampleUnitTest.kt b/chat/src/test/java/com/crafttalk/chat/ExampleUnitTest.kt
deleted file mode 100644
--- a/chat/src/test/java/com/crafttalk/chat/ExampleUnitTest.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,17 +0,0 @@
-package com.crafttalk.chat
-
-import org.junit.Test
-
-import org.junit.Assert.*
-
-/**
- * Example local unit test, which will execute on the development machine (host).
- *
- * See [testing documentation](http://d.android.com/tools/testing).
- */
-class ExampleUnitTest {
-    @Test
-    fun addition_isCorrect() {
-        assertEquals(4, 2 + 2)
-    }
-}
Index: chat/src/main/res/values/attrs.xml
===================================================================
diff --git a/chat/src/main/res/values/attrs.xml b/chat/src/main/res/values/attrs.xml
deleted file mode 100644
--- a/chat/src/main/res/values/attrs.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,245 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-
-    <declare-styleable name="ChatView">
-
-        <attr name="timeDelayed" format="integer"/>
-        <attr name="delay_download_document" format="integer"/>
-
-        <attr name="color_main" format="color"/>
-        <attr name="color_bg_user_message" format="color"/>
-        <attr name="color_bg_user_media_file_message" format="color"/>
-        <attr name="color_bg_operator_message" format="color"/>
-        <attr name="color_bg_operator_media_file_message" format="color"/>
-        <attr name="color_text_user_message" format="color"/>
-        <attr name="color_text_operator_message" format="color"/>
-        <attr name="color_text_operator_action" format="color"/>
-        <attr name="color_borders_operator_action" format="color"/>
-        <attr name="color_bg_operator_action" format="color"/>
-        <attr name="color_bg_operator_selected_action" format="color"/>
-        <attr name="color_text_operator_selected_action" format="color"/>
-        <attr name="color_text_operator_button" format="color"/>
-        <attr name="color_primary_text_operator_button" format="color"/>
-        <attr name="color_secondary_text_operator_button" format="color"/>
-        <attr name="color_negative_text_operator_button" format="color"/>
-        <attr name="color_text_operator_selected_button" format="color"/>
-        <attr name="color_primary_text_operator_selected_button" format="color"/>
-        <attr name="color_secondary_text_operator_selected_button" format="color"/>
-        <attr name="color_negative_text_operator_selected_button" format="color"/>
-        <attr name="color_file_name" format="color"/>
-        <attr name="color_user_file_name" format="color"/>
-        <attr name="color_operator_file_name" format="color"/>
-        <attr name="color_file_size" format="color"/>
-        <attr name="color_user_file_size" format="color"/>
-        <attr name="color_operator_file_size" format="color"/>
-        <attr name="color_text_user_message_author" format="color"/>
-        <attr name="color_text_operator_message_author" format="color"/>
-        <attr name="color_user_message_time" format="color"/>
-        <attr name="color_user_file_message_time" format="color"/>
-        <attr name="color_user_gif_message_time" format="color"/>
-        <attr name="color_user_image_message_time" format="color"/>
-        <attr name="color_user_text_message_time" format="color"/>
-        <attr name="color_operator_message_time" format="color"/>
-        <attr name="color_operator_file_message_time" format="color"/>
-        <attr name="color_operator_gif_message_time" format="color"/>
-        <attr name="color_operator_image_message_time" format="color"/>
-        <attr name="color_operator_text_message_time" format="color"/>
-        <attr name="color_operator_widget_message_time" format="color"/>
-        <attr name="color_user_message_status" format="color"/>
-        <attr name="color_user_file_message_status" format="color"/>
-        <attr name="color_user_gif_message_status" format="color"/>
-        <attr name="color_user_image_message_status" format="color"/>
-        <attr name="color_user_text_message_status" format="color"/>
-        <attr name="color_text_link_operator_message" format="color"/>
-        <attr name="color_text_link_user_message" format="color"/>
-        <attr name="color_text_warning" format="color"/>
-        <attr name="color_company" format="color"/>
-        <attr name="color_text_date_grouping" format="color"/>
-        <attr name="color_text_phone_operator_message" format="color"/>
-        <attr name="color_text_phone_user_message" format="color"/>
-
-        <attr name="resource_bg_user_message" format="reference"/>
-        <attr name="resource_bg_operator_message" format="reference"/>
-        <attr name="resource_bg_operator_button" format="integer"/>
-        <attr name="resource_primary_bg_operator_button" format="integer"/>
-        <attr name="resource_secondary_bg_operator_button" format="integer"/>
-        <attr name="resource_negative_bg_operator_button" format="integer"/>
-        <attr name="resource_bg_operator_selected_button" format="integer"/>
-        <attr name="resource_primary_bg_operator_selected_button" format="integer"/>
-        <attr name="resource_secondary_bg_operator_selected_button" format="integer"/>
-        <attr name="resource_negative_bg_operator_selected_button" format="integer"/>
-
-        <attr name="drawable_progress_indeterminate" format="reference"/>
-        <attr name="drawable_attach_file" format="reference"/>
-        <attr name="drawable_send_message" format="reference"/>
-        <attr name="drawable_document_not_downloaded_icon" format="reference"/>
-        <attr name="drawable_document_downloading_icon" format="reference"/>
-        <attr name="drawable_document_downloaded_icon" format="reference"/>
-
-        <attr name="size_user_message" format="dimension"/>
-        <attr name="size_operator_message" format="dimension"/>
-        <attr name="size_operator_action" format="dimension"/>
-        <attr name="size_operator_button" format="dimension"/>
-        <attr name="size_file_name" format="dimension"/>
-        <attr name="size_user_file_name" format="dimension"/>
-        <attr name="size_operator_file_name" format="dimension"/>
-        <attr name="size_file_size" format="dimension"/>
-        <attr name="size_user_file_size" format="dimension"/>
-        <attr name="size_operator_file_size" format="dimension"/>
-        <attr name="size_user_message_author" format="dimension"/>
-        <attr name="size_operator_message_author" format="dimension"/>
-        <attr name="size_user_message_time" format="dimension"/>
-        <attr name="size_operator_message_time" format="dimension"/>
-        <attr name="size_warning" format="dimension"/>
-        <attr name="size_info" format="dimension"/>
-        <attr name="size_text_date_grouping" format="dimension"/>
-
-        <attr name="size_operator_message_author_preview" format="dimension"/>
-        <attr name="width_item_user_text_message" format="dimension"/>
-        <attr name="width_item_operator_text_message" format="dimension"/>
-        <attr name="width_item_user_file_icon_message" format="dimension"/>
-        <attr name="width_item_operator_file_icon_message" format="dimension"/>
-        <attr name="width_item_user_file_preview_warning_message" format="dimension"/>
-        <attr name="width_item_operator_file_preview_warning_message" format="dimension"/>
-        <attr name="width_elongated_item_user_file_preview_message" format="dimension"/>
-        <attr name="width_elongated_item_operator_file_preview_message" format="dimension"/>
-        <attr name="height_elongated_item_user_file_preview_message" format="dimension"/>
-        <attr name="height_elongated_item_operator_file_preview_message" format="dimension"/>
-        <attr name="width_item_user_text_message_in_percent" format="float"/>
-        <attr name="width_item_operator_text_message_in_percent" format="float"/>
-        <attr name="width_item_user_file_icon_message_in_percent" format="float"/>
-        <attr name="width_item_operator_file_icon_message_in_percent" format="float"/>
-        <attr name="width_item_user_file_preview_warning_message_in_percent" format="float"/>
-        <attr name="width_item_operator_file_preview_warning_message_in_percent" format="float"/>
-        <attr name="width_elongated_item_user_file_preview_message_in_percent" format="float"/>
-        <attr name="width_elongated_item_operator_file_preview_message_in_percent" format="float"/>
-        <attr name="height_elongated_item_user_file_preview_message_in_percent" format="float"/>
-        <attr name="height_elongated_item_operator_file_preview_message_in_percent" format="float"/>
-        <attr name="horizontal_spacing_operator_button" format="dimension"/>
-        <attr name="vertical_spacing_operator_button" format="dimension"/>
-
-        <attr name="rounded_media_file_preview_message" format="dimension"/>
-        <attr name="rounded_gif_file_preview_message" format="dimension"/>
-        <attr name="rounded_top_left_user_media_file_preview_message" format="dimension"/>
-        <attr name="rounded_top_right_user_media_file_preview_message" format="dimension"/>
-        <attr name="rounded_bottom_left_user_media_file_preview_message" format="dimension"/>
-        <attr name="rounded_bottom_right_user_media_file_preview_message" format="dimension"/>
-        <attr name="rounded_top_left_user_gif_file_preview_message" format="dimension"/>
-        <attr name="rounded_top_right_user_gif_file_preview_message" format="dimension"/>
-        <attr name="rounded_bottom_left_user_gif_file_preview_message" format="dimension"/>
-        <attr name="rounded_bottom_right_user_gif_file_preview_message" format="dimension"/>
-        <attr name="rounded_top_left_operator_media_file_preview_message" format="dimension"/>
-        <attr name="rounded_top_right_operator_media_file_preview_message" format="dimension"/>
-        <attr name="rounded_bottom_left_operator_media_file_preview_message" format="dimension"/>
-        <attr name="rounded_bottom_right_operator_media_file_preview_message" format="dimension"/>
-        <attr name="rounded_top_left_operator_gif_file_preview_message" format="dimension"/>
-        <attr name="rounded_top_right_operator_gif_file_preview_message" format="dimension"/>
-        <attr name="rounded_bottom_left_operator_gif_file_preview_message" format="dimension"/>
-        <attr name="rounded_bottom_right_operator_gif_file_preview_message" format="dimension"/>
-
-        <attr name="resource_font_family_all_text" format="integer"/>
-        <attr name="resource_font_family_user_message" format="integer"/>
-        <attr name="resource_font_family_operator_message" format="integer"/>
-        <attr name="resource_font_family_operator_action" format="integer"/>
-        <attr name="resource_font_family_operator_button" format="integer"/>
-        <attr name="resource_font_family_file_info" format="integer"/>
-        <attr name="resource_font_family_message_author" format="integer"/>
-        <attr name="resource_font_family_message_time" format="integer"/>
-        <attr name="resource_font_family_message_date" format="integer"/>
-
-        <!--indentation-->
-        <attr name="margin_start_media_file" format="dimension"/>
-        <attr name="margin_end_media_file" format="dimension"/>
-        <attr name="margin_top_media_file" format="dimension"/>
-        <attr name="margin_bottom_media_file" format="dimension"/>
-
-        <!--elements UI-->
-        <attr name="company_name" format="string"/>
-        <attr name="show_company_name" format="boolean"/>
-        <attr name="show_internet_connection_state" format="boolean"/>
-        <attr name="show_upper_limiter" format="boolean"/>
-        <attr name="show_starting_progress" format="boolean"/>
-        <attr name="show_user_message_author" format="boolean"/>
-        <attr name="show_user_message_status" format="boolean"/>
-        <attr name="show_chat_state" format="boolean"/>
-
-        <!--file download button-->
-        <attr name="media_file_download_mode" format="enum">
-            <enum name="ONLY_IN_VIEWER" value="0"/>
-            <enum name="ONLY_IN_CHAT" value="1"/>
-            <enum name="All_PLACES" value="2"/>
-        </attr>
-        <attr name="color_user_file_message_download" format="reference"/>
-        <attr name="color_operator_file_message_download" format="reference"/>
-        <attr name="size_user_file_message_download" format="dimension"/>
-        <attr name="size_operator_file_message_download" format="dimension"/>
-        <attr name="background_user_file_message_download" format="reference"/>
-        <attr name="background_operator_file_message_download" format="reference"/>
-
-        <!--replied-->
-        <attr name="reply_enable" format="boolean"/>
-        <attr name="drawable_reply_message" format="reference"/>
-        <attr name="color_barrier_user_replied_message" format="color"/>
-        <attr name="color_barrier_operator_replied_message" format="color"/>
-        <attr name="color_text_user_replied_message" format="color"/>
-        <attr name="color_text_operator_replied_message" format="color"/>
-        <attr name="color_user_replied_file_name" format="color"/>
-        <attr name="color_operator_replied_file_name" format="color"/>
-        <attr name="color_user_replied_file_size" format="color"/>
-        <attr name="color_operator_replied_file_size" format="color"/>
-        <attr name="size_user_replied_message" format="dimension"/>
-        <attr name="size_operator_replied_message" format="dimension"/>
-        <attr name="size_user_replied_file_name" format="dimension"/>
-        <attr name="size_operator_replied_file_name" format="dimension"/>
-        <attr name="size_user_replied_file_size" format="dimension"/>
-        <attr name="size_operator_replied_file_size" format="dimension"/>
-
-        <attr name="layout_item_user_text_message" format="reference"/>
-        <attr name="layout_item_user_image_message" format="reference"/>
-        <attr name="layout_item_user_gif_message" format="reference"/>
-        <attr name="layout_item_user_file_message" format="reference"/>
-        <attr name="layout_item_user_union_message" format="reference"/>
-        <attr name="layout_item_operator_text_message" format="reference"/>
-        <attr name="layout_item_operator_image_message" format="reference"/>
-        <attr name="layout_item_operator_gif_message" format="reference"/>
-        <attr name="layout_item_operator_file_message" format="reference"/>
-        <attr name="layout_item_operator_union_message" format="reference"/>
-        <attr name="layout_item_transfer_message" format="reference"/>
-        <attr name="layout_item_info_message" format="reference"/>
-        <attr name="layout_item_widget_message" format="reference"/>
-
-        <!--feedback-->
-        <attr name="delay_feedback_screen_appears" format="integer"/>
-        <attr name="color_feedback_title" format="color"/>
-        <attr name="size_feedback_title" format="dimension"/>
-        <attr name="color_feedback_star" format="color"/>
-
-        <!--voice input-->
-        <attr name="show_voice_input" format="boolean"/>
-        <attr name="delay_voice_input_post_recording" format="integer"/>
-        <attr name="delay_voice_input_between_recurring_warnings" format="integer"/>
-        <attr name="drawable_voice_input_mic_on" format="reference"/>
-        <attr name="drawable_voice_input_mic_off" format="reference"/>
-
-        <!--search-->
-        <attr name="enable_search" format="boolean"/>
-        <attr name="enable_auto_search" format="boolean"/>
-        <attr name="color_select_search_text" format="color"/>
-        <attr name="color_current_select_search_text" format="color"/>
-        <attr name="color_search_coincidence_text" format="color"/>
-        <attr name="background_search_switch" format="color"/>
-        <attr name="color_search_top" format="color"/>
-        <attr name="color_search_bottom" format="color"/>
-        <attr name="size_text_search_coincidence" format="dimension"/>
-
-        <!--warning-->
-        <attr name="title_success_download_file_warning" format="string"/>
-        <attr name="color_success_download_file_warning" format="color"/>
-        <attr name="background_success_download_file_warning" format="color"/>
-        <attr name="title_fail_download_file_warning" format="string"/>
-        <attr name="color_fail_download_file_warning" format="color"/>
-        <attr name="background_fail_download_file_warning" format="color"/>
-
-    </declare-styleable>
-
-</resources>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/utils/AuthType.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/utils/AuthType.kt b/chat/src/main/java/com/crafttalk/chat/utils/AuthType.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/utils/AuthType.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,6 +0,0 @@
-package com.crafttalk.chat.utils
-
-enum class AuthType {
-    AUTH_WITHOUT_FORM,
-    AUTH_WITH_FORM
-}
\ No newline at end of file
Index: chat/src/main/res/values/styles.xml
===================================================================
diff --git a/chat/src/main/res/values/styles.xml b/chat/src/main/res/values/styles.xml
deleted file mode 100644
--- a/chat/src/main/res/values/styles.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-
-    <style name="ThemeFullscreen" parent="Theme.AppCompat">
-        <item name="android:windowBackground">@color/com_crafttalk_chat_black</item>
-        <item name="android:colorBackground">@color/com_crafttalk_chat_black</item>
-        <item name="android:windowFullscreen">false</item>
-        <item name="windowNoTitle">true</item>
-        <item name="android:windowContentOverlay">@null</item>
-    </style>
-
-</resources>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/DisplayableUIObject.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/DisplayableUIObject.kt b/chat/src/main/java/com/crafttalk/chat/presentation/DisplayableUIObject.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/DisplayableUIObject.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,11 +0,0 @@
-package com.crafttalk.chat.presentation
-
-enum class DisplayableUIObject {
-    NOTHING,
-    SYNCHRONIZATION,
-    CHAT,
-    FORM_AUTH,
-    WARNING,
-    OPERATOR_START_WRITE_MESSAGE,
-    OPERATOR_STOP_WRITE_MESSAGE
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/entity/internet/InternetConnectionState.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/entity/internet/InternetConnectionState.kt b/chat/src/main/java/com/crafttalk/chat/domain/entity/internet/InternetConnectionState.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/entity/internet/InternetConnectionState.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,7 +0,0 @@
-package com.crafttalk.chat.domain.entity.internet
-
-enum class InternetConnectionState {
-    NO_INTERNET,
-    HAS_INTERNET,
-    RECONNECT
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/entity/file/TypeFile.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/entity/file/TypeFile.kt b/chat/src/main/java/com/crafttalk/chat/domain/entity/file/TypeFile.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/entity/file/TypeFile.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,7 +0,0 @@
-package com.crafttalk.chat.domain.entity.file
-
-enum class TypeFile(val value: String) {
-    FILE("application/*"),
-    IMAGE("image/*"),
-    GIF("image/gif")
-}
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_ic_hourglass.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_ic_hourglass.xml b/chat/src/main/res/drawable/com_crafttalk_chat_ic_hourglass.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_ic_hourglass.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,10 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="24dp"
-    android:height="24dp"
-    android:viewportWidth="24"
-    android:viewportHeight="24"
-    android:tint="?attr/colorControlNormal">
-  <path
-      android:fillColor="@android:color/white"
-      android:pathData="M18,22l-0.01,-6L14,12l3.99,-4.01L18,2H6v6l4,4l-4,3.99V22H18zM8,7.5V4h8v3.5l-4,4L8,7.5z"/>
-</vector>
Index: chat/src/main/res/layout/com_crafttalk_chat_bottom_sheet_file_viewer_item.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_bottom_sheet_file_viewer_item.xml b/chat/src/main/res/layout/com_crafttalk_chat_bottom_sheet_file_viewer_item.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_bottom_sheet_file_viewer_item.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,27 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:background="?attr/selectableItemBackground"
-    android:orientation="horizontal"
-    android:padding="16dp">
-
-    <ImageView
-        android:id="@+id/icon"
-        android:layout_width="24dp"
-        android:layout_height="24dp"
-        android:layout_gravity="center_vertical"
-        android:layout_marginEnd="16dp"
-        android:contentDescription="@null" />
-
-    <TextView
-        android:id="@+id/description"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_gravity="center_vertical"
-        android:gravity="center_vertical"
-        android:textColor="@android:color/black"
-        android:textSize="16sp" />
-
-</LinearLayout>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/entity/file/File.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/entity/file/File.kt b/chat/src/main/java/com/crafttalk/chat/domain/entity/file/File.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/entity/file/File.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,8 +0,0 @@
-package com.crafttalk.chat.domain.entity.file
-
-import android.net.Uri
-
-data class File(
-    val uri: Uri,
-    val type: TypeFile
-)
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_ic_attach_file.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_ic_attach_file.xml b/chat/src/main/res/drawable/com_crafttalk_chat_ic_attach_file.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_ic_attach_file.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,15 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="24dp"
-    android:height="24dp"
-    android:viewportWidth="478.354"
-    android:viewportHeight="478.354">
-    <path
-        android:fillColor="#FF000000"
-        android:pathData="M462.854,224.022L248.397,438.461c-53.216,53.19-139.781,53.19-192.984,0c-53.219-53.214-53.219-139.779,0-192.993
-		L269.851,31.053c41.379-41.404,108.72-41.404,150.126,0c41.369,41.371,41.369,108.717,0,150.089L248.751,352.315
-		c-14.26,14.482-33.313,22.478-53.676,22.565c-40.674,0.178-76.26-35.357-76.111-76.11c0.072-20.315,8.116-39.386,22.568-53.657
-		L312.737,73.934l21.441,21.44L162.621,266.908c-8.545,8.56-13.285,19.863-13.329,31.983c-0.105,24.433,21.235,45.779,45.667,45.667
-		c12.099-0.032,23.457-4.77,31.998-13.329l171.575-171.531c29.557-29.554,29.557-77.648,0-107.208
-		c-29.589-29.554-77.679-29.554-107.235,0L76.854,266.908c-41.388,41.369-41.388,108.715,0,150.116
-		c41.374,41.374,108.717,41.374,150.103,0l214.462-214.442L462.854,224.022z"/>
-</vector>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/ChatView.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/ChatView.kt b/chat/src/main/java/com/crafttalk/chat/presentation/ChatView.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/ChatView.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,1183 +0,0 @@
-package com.crafttalk.chat.presentation
-
-import android.Manifest
-import android.annotation.SuppressLint
-import android.app.DownloadManager
-import android.content.*
-import android.content.res.TypedArray
-import android.graphics.PorterDuff
-import android.graphics.drawable.Drawable
-import android.net.Uri
-import android.os.Bundle
-import android.speech.RecognitionListener
-import android.speech.RecognizerIntent
-import android.speech.SpeechRecognizer
-import android.speech.SpeechRecognizer.*
-import android.text.Editable
-import android.text.SpannableString
-import android.text.TextWatcher
-import android.util.AttributeSet
-import android.util.Log
-import android.util.TypedValue
-import android.view.*
-import android.widget.*
-import androidx.activity.result.ActivityResultLauncher
-import androidx.core.content.ContextCompat
-import androidx.core.graphics.drawable.DrawableCompat
-import androidx.core.view.isVisible
-import androidx.fragment.app.Fragment
-import androidx.lifecycle.LifecycleOwner
-import androidx.lifecycle.LiveData
-import androidx.paging.PagedList
-import androidx.recyclerview.widget.ItemTouchHelper
-import androidx.recyclerview.widget.LinearLayoutManager
-import androidx.recyclerview.widget.LinearSmoothScroller
-import androidx.recyclerview.widget.RecyclerView
-import androidx.recyclerview.widget.RecyclerView.SmoothScroller
-import com.crafttalk.chat.R
-import com.crafttalk.chat.domain.entity.auth.Visitor
-import com.crafttalk.chat.domain.entity.file.File
-import com.crafttalk.chat.domain.entity.file.TypeFile
-import com.crafttalk.chat.domain.entity.internet.InternetConnectionState
-import com.crafttalk.chat.domain.interactors.SearchItem
-import com.crafttalk.chat.initialization.Chat
-import com.crafttalk.chat.presentation.ChatViewModel.Companion.DELAY_RENDERING_SCROLL_BTN
-import com.crafttalk.chat.presentation.ChatViewModel.Companion.MAX_COUNT_MESSAGES_NEED_SCROLLED_BEFORE_APPEARANCE_BTN_SCROLL
-import com.crafttalk.chat.presentation.adapters.AdapterListMessages
-import com.crafttalk.chat.presentation.custom_views.custom_snackbar.WarningSnackbar
-import com.crafttalk.chat.presentation.feature.file_viewer.BottomSheetFileViewer
-import com.crafttalk.chat.presentation.feature.file_viewer.Option
-import com.crafttalk.chat.presentation.feature.view_picture.ShowImageDialog
-import com.crafttalk.chat.presentation.helper.downloaders.downloadResource
-import com.crafttalk.chat.presentation.helper.extensions.*
-import com.crafttalk.chat.presentation.helper.file_viewer_helper.FileViewerHelper
-import com.crafttalk.chat.presentation.helper.file_viewer_helper.gellery.PickFileContract
-import com.crafttalk.chat.presentation.helper.file_viewer_helper.gellery.TakePicture
-import com.crafttalk.chat.presentation.helper.permission.requestPermissionWithAction
-import com.crafttalk.chat.presentation.helper.ui.hideSoftKeyboard
-import com.crafttalk.chat.presentation.model.*
-import com.crafttalk.chat.utils.ChatAttr
-import com.crafttalk.chat.utils.ChatParams
-import com.crafttalk.chat.utils.TypeFailUpload
-import com.redmadrobot.inputmask.MaskedTextChangedListener
-import kotlinx.android.synthetic.main.com_crafttalk_chat_include_replied_message.view.*
-import kotlinx.android.synthetic.main.com_crafttalk_chat_include_reply_preview.view.*
-import kotlinx.android.synthetic.main.com_crafttalk_chat_include_search.view.*
-import kotlinx.android.synthetic.main.com_crafttalk_chat_include_search_switch.view.*
-import kotlinx.android.synthetic.main.com_crafttalk_chat_layout_auth.view.*
-import kotlinx.android.synthetic.main.com_crafttalk_chat_layout_chat.view.*
-import kotlinx.android.synthetic.main.com_crafttalk_chat_layout_chat.view.upload_history_btn
-import kotlinx.android.synthetic.main.com_crafttalk_chat_layout_user_feedback.view.*
-import kotlinx.android.synthetic.main.com_crafttalk_chat_layout_warning.view.*
-import kotlinx.android.synthetic.main.com_crafttalk_chat_view_host.view.*
-import java.util.*
-import javax.inject.Inject
-import kotlin.math.ceil
-
-class ChatView: RelativeLayout, View.OnClickListener, BottomSheetFileViewer.Listener {
-
-    @Inject
-    lateinit var viewModel: ChatViewModel
-    private var liveDataMessages: LiveData<PagedList<MessageModel>>? = null
-    private var searchLiveDataMessages: LiveData<PagedList<MessageModel>>? = null
-    private var searchItemLast: SearchItem? = null
-    private var isFirstUploadMessages = false
-    private lateinit var adapterListMessages: AdapterListMessages
-    private val fileViewerHelper = FileViewerHelper()
-    private lateinit var parentFragment: Fragment
-    private val inflater: LayoutInflater by lazy {
-        context.getSystemService(
-            Context.LAYOUT_INFLATER_SERVICE
-        ) as LayoutInflater
-    }
-    private var speechRecognizer: SpeechRecognizer? = null
-    private var speechRecognizerIntent: Intent? = null
-    private val smoothScroller: SmoothScroller = object : LinearSmoothScroller(context) {
-        override fun getVerticalSnapPreference(): Int {
-            return SNAP_TO_START
-        }
-    }
-    private var permissionListener: ChatPermissionListener = object : ChatPermissionListener {
-        override fun requestedPermissions(permissions: Array<String>, messages: Array<String>, action: () -> Unit) {
-            permissions.forEachIndexed { index, permission ->
-                WarningSnackbar.make(
-                    view = chat_place,
-                    title = messages[index]
-                )?.show()
-            }
-        }
-    }
-    private var downloadFileListener: DownloadFileListener = object : DownloadFileListener {
-        override fun successDownload() {
-            if (ShowImageDialog.isOpen()) {
-                ShowImageDialog.showWarning(true)
-            } else {
-                WarningSnackbar.make(
-                    view = chat_place,
-                    title = ChatAttr.getInstance().titleSuccessDownloadFileWarning,
-                    iconRes = R.drawable.com_crafttalk_chat_ic_file_download_done,
-                    textColor = ChatAttr.getInstance().colorSuccessDownloadFileWarning,
-                    backgroundColor = ChatAttr.getInstance().backgroundSuccessDownloadFileWarning
-                )?.show()
-            }
-        }
-        override fun failDownload() {
-            if (ShowImageDialog.isOpen()) {
-                ShowImageDialog.showWarning(false)
-            } else {
-                WarningSnackbar.make(
-                    view = chat_place,
-                    title = ChatAttr.getInstance().titleFailDownloadFileWarning
-                )?.show()
-            }
-        }
-        override fun failDownload(title: String) {
-            if (ShowImageDialog.isOpen()) {
-                ShowImageDialog.showWarning(false)
-            } else {
-                WarningSnackbar.make(
-                    view = chat_place,
-                    title = title
-                )?.show()
-            }
-        }
-    }
-    private var stateStartingProgressListener: StateStartingProgressListener? = null
-    private var searchListener: SearchListener = object : SearchListener {
-        override fun start() {
-            search_input.setCompoundDrawablesWithIntrinsicBounds(
-                ContextCompat.getDrawable(context, R.drawable.com_crafttalk_chat_ic_hourglass),
-                search_input.compoundDrawables[1],
-                search_input.compoundDrawables[2],
-                search_input.compoundDrawables[3]
-            )
-        }
-        override fun stop() {
-            search_input.compoundDrawables
-            search_input.setCompoundDrawablesWithIntrinsicBounds(
-                ContextCompat.getDrawable(context, R.drawable.com_crafttalk_chat_ic_search),
-                search_input.compoundDrawables[1],
-                search_input.compoundDrawables[2],
-                search_input.compoundDrawables[3]
-            )
-        }
-    }
-    private var downloadID: Long? = null
-    private val defaultUploadFileListener: UploadFileListener by lazy {
-        object : UploadFileListener {
-            override fun successUpload() {}
-            override fun failUpload(message: String, type: TypeFailUpload) {
-                WarningSnackbar.make(
-                    view = chat_place,
-                    typeFailUpload = type
-                )?.show()
-            }
-        }
-    }
-    private val onDownloadComplete: BroadcastReceiver = object : BroadcastReceiver() {
-        override fun onReceive(context: Context?, intent: Intent?) {
-            val id: Long? = intent?.getLongExtra(DownloadManager.EXTRA_DOWNLOAD_ID, -1)
-            if (downloadID != null && id != null && id != -1L && downloadID == id) {
-                downloadFileListener.successDownload()
-            }
-        }
-    }
-    private var takePicture: ActivityResultLauncher<Uri>? = null
-    private var pickImage: ActivityResultLauncher<Pair<TypeFile, TypeMultiple>>? = null
-    private var pickFile: ActivityResultLauncher<Pair<TypeFile, TypeMultiple>>? = null
-
-    private var methodGetWidgetView: (widgetId: String) -> View? = { null }
-    private var methodFindItemsViewOnWidget: (widgetId: String, widget: View, mapView: MutableMap<String, View>) -> Unit = { _,_,_ -> }
-    private var methodBindWidget: (widgetId: String, message: SpannableString?, mapView: MutableMap<String, View>, payload: Any) -> Unit = { _, _, _, _ -> }
-
-    fun setMethodGetPayloadTypeWidget(methodGetPayloadTypeWidget: (widgetId: String) -> Class<out Any>?) {
-        ChatParams.methodGetPayloadTypeWidget = methodGetPayloadTypeWidget
-    }
-
-    fun setMethodGetWidgetView(methodGetWidgetView: (widgetId: String) -> View?) {
-        this.methodGetWidgetView = methodGetWidgetView
-    }
-
-    fun setMethodFindItemsViewOnWidget(methodFindItemsViewOnWidget: (widgetId: String, widgetView: View, mapView: MutableMap<String, View>) -> Unit) {
-        this.methodFindItemsViewOnWidget = methodFindItemsViewOnWidget
-    }
-
-    fun setMethodBindWidget(methodBindWidget: (widgetId: String, message: SpannableString?, mapView: MutableMap<String, View>, payload: Any) -> Unit) {
-        this.methodBindWidget = methodBindWidget
-    }
-
-    fun clickButtonInWidget(actionId: String) {
-        viewModel.selectButtonInWidget(actionId)
-    }
-
-    fun setOnPermissionListener(listener: ChatPermissionListener) {
-        this.permissionListener = listener
-    }
-
-    fun setOnDownloadFileListener(listener: DownloadFileListener) {
-        this.downloadFileListener = listener
-    }
-
-    fun setOnInternetConnectionListener(listener: ChatInternetConnectionListener) {
-        viewModel.clientInternetConnectionListener = listener
-    }
-
-    fun setOnChatStateListener(listener: ChatStateListener) {
-        viewModel.chatStateListener = listener
-    }
-
-    fun setMergeHistoryListener(listener: MergeHistoryListener) {
-        viewModel.mergeHistoryListener = listener
-    }
-
-    fun setSearchListener(listener: SearchListener) {
-        searchListener = listener
-    }
-
-    fun mergeHistory() {
-        viewModel.mergeHistoryListener.startMerge()
-        viewModel.uploadOldMessages(
-            uploadHistoryComplete = viewModel.mergeHistoryListener::endMerge,
-            executeAnyway = true
-        )
-    }
-
-    fun setOnUploadFileListener(listener: UploadFileListener) {
-        viewModel.uploadFileListener = listener
-    }
-
-    fun setOnStateStartingProgressListener(listener: StateStartingProgressListener) {
-        this.stateStartingProgressListener = listener
-    }
-
-    constructor(context: Context, attrs: AttributeSet) : super(context, attrs) {
-        inflater.inflate(R.layout.com_crafttalk_chat_view_host, this, true)
-
-        val attrArr = context.obtainStyledAttributes(attrs, R.styleable.ChatView)
-        customizationChat(attrArr)
-        attrArr.recycle()
-    }
-
-    constructor(context: Context, attrs: AttributeSet, defStyleAttr: Int) : super(context, attrs, defStyleAttr)
-
-    @SuppressLint("ResourceType")
-    private fun customizationChat(attrArr: TypedArray) {
-        val chatAttr = ChatAttr.getInstance(attrArr, context)
-        // set color
-        send_message.setColorFilter(chatAttr.colorMain, PorterDuff.Mode.SRC_IN)
-        sign_in.setBackgroundDrawable(chatAttr.drawableBackgroundSignInButton)
-
-        warningConnection.setTextColor(chatAttr.colorTextInternetConnectionWarning)
-        state_action_operator.setTextColor(chatAttr.colorTextInfo)
-        company_name.setTextColor(chatAttr.colorTextInfo)
-        search_coincidence.setTextColor(chatAttr.colorTextSearchCoincidence)
-        // set dimension
-        warningConnection.setTextSize(TypedValue.COMPLEX_UNIT_PX, chatAttr.sizeTextInternetConnectionWarning)
-        state_action_operator.setTextSize(TypedValue.COMPLEX_UNIT_PX, chatAttr.sizeTextInfoText)
-        company_name.setTextSize(TypedValue.COMPLEX_UNIT_PX, chatAttr.sizeTextInfoText)
-        search_coincidence.setTextSize(TypedValue.COMPLEX_UNIT_PX, chatAttr.sizeTextSearchCoincidenceText)
-        // set bg
-        upper_limiter.setBackgroundColor(chatAttr.colorMain)
-        lower_limit.setBackgroundColor(chatAttr.colorMain)
-        ContextCompat.getDrawable(context, R.drawable.com_crafttalk_chat_background_count_unread_message)?.let { unwrappedDrawable ->
-            val wrappedDrawable: Drawable = DrawableCompat.wrap(unwrappedDrawable)
-            DrawableCompat.setTint(wrappedDrawable, chatAttr.colorMain)
-            count_unread_message.background = wrappedDrawable
-        }
-        search_switch_place.setBackgroundColor(chatAttr.backgroundSearchSwitch)
-        // set company name
-        company_name.text = chatAttr.companyName
-        company_name.visibility = if (chatAttr.showCompanyName) View.VISIBLE else View.GONE
-        warningConnection.visibility = if (chatAttr.showInternetConnectionState) View.INVISIBLE else View.GONE
-        infoChatState.visibility = if (chatAttr.showChatState) View.INVISIBLE else View.GONE
-        upper_limiter.visibility = if (chatAttr.showUpperLimiter) View.VISIBLE else View.GONE
-        ChatParams.enableSearch = chatAttr.enableSearch
-        search.visibility = when {
-            chatAttr.showInternetConnectionState || chatAttr.showChatState -> View.INVISIBLE
-            else -> View.GONE
-        }
-        voice_input.visibility = if (chatAttr.showVoiceInput) View.VISIBLE else View.GONE
-        feedback_title.apply {
-            setTextColor(ChatAttr.getInstance().colorFeedbackTitle)
-            setTextSize(TypedValue.COMPLEX_UNIT_PX, ChatAttr.getInstance().sizeFeedbackTitle)
-        }
-        feedback_star_1.setColorFilter(ChatAttr.getInstance().colorFeedbackStar)
-        feedback_star_2.setColorFilter(ChatAttr.getInstance().colorFeedbackStar)
-        feedback_star_3.setColorFilter(ChatAttr.getInstance().colorFeedbackStar)
-        feedback_star_4.setColorFilter(ChatAttr.getInstance().colorFeedbackStar)
-        feedback_star_5.setColorFilter(ChatAttr.getInstance().colorFeedbackStar)
-        search_top.setColorFilter(ChatAttr.getInstance().colorSearchTop)
-        search_bottom.setColorFilter(ChatAttr.getInstance().colorSearchBottom)
-
-        chatAttr.drawableProgressIndeterminate?.let {
-            loading.indeterminateDrawable = it
-            warning_loading.indeterminateDrawable = it.constantState?.newDrawable()?.mutate()
-        }
-        send_message.setImageDrawable(ChatAttr.getInstance().drawableAttachFile)
-        voice_input.setImageDrawable(ChatAttr.getInstance().drawableVoiceInputMicOff)
-    }
-
-    @SuppressLint("ClickableViewAccessibility")
-    private fun setAllListeners() {
-        phone_user.apply {
-            val maskedListener = MaskedTextChangedListener(context.getString(R.string.com_crafttalk_chat_russian_phone_format), this)
-            addTextChangedListener(maskedListener)
-            onFocusChangeListener = maskedListener
-        }
-        sign_in.setOnClickListener(this)
-        send_message.setOnClickListener(this)
-        voice_input.setOnTouchListener { view, motionEvent ->
-            if (motionEvent.action == MotionEvent.ACTION_UP) {
-                delayOnLifecycle(ChatAttr.getInstance().delayVoiceInputPostRecording) {
-                    speechRecognizer?.stopListening()
-                }
-            }
-            if (motionEvent.action == MotionEvent.ACTION_DOWN) {
-                voice_input.setImageDrawable(ChatAttr.getInstance().drawableVoiceInputMicOn)
-                speechRecognizerIntent?.let { intent ->
-                    speechRecognizer?.startListening(intent)
-                }
-            }
-            true
-        }
-        warning_refresh.setOnClickListener(this)
-        scroll_to_down.setOnClickListener(this)
-        entry_field.addTextChangedListener(object : TextWatcher {
-            override fun afterTextChanged(s: Editable?) {
-                if ((s ?: "").isEmpty()) {
-                    send_message.setImageDrawable(ChatAttr.getInstance().drawableAttachFile)
-                } else {
-                    send_message.setImageDrawable(ChatAttr.getInstance().drawableSendMessage)
-                }
-            }
-            override fun beforeTextChanged(s: CharSequence?, start: Int, count: Int, after: Int) {}
-            override fun onTextChanged(s: CharSequence?, start: Int, before: Int, count: Int) {}
-        })
-        list_with_message.addOnScrollListener(object : RecyclerView.OnScrollListener() {
-            override fun onScrolled(recyclerView: RecyclerView, dx: Int, dy: Int) {
-                super.onScrolled(recyclerView, dx, dy)
-                list_with_message.delayOnLifecycle(DELAY_RENDERING_SCROLL_BTN) {
-                    val indexLastVisible = (list_with_message.layoutManager as? LinearLayoutManager)?.findFirstVisibleItemPosition() ?: return@delayOnLifecycle
-
-                    if (indexLastVisible == -1) {
-                        viewModel.scrollToDownVisible.value = false
-                        return@delayOnLifecycle
-                    }
-                    viewModel.scrollToDownVisible.value = (indexLastVisible > MAX_COUNT_MESSAGES_NEED_SCROLLED_BEFORE_APPEARANCE_BTN_SCROLL) ||
-                            ((indexLastVisible == MAX_COUNT_MESSAGES_NEED_SCROLLED_BEFORE_APPEARANCE_BTN_SCROLL) &&
-                            adapterListMessages.currentList?.get(0) !is InfoMessageItem)
-                    viewModel.readMessage(adapterListMessages.getMessageByPosition(indexLastVisible))
-                }
-            }
-        })
-        close_feedback.setOnClickListener(this)
-        search.setOnClickListener(this)
-        search_cancel.setOnClickListener(this)
-        search_input.setOnTouchListener { view, motionEvent ->
-            val drawableLeft = 0
-            val drawableRight = 2
-
-            if(motionEvent.action == MotionEvent.ACTION_UP) {
-                if(motionEvent.x + left >= (search_input.right - search_input.compoundDrawables[drawableRight].bounds.width() - search_input.compoundDrawablePadding)) {
-                    search_input.text.clear()
-                } else if (motionEvent.x < (search_input.paddingLeft + search_input.compoundDrawables[drawableLeft].bounds.width())) {
-                    searchText(search_input.text.toString())
-                }
-            }
-            false
-        }
-        if (ChatAttr.getInstance().enableAutoSearch) {
-            search_input.addTextChangedListener(object : TextWatcher {
-                override fun afterTextChanged(s: Editable?) {
-                    searchText(search_input.text.toString())
-                }
-                override fun beforeTextChanged(s: CharSequence?, start: Int, count: Int, after: Int) {}
-                override fun onTextChanged(s: CharSequence?, start: Int, before: Int, count: Int) {}
-            })
-        }
-        search_top.setOnClickListener(this)
-        search_bottom.setOnClickListener(this)
-        upload_history_btn.setOnClickListener(this)
-        reply_preview_close.setOnClickListener(this)
-        setFeedbackListener()
-    }
-
-    @SuppressLint("ClickableViewAccessibility")
-    private fun setFeedbackListener() {
-        user_feedback.setOnTouchListener { view, motionEvent ->
-            var countStars = ceil((motionEvent.rawX - feedback_star_1.left) / (feedback_star_2.left - feedback_star_1.left).toDouble()).toInt()
-            if (countStars < 1) countStars = 1
-            if (countStars > 5) countStars = 5
-            when {
-                motionEvent.action == MotionEvent.ACTION_MOVE -> giveFeedback(countStars, false)
-                motionEvent.action == MotionEvent.ACTION_UP && countStars > 0 -> giveFeedback(countStars, true)
-            }
-            true
-        }
-    }
-
-    private fun setListMessages() {
-        adapterListMessages = AdapterListMessages(
-            downloadOrOpenDocument = viewModel::downloadOrOpenDocument,
-            openImage = viewModel::openImage,
-            openGif = viewModel::openGif,
-            downloadFile = { fileName, fileUrl, fileType ->
-                downloadResource(
-                    context,
-                    fileName,
-                    fileUrl,
-                    fileType,
-                    downloadFileListener,
-                    { permissions: Array<String>, actionsAfterObtainingPermission: () -> Unit ->
-                        permissionListener.requestedPermissions(
-                            permissions,
-                            arrayOf(context.getString(R.string.com_crafttalk_chat_requested_permission_download)),
-                            actionsAfterObtainingPermission
-                        )
-                    },
-                    { id -> downloadID = id }
-                )
-            },
-            selectAction = viewModel::selectAction,
-            selectButton = viewModel::selectButton,
-            selectReplyMessage = viewModel::selectReplyMessage,
-            getWidgetView = methodGetWidgetView,
-            findItemsViewOnWidget = methodFindItemsViewOnWidget,
-            bindWidget = methodBindWidget,
-            updateData = viewModel::updateData
-        ).apply {
-            list_with_message.adapter = this
-            if (ChatAttr.getInstance().replyEnable) {
-                ItemTouchHelper(MessageSwipeController {
-                    viewModel.replyMessage.value = it
-                }).attachToRecyclerView(list_with_message)
-            }
-        }
-    }
-
-    fun onViewCreated(
-        fragment: Fragment,
-        lifecycleOwner: LifecycleOwner
-    ) {
-        Chat.getSdkComponent().createChatComponent()
-            .parentFragment(fragment)
-            .build()
-            .inject(this)
-        this.parentFragment = fragment
-
-        if (viewModel.uploadFileListener == null) viewModel.uploadFileListener = defaultUploadFileListener
-        context.registerReceiver(onDownloadComplete, IntentFilter(DownloadManager.ACTION_DOWNLOAD_COMPLETE))
-        settingVoiceInput()
-
-        takePicture = fragment.registerForActivityResult(TakePicture()) { uri ->
-            uri?.let { viewModel.sendFile(File(it, TypeFile.IMAGE)) }
-        }
-        pickImage = fragment.registerForActivityResult(PickFileContract()) { listUri ->
-            if (listUri.size > FileViewerHelper.PHOTOS_LIMIT) {
-                viewModel.sendFiles(listUri.slice(0 until FileViewerHelper.PHOTOS_LIMIT).map { File(it, TypeFile.IMAGE) })
-                FileViewerHelper.showFileLimitExceededMessage(fragment, FileViewerHelper.PHOTOS_LIMIT_EXCEEDED)
-            } else viewModel.sendFiles(listUri.map { File(it, TypeFile.IMAGE) })
-        }
-        pickFile = fragment.registerForActivityResult(PickFileContract()) { listUri ->
-            if (listUri.size > FileViewerHelper.DOCUMENTS_LIMIT) {
-                viewModel.sendFiles(listUri.slice(0 until FileViewerHelper.DOCUMENTS_LIMIT).map { File(it, TypeFile.FILE) })
-                FileViewerHelper.showFileLimitExceededMessage(fragment, FileViewerHelper.DOCUMENTS_LIMIT_EXCEEDED)
-            } else viewModel.sendFiles(listUri.map { File(it, TypeFile.FILE) })
-        }
-
-        setAllListeners()
-        setListMessages()
-
-        viewModel.internetConnectionState.observe(lifecycleOwner) { state ->
-            when (state) {
-                InternetConnectionState.NO_INTERNET -> {
-                    if (ChatAttr.getInstance().showChatState) {
-                        infoChatState.visibility = View.INVISIBLE
-                    }
-                    if (ChatAttr.getInstance().showInternetConnectionState) {
-                        warningConnection.visibility = if (search_place.isVisible) View.GONE else View.VISIBLE
-                    }
-                    sign_in.isClickable = true
-                }
-                InternetConnectionState.HAS_INTERNET, InternetConnectionState.RECONNECT -> {
-                    if (ChatAttr.getInstance().showInternetConnectionState) {
-                        warningConnection.visibility = View.INVISIBLE
-                    }
-                }
-            }
-        }
-        viewModel.displayableUIObject.observe(lifecycleOwner) {
-            Log.d("CHAT_VIEW", "displayableUIObject - ${it};")
-            when (it) {
-                DisplayableUIObject.NOTHING -> {
-                    chat_place.visibility = View.GONE
-                    search_place.visibility = View.GONE
-                    search.visibility = when (search.visibility) {
-                        View.GONE -> View.GONE
-                        else -> View.INVISIBLE
-                    }
-                    auth_form.visibility = View.GONE
-                    warning.visibility = View.GONE
-                    if (ChatAttr.getInstance().showStartingProgress) {
-                        startProgressBar(loading)
-                    }
-                    stateStartingProgressListener?.start()
-                }
-                DisplayableUIObject.SYNCHRONIZATION -> {
-                    auth_form.visibility = View.GONE
-                    warning.visibility = View.GONE
-                    search_place.visibility = View.GONE
-                    chat_place.visibility = View.VISIBLE
-                    search.visibility = when {
-                        search.visibility == View.GONE -> View.GONE
-                        ChatParams.enableSearch == true -> View.VISIBLE
-                        else -> View.INVISIBLE
-                    }
-                    if (ChatAttr.getInstance().showStartingProgress) {
-                        stopProgressBar(loading)
-                    }
-                    stateStartingProgressListener?.stop()
-                    if (ChatAttr.getInstance().showChatState) {
-                        infoChatState.visibility = if (search_place.isVisible) View.GONE else View.VISIBLE
-                    }
-                }
-                DisplayableUIObject.CHAT -> {
-                    auth_form.visibility = View.GONE
-                    warning.visibility = View.GONE
-                    search_place.visibility = View.GONE
-                    chat_place.visibility = View.VISIBLE
-                    search.visibility = when {
-                        search.visibility == View.GONE -> View.GONE
-                        ChatParams.enableSearch == true -> View.VISIBLE
-                        else -> View.INVISIBLE
-                    }
-                    if (ChatAttr.getInstance().showStartingProgress) {
-                        stopProgressBar(loading)
-                    }
-                    stateStartingProgressListener?.stop()
-                    if (ChatAttr.getInstance().showChatState) {
-                        infoChatState.visibility = View.INVISIBLE
-                    }
-                }
-                DisplayableUIObject.FORM_AUTH -> {
-                    chat_place.visibility = View.GONE
-                    search_place.visibility = View.GONE
-                    search.visibility = when (search.visibility) {
-                        View.GONE -> View.GONE
-                        else -> View.INVISIBLE
-                    }
-                    warning.visibility = View.GONE
-                    auth_form.visibility = View.VISIBLE
-                    if (ChatAttr.getInstance().showStartingProgress) {
-                        stopProgressBar(loading)
-                    }
-                    stateStartingProgressListener?.stop()
-                }
-                DisplayableUIObject.WARNING -> {
-                    chat_place.visibility = View.GONE
-                    search_place.visibility = View.GONE
-                    search.visibility = when (search.visibility) {
-                        View.GONE -> View.GONE
-                        else -> View.INVISIBLE
-                    }
-                    auth_form.visibility = View.GONE
-                    warning.visibility = View.VISIBLE
-                    warning_refresh.visibility = View.VISIBLE
-                    stopProgressBar(warning_loading)
-                    if (ChatAttr.getInstance().showStartingProgress) {
-                        stopProgressBar(loading)
-                    }
-                    stateStartingProgressListener?.stop()
-                    if (ChatAttr.getInstance().showChatState) {
-                        infoChatState.visibility = View.INVISIBLE
-                    }
-                }
-                DisplayableUIObject.OPERATOR_START_WRITE_MESSAGE -> {
-                    state_action_operator.visibility = View.VISIBLE
-                }
-                DisplayableUIObject.OPERATOR_STOP_WRITE_MESSAGE -> {
-                    state_action_operator.visibility = View.GONE
-                }
-            }
-        }
-
-        viewModel.countUnreadMessages.observe(lifecycleOwner) {
-            if (it <= 0) {
-                count_unread_message.visibility = View.GONE
-            } else {
-                count_unread_message.text = if (it < 10) it.toString() else "9+"
-                count_unread_message.visibility = if (scroll_to_down.visibility == View.GONE) View.GONE else View.VISIBLE
-            }
-        }
-        viewModel.scrollToDownVisible.observe(lifecycleOwner) {
-            if (it) {
-                scroll_to_down.visibility = View.VISIBLE
-                if (viewModel.countUnreadMessages.value != null && viewModel.countUnreadMessages.value != 0) {
-                    count_unread_message.visibility = View.VISIBLE
-                } else {
-                    count_unread_message.visibility = View.GONE
-                }
-            } else {
-                count_unread_message.visibility = View.GONE
-                scroll_to_down.visibility = View.GONE
-            }
-        }
-        viewModel.showSearchNavigate.observe(lifecycleOwner) {
-            search_top.visibility = if (it) View.VISIBLE else View.GONE
-            search_bottom.visibility = if (it) View.VISIBLE else View.GONE
-        }
-        viewModel.enabledSearchTop.observe(lifecycleOwner) {
-            search_top.isEnabled = it
-            if (it) {
-                search_top.setColorFilter(ContextCompat.getColor(context, R.color.com_crafttalk_chat_black))
-            } else {
-                search_top.setColorFilter(ContextCompat.getColor(context, R.color.com_crafttalk_chat_gray_bdbdbd))
-            }
-        }
-        viewModel.enabledSearchBottom.observe(lifecycleOwner) {
-            search_bottom.isEnabled = it
-            if (it) {
-                search_bottom.setColorFilter(ContextCompat.getColor(context, R.color.com_crafttalk_chat_black))
-            } else {
-                search_bottom.setColorFilter(ContextCompat.getColor(context, R.color.com_crafttalk_chat_gray_bdbdbd))
-            }
-        }
-        viewModel.searchCoincidenceText.observe(lifecycleOwner) {
-            search_switch_place.visibility = if (it.isNotEmpty()) View.VISIBLE else View.GONE
-            search_coincidence.text = it
-            searchListener.stop()
-        }
-        viewModel.searchScrollToPosition.observe(lifecycleOwner) { searchItem ->
-            searchLiveDataMessages?.removeObservers(lifecycleOwner)
-            val searchText = viewModel.searchText ?: return@observe
-            searchLiveDataMessages = viewModel.uploadSearchMessages(searchText, searchItem)
-            searchLiveDataMessages?.observe(lifecycleOwner, { pagedList ->
-                adapterListMessages.submitList(pagedList!!) {
-                    if (searchItem != null && searchItem != searchItemLast) {
-                        val position = searchItem.scrollPosition ?: return@submitList
-                        delayOnLifecycle(300) {
-                            scroll(position + 1, true)
-                        }
-                    }
-                    searchItemLast = searchItem
-                    viewModel.updateCountUnreadMessages()
-                }
-            })
-        }
-        viewModel.feedbackContainerVisible.observe(lifecycleOwner) {
-            user_feedback.visibility = if (it) {
-                View.VISIBLE
-            } else {
-                View.GONE
-            }
-        }
-        viewModel.openDocument.observe(lifecycleOwner) {
-            it ?: return@observe
-            val (file, isSuccess) = it
-            if (!isSuccess) {
-                downloadFileListener.failDownload(context.getString(R.string.com_crafttalk_chat_download_file_fail))
-                return@observe
-            }
-            file ?: return@observe
-            viewModel.openDocument.value = null
-
-            val uri: Uri = fileViewerHelper.getUriForFile(context, file)
-            val documentIntent = Intent(Intent.ACTION_VIEW).apply {
-                setDataAndType(uri, fileViewerHelper.getMimeType(context, uri))
-                flags = Intent.FLAG_GRANT_READ_URI_PERMISSION
-            }
-
-            try {
-                val intentChooser = Intent.createChooser(documentIntent, context.getString(R.string.com_crafttalk_chat_string_chooser_open_file_action_view))
-                if (documentIntent.resolveActivity(context.packageManager) != null) {
-                    context.startActivity(intentChooser)
-                } else {
-                    downloadFileListener.failDownload(context.getString(R.string.com_crafttalk_chat_open_file_fail))
-                }
-            } catch (ex: ActivityNotFoundException) {
-                downloadFileListener.failDownload(context.getString(R.string.com_crafttalk_chat_open_file_fail))
-            }
-        }
-        viewModel.mergeHistoryBtnVisible.observe(lifecycleOwner) {
-            if (it) {
-                upload_history_btn.visibility = View.VISIBLE
-            } else {
-                upload_history_btn.visibility = View.GONE
-            }
-        }
-        viewModel.mergeHistoryProgressVisible.observe(lifecycleOwner) {
-            if (it) {
-                startProgressBar(upload_history_loading)
-            } else {
-                stopProgressBar(upload_history_loading)
-            }
-        }
-
-        viewModel.uploadMessagesForUser.observe(lifecycleOwner) { liveDataPagedList ->
-            liveDataPagedList ?: return@observe
-            liveDataMessages?.removeObservers(lifecycleOwner)
-            liveDataMessages = liveDataPagedList
-            isFirstUploadMessages = true
-            liveDataMessages?.observe(lifecycleOwner, { pagedList ->
-                pagedList ?: return@observe
-                if (viewModel.searchText != null && viewModel.searchScrollToPosition.value != null) return@observe
-
-                val countItemsLastVersion = adapterListMessages.itemCount
-                adapterListMessages.submitList(pagedList) {
-                    if (isFirstUploadMessages) {
-                        viewModel.initialLoadKey.run(list_with_message::scrollToPosition)
-                        viewModel.updateCountUnreadMessages()
-                    } else {
-                        val indexLastVisible = (list_with_message.layoutManager as? LinearLayoutManager)?.findFirstVisibleItemPosition()
-                        if (
-                            indexLastVisible != null &&
-                            indexLastVisible != -1 &&
-                            indexLastVisible < MAX_COUNT_MESSAGES_NEED_SCROLLED_BEFORE_APPEARANCE_BTN_SCROLL &&
-                            countItemsLastVersion != pagedList.size
-                        ) {
-                            viewModel.updateCountUnreadMessages(pagedList.getOrNull(0)?.timestamp) { countUnreadMessages ->
-                                delayOnLifecycle(300) {
-                                    if (viewModel.searchText == null) {
-                                        scroll(countUnreadMessages)
-                                    }
-                                }
-                            }
-                        } else {
-                            viewModel.updateCountUnreadMessages()
-                        }
-                    }
-                    isFirstUploadMessages = false
-                }
-            })
-        }
-        viewModel.replyMessage.observe(lifecycleOwner) {
-            if (it == null) {
-                reply_preview.visibility = View.GONE
-                return@observe
-            }
-            reply_preview.visibility = View.VISIBLE
-
-            val replyPreviewBarrier = reply_preview.findViewById<View>(R.id.replied_barrier)
-            val replyPreviewMessage = reply_preview.findViewById<TextView>(R.id.replied_message)
-            val replyPreviewFileInfo = reply_preview.findViewById<ViewGroup>(R.id.replied_file_info)
-            val replyPreviewFileIcon = reply_preview.findViewById<ImageView>(R.id.file_icon)
-            val replyPreviewProgressDownload = reply_preview.findViewById<ProgressBar>(R.id.progress_download)
-            val replyPreviewFileName = reply_preview.findViewById<TextView>(R.id.file_name)
-            val replyPreviewFileSize = reply_preview.findViewById<TextView>(R.id.file_size)
-            val replyPreviewMediaFile = reply_preview.findViewById<ImageView>(R.id.replied_media_file)
-            val replyPreviewMediaFileWarning = reply_preview.findViewById<ViewGroup>(R.id.replied_media_file_warning)
-
-            replyPreviewBarrier?.setBackgroundColor(ChatAttr.getInstance().colorMain)
-            when (it) {
-                is TextMessageItem, is UnionMessageItem -> {
-                    replyPreviewMessage.visibility = View.VISIBLE
-                    replyPreviewFileInfo.visibility = View.GONE
-                    replyPreviewMediaFile.visibility = View.GONE
-                    replyPreviewMediaFileWarning.visibility = View.GONE
-                    replyPreviewMessage.setMessageText(
-                        textMessage = (it as? TextMessageItem)?.message ?: (it as? UnionMessageItem)?.message,
-                        maxWidthTextMessage = (ChatAttr.getInstance().widthScreenInPx * 0.8f).toInt(),
-                        colorTextMessage = ContextCompat.getColor(context, R.color.com_crafttalk_chat_gray_707070),
-                        sizeTextMessage = ChatAttr.getInstance().sizeTextUserRepliedMessage,
-                        resFontFamilyMessage = ChatAttr.getInstance().resFontFamilyUserMessage
-                    )
-                }
-                is ImageMessageItem, is GifMessageItem -> {
-                    replyPreviewMessage.visibility = View.GONE
-                    replyPreviewFileInfo.visibility = View.GONE
-                    replyPreviewMediaFile.apply {
-                        visibility = View.VISIBLE
-                        settingMediaFile(true)
-                        loadMediaFile(
-                            id = it.id,
-                            mediaFile = (it as? ImageMessageItem)?.image ?: (it as? GifMessageItem)?.gif,
-                            updateData = viewModel::updateData,
-                            isUserMessage = true,
-                            isUnionMessage = true,
-                            warningContainer = replyPreviewMediaFileWarning,
-                            maxHeight = 200,
-                            maxWidth = 200
-                        )
-                    }
-                }
-                is FileMessageItem -> {
-                    replyPreviewMessage.visibility = View.GONE
-                    replyPreviewProgressDownload.visibility = View.INVISIBLE
-                    replyPreviewMediaFile.visibility = View.GONE
-                    replyPreviewMediaFileWarning.visibility = View.GONE
-                    replyPreviewFileInfo.visibility = View.VISIBLE
-                    replyPreviewFileIcon.setFileIcon(it.document.typeDownloadProgress)
-                    replyPreviewFileIcon.setColorFilter(ContextCompat.getColor(context, R.color.com_crafttalk_chat_gray_707070), PorterDuff.Mode.SRC_IN)
-                    replyPreviewFileName.setFileName(
-                        file = it.document,
-                        maxWidthTextFileName = (ChatAttr.getInstance().widthScreenInPx * 0.6f).toInt(),
-                        colorTextFileName = ContextCompat.getColor(context, R.color.com_crafttalk_chat_gray_707070),
-                        sizeTextFileName = ChatAttr.getInstance().sizeUserRepliedFileName
-                    )
-                    replyPreviewFileSize.setFileSize(
-                        file = it.document,
-                        maxWidthTextFileSize = (ChatAttr.getInstance().widthScreenInPx * 0.6f).toInt(),
-                        colorTextFileSize = ContextCompat.getColor(context, R.color.com_crafttalk_chat_gray_707070),
-                        sizeTextFileSize = ChatAttr.getInstance().sizeUserRepliedFileSize
-                    )
-                }
-            }
-        }
-        viewModel.replyMessagePosition.observe(lifecycleOwner) {
-            it ?: return@observe
-            smoothScroller.targetPosition = adapterListMessages.itemCount - it
-            list_with_message.layoutManager?.startSmoothScroll(smoothScroller)
-        }
-    }
-
-    private fun settingVoiceInput() {
-        speechRecognizer = createSpeechRecognizer(context)
-
-        speechRecognizerIntent = Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH).apply {
-            putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, RecognizerIntent.LANGUAGE_MODEL_FREE_FORM)
-            putExtra(RecognizerIntent.EXTRA_LANGUAGE, Locale.getDefault())
-        }
-
-        speechRecognizer?.setRecognitionListener(object : RecognitionListener {
-            var idLastWarning: Int? = null
-            var timestampLastWarning: Long? = null
-
-            override fun onReadyForSpeech(bundle: Bundle) {
-                entry_field.text.clear()
-                entry_field.hint = resources.getString(R.string.com_crafttalk_chat_voice_input_entry_field_hint)
-                entry_field.performHapticFeedback(
-                    HapticFeedbackConstants.KEYBOARD_TAP,
-                    HapticFeedbackConstants.FLAG_IGNORE_GLOBAL_SETTING
-                )
-            }
-
-            override fun onBeginningOfSpeech() {}
-            override fun onEndOfSpeech() {}
-
-            override fun onRmsChanged(v: Float) {}
-            override fun onBufferReceived(bytes: ByteArray) {}
-
-            override fun onError(i: Int) {
-                if (
-                    idLastWarning != null &&
-                    timestampLastWarning != null &&
-                    idLastWarning == i &&
-                    System.currentTimeMillis() - (timestampLastWarning ?: 0L) <= ChatAttr.getInstance().delayVoiceInputBetweenRecurringWarnings
-                ) {
-                    idLastWarning = i
-                    timestampLastWarning = System.currentTimeMillis()
-                } else {
-                    val warningTitle = when (i) {
-                        ERROR_AUDIO, ERROR_CLIENT, ERROR_NO_MATCH -> {
-                            if (idLastWarning in listOf(ERROR_AUDIO, ERROR_CLIENT, ERROR_NO_MATCH))
-                                resources.getString(R.string.com_crafttalk_chat_voice_input_instruction_warning_title)
-                            else
-                                resources.getString(R.string.com_crafttalk_chat_voice_input_failed_attempt_warning_title)
-                        }
-                        ERROR_NETWORK, ERROR_NETWORK_TIMEOUT -> resources.getString(R.string.com_crafttalk_chat_voice_input_network_warning_title)
-                        ERROR_RECOGNIZER_BUSY, ERROR_SERVER -> resources.getString(R.string.com_crafttalk_chat_voice_input_service_warning_title)
-                        ERROR_SPEECH_TIMEOUT -> resources.getString(R.string.com_crafttalk_chat_voice_input_instruction_warning_title)
-                        ERROR_INSUFFICIENT_PERMISSIONS -> {
-                            requestPermissionWithAction(
-                                context = context,
-                                permissions = arrayOf(Manifest.permission.RECORD_AUDIO),
-                                noPermission = { permissions: Array<String>, actionsAfterObtainingPermission: () -> Unit ->
-                                    permissionListener.requestedPermissions(
-                                        permissions,
-                                        arrayOf(context.getString(R.string.com_crafttalk_chat_voice_input_permission_warning_title)),
-                                        actionsAfterObtainingPermission
-                                    )
-                                }
-                            )
-                            null
-                        }
-                        else -> resources.getString(R.string.com_crafttalk_chat_voice_input_failed_attempt_warning_title)
-                    }
-                    idLastWarning = i
-                    timestampLastWarning = System.currentTimeMillis()
-
-                    warningTitle?.let { title ->
-                        WarningSnackbar.make(
-                            view = entry_field,
-                            parentViewGroup = warning_input_container_cl,
-                            title = title
-                        )?.show()
-                    }
-                }
-
-                entry_field.text.clear()
-                entry_field.hint = resources.getString(R.string.com_crafttalk_chat_entry_field_hint)
-                voice_input.setImageDrawable(ChatAttr.getInstance().drawableVoiceInputMicOff)
-            }
-            override fun onResults(bundle: Bundle) {
-                idLastWarning = null
-
-                bundle.getStringArrayList(RESULTS_RECOGNITION)?.get(0)?.let { data ->
-                    entry_field.setText(data)
-                    entry_field.setSelection(data.length)
-                }
-                entry_field.hint = resources.getString(R.string.com_crafttalk_chat_entry_field_hint)
-                voice_input.setImageDrawable(ChatAttr.getInstance().drawableVoiceInputMicOff)
-            }
-
-            override fun onPartialResults(bundle: Bundle) {}
-            override fun onEvent(i: Int, bundle: Bundle) {}
-        })
-
-    }
-
-    fun onResume(visitor: Visitor? = null) {
-        viewModel.onStartChatView(visitor)
-    }
-
-    fun onStop() {
-        viewModel.onStop()
-    }
-
-    fun onDestroyView() {
-        speechRecognizer?.destroy()
-    }
-
-    private fun checkerObligatoryFields(fields: List<EditText>): Boolean {
-        var result = true
-        fields.forEach{
-            if (it.text.trim().isEmpty()) {
-                it.setBackgroundResource(R.drawable.com_crafttalk_chat_background_error_field_auth_form)
-                result = false
-            } else {
-                it.setBackgroundResource(R.drawable.com_crafttalk_chat_background_normal_field_auth_form)
-            }
-        }
-        return result
-    }
-
-    private fun startProgressBar(progressBar: ProgressBar) {
-        progressBar.visibility = View.VISIBLE
-    }
-
-    private fun stopProgressBar(progressBar: ProgressBar) {
-        progressBar.visibility = View.GONE
-    }
-
-    override fun onClick(view: View) {
-        when(view.id) {
-            R.id.upload_history_btn -> {
-                mergeHistory()
-            }
-            R.id.sign_in -> {
-                if (checkerObligatoryFields(listOf(first_name_user, last_name_user, phone_user))) {
-                    hideSoftKeyboard(this)
-                    if (ChatAttr.getInstance().showStartingProgress) {
-                        startProgressBar(loading)
-                    }
-                    stateStartingProgressListener?.start()
-                    val firstName = first_name_user.text.toString()
-                    val lastName = last_name_user.text.toString()
-                    val phone = phone_user.text.toString()
-                    viewModel.registration(firstName, lastName, phone)
-                    sign_in.isClickable = false
-                }
-            }
-            R.id.send_message -> {
-                val message = entry_field.text.toString()
-                when {
-                    message.trim().isNotEmpty() -> {
-                        hideSoftKeyboard(this)
-                        if (viewModel.searchText == null) scroll(0)
-                        viewModel.sendMessage(message, viewModel.replyMessage.value?.id)
-                        viewModel.replyMessage.value = null
-                        entry_field.text.clear()
-                    }
-                    message.isEmpty() -> {
-                        send_message.isClickable = false
-                        BottomSheetFileViewer.Builder()
-                            .add(R.menu.com_crafttalk_chat_options)
-                            .setListener(this)
-                            .show(parentFragment.parentFragmentManager)
-                    }
-                    else -> {
-                        viewModel.replyMessage.value = null
-                        hideSoftKeyboard(this)
-                        entry_field.text.clear()
-                    }
-                }
-            }
-            R.id.reply_preview_close -> {
-                viewModel.replyMessage.value = null
-            }
-            R.id.warning_refresh -> {
-                startProgressBar(warning_loading)
-                warning_refresh.visibility = View.INVISIBLE
-                viewModel.reload()
-            }
-            R.id.scroll_to_down -> {
-                val countUnreadMessages = viewModel.countUnreadMessages.value ?: return
-                scroll(countUnreadMessages)
-            }
-            R.id.close_feedback -> {
-                viewModel.feedbackContainerVisible.value = false
-                feedback_star_1.setImageResource(R.drawable.com_crafttalk_chat_ic_star_outline)
-                feedback_star_2.setImageResource(R.drawable.com_crafttalk_chat_ic_star_outline)
-                feedback_star_3.setImageResource(R.drawable.com_crafttalk_chat_ic_star_outline)
-                feedback_star_4.setImageResource(R.drawable.com_crafttalk_chat_ic_star_outline)
-                feedback_star_5.setImageResource(R.drawable.com_crafttalk_chat_ic_star_outline)
-            }
-            R.id.search -> {
-                warningConnection.visibility = View.GONE
-                infoChatState.visibility = View.GONE
-                search.visibility = View.GONE
-                search_place.visibility = View.VISIBLE
-                hideSoftKeyboard(this)
-            }
-            R.id.search_cancel -> {
-                search_place.visibility = View.GONE
-                warningConnection.visibility = View.GONE
-                infoChatState.visibility = View.INVISIBLE
-                search.visibility = View.VISIBLE
-                onSearchCancelClick()
-            }
-            R.id.search_top -> viewModel.onSearchTopClick()
-            R.id.search_bottom -> viewModel.onSearchBottomClick()
-        }
-    }
-
-    private fun scroll(countUnreadMessages: Int, isSearchScroll: Boolean = false) {
-        Log.d("SEARCH_LOG", "scroll countUnreadMessages: ${countUnreadMessages}; isSearchScroll: $isSearchScroll;")
-        fun scrollToDesiredPosition(position: Int, actionScroll: (position: Int) -> Unit) {
-            if (adapterListMessages.currentList?.getOrNull(position) == null) {
-                list_with_message.smoothScrollToPosition(position)
-            } else {
-                actionScroll(position)
-            }
-        }
-        val isExist = (adapterListMessages.currentList ?: return).getOrNull(countUnreadMessages) != null
-        val position = when {
-            countUnreadMessages <= 0 -> 0
-            else -> countUnreadMessages - 1
-        }
-        val indexLastVisible = (list_with_message.layoutManager as? LinearLayoutManager)?.findFirstVisibleItemPosition() ?: return
-
-        when {
-            isSearchScroll -> scrollToDesiredPosition(position, list_with_message::scrollToPosition)
-            isExist && indexLastVisible >= 20 -> scrollToDesiredPosition(position, list_with_message::scrollToPosition)
-            isExist && indexLastVisible < 20 -> scrollToDesiredPosition(position, list_with_message::smoothScrollToPosition)
-            !isExist -> scrollToDesiredPosition(position, list_with_message::scrollToPosition)
-        }
-    }
-
-    private fun giveFeedback(countStars: Int, isLastDecision: Boolean) {
-        when (countStars) {
-            1 -> {
-                feedback_star_1.setImageResource(R.drawable.com_crafttalk_chat_ic_star)
-                feedback_star_2.setImageResource(R.drawable.com_crafttalk_chat_ic_star_outline)
-                feedback_star_3.setImageResource(R.drawable.com_crafttalk_chat_ic_star_outline)
-                feedback_star_4.setImageResource(R.drawable.com_crafttalk_chat_ic_star_outline)
-                feedback_star_5.setImageResource(R.drawable.com_crafttalk_chat_ic_star_outline)
-            }
-            2 -> {
-                feedback_star_1.setImageResource(R.drawable.com_crafttalk_chat_ic_star)
-                feedback_star_2.setImageResource(R.drawable.com_crafttalk_chat_ic_star)
-                feedback_star_3.setImageResource(R.drawable.com_crafttalk_chat_ic_star_outline)
-                feedback_star_4.setImageResource(R.drawable.com_crafttalk_chat_ic_star_outline)
-                feedback_star_5.setImageResource(R.drawable.com_crafttalk_chat_ic_star_outline)
-            }
-            3 -> {
-                feedback_star_1.setImageResource(R.drawable.com_crafttalk_chat_ic_star)
-                feedback_star_2.setImageResource(R.drawable.com_crafttalk_chat_ic_star)
-                feedback_star_3.setImageResource(R.drawable.com_crafttalk_chat_ic_star)
-                feedback_star_4.setImageResource(R.drawable.com_crafttalk_chat_ic_star_outline)
-                feedback_star_5.setImageResource(R.drawable.com_crafttalk_chat_ic_star_outline)
-            }
-            4 -> {
-                feedback_star_1.setImageResource(R.drawable.com_crafttalk_chat_ic_star)
-                feedback_star_2.setImageResource(R.drawable.com_crafttalk_chat_ic_star)
-                feedback_star_3.setImageResource(R.drawable.com_crafttalk_chat_ic_star)
-                feedback_star_4.setImageResource(R.drawable.com_crafttalk_chat_ic_star)
-                feedback_star_5.setImageResource(R.drawable.com_crafttalk_chat_ic_star_outline)
-            }
-            5 -> {
-                feedback_star_1.setImageResource(R.drawable.com_crafttalk_chat_ic_star)
-                feedback_star_2.setImageResource(R.drawable.com_crafttalk_chat_ic_star)
-                feedback_star_3.setImageResource(R.drawable.com_crafttalk_chat_ic_star)
-                feedback_star_4.setImageResource(R.drawable.com_crafttalk_chat_ic_star)
-                feedback_star_5.setImageResource(R.drawable.com_crafttalk_chat_ic_star)
-            }
-        }
-        if (isLastDecision) {
-            user_feedback.setOnTouchListener(null)
-            viewModel.giveFeedbackOnOperator(countStars)
-            user_feedback.delayOnLifecycle(ChatAttr.getInstance().delayFeedbackScreenAppears) {
-                viewModel.feedbackContainerVisible.value = false
-                feedback_star_1.setImageResource(R.drawable.com_crafttalk_chat_ic_star_outline)
-                feedback_star_2.setImageResource(R.drawable.com_crafttalk_chat_ic_star_outline)
-                feedback_star_3.setImageResource(R.drawable.com_crafttalk_chat_ic_star_outline)
-                feedback_star_4.setImageResource(R.drawable.com_crafttalk_chat_ic_star_outline)
-                feedback_star_5.setImageResource(R.drawable.com_crafttalk_chat_ic_star_outline)
-                setFeedbackListener()
-            }
-        }
-    }
-
-    fun searchText(searchText: String) {
-        viewModel.onSearchClick(searchText, searchListener::start)
-    }
-
-    fun onSearchCancelClick() {
-        search_switch_place.visibility = View.GONE
-        search_input.text.clear()
-        scroll(0)
-        hideSoftKeyboard(this)
-        searchItemLast = null
-        viewModel.onSearchCancel()
-    }
-
-    override fun onModalOptionSelected(tag: String?, option: Option) {
-        when (option.id) {
-            R.id.document -> {
-                fileViewerHelper.pickFiles(
-                    pickFile,
-                    Pair(TypeFile.FILE, TypeMultiple.SINGLE),
-                    { permissions: Array<String>, actionsAfterObtainingPermission: () -> Unit ->
-                        permissionListener.requestedPermissions(
-                            permissions,
-                            arrayOf(context.getString(R.string.com_crafttalk_chat_requested_permission_storage)),
-                            actionsAfterObtainingPermission
-                        )
-                    },
-                    parentFragment
-                )
-            }
-            R.id.image -> {
-                fileViewerHelper.pickFiles(
-                    pickImage,
-                    Pair(TypeFile.IMAGE, TypeMultiple.SINGLE),
-                    { permissions: Array<String>, actionsAfterObtainingPermission: () -> Unit ->
-                        permissionListener.requestedPermissions(
-                            permissions,
-                            arrayOf(context.getString(R.string.com_crafttalk_chat_requested_permission_storage)),
-                            actionsAfterObtainingPermission
-                        )
-                    },
-                    parentFragment
-                )
-            }
-            R.id.camera -> {
-                fileViewerHelper.pickImageFromCamera(
-                    takePicture,
-                    { permissions: Array<String>, actionsAfterObtainingPermission: () -> Unit ->
-                        permissionListener.requestedPermissions(
-                            permissions,
-                            arrayOf(context.getString(R.string.com_crafttalk_chat_requested_permission_camera)),
-                            actionsAfterObtainingPermission
-                        )
-                    },
-                    parentFragment
-                )
-            }
-        }
-    }
-
-    override fun onCloseBottomSheet() {
-        send_message.isClickable = true
-    }
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/helper/ui/holder.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/helper/ui/holder.kt b/chat/src/main/java/com/crafttalk/chat/presentation/helper/ui/holder.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/helper/ui/holder.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,110 +0,0 @@
-package com.crafttalk.chat.presentation.helper.ui
-
-import android.view.View
-import android.view.ViewGroup
-import android.widget.ImageView
-import android.widget.ProgressBar
-import android.widget.TextView
-import com.crafttalk.chat.domain.entity.file.TypeFile
-import com.crafttalk.chat.presentation.helper.extensions.*
-import com.crafttalk.chat.presentation.model.RepliedMessageModel
-import com.crafttalk.chat.utils.ChatAttr
-
-fun bindRepliedMessage(
-    itemId: String,
-    itemRepliedMessage: RepliedMessageModel?,
-    isUserMessage: Boolean,
-    repliedMessageContainer: ViewGroup?,
-    repliedBarrier: View?,
-    repliedMessage: TextView?,
-    repliedFileInfo: ViewGroup?,
-    repliedFileIcon: ImageView?,
-    repliedProgressDownload: ProgressBar?,
-    repliedFileName: TextView?,
-    repliedFileSize: TextView?,
-    repliedMediaFile: ImageView?,
-    repliedMediaFileWarning: ViewGroup?,
-    updateData: (id: String, height: Int, width: Int) -> Unit
-) {
-    when {
-        itemRepliedMessage == null -> {
-            repliedMessageContainer?.visibility = View.GONE
-        }
-        !itemRepliedMessage.textMessage.isNullOrBlank() -> {
-            repliedMessageContainer?.visibility = View.VISIBLE
-            repliedMessage?.visibility = View.VISIBLE
-            repliedFileInfo?.visibility = View.GONE
-            repliedMediaFile?.visibility = View.GONE
-            repliedMediaFileWarning?.visibility = View.GONE
-            repliedBarrier?.setBackgroundColor(if (isUserMessage) ChatAttr.getInstance().colorBarrierUserRepliedMessage else ChatAttr.getInstance().colorBarrierOperatorRepliedMessage)
-            repliedMessage?.setMessageText(
-                textMessage = itemRepliedMessage.textMessage,
-                maxWidthTextMessage = ChatAttr.getInstance().widthItemUserTextMessage,
-                colorTextMessage = if (isUserMessage) ChatAttr.getInstance().colorTextUserRepliedMessage else ChatAttr.getInstance().colorTextOperatorRepliedMessage,
-                sizeTextMessage = if (isUserMessage) ChatAttr.getInstance().sizeTextUserRepliedMessage else ChatAttr.getInstance().sizeTextOperatorRepliedMessage,
-                resFontFamilyMessage = if (isUserMessage) ChatAttr.getInstance().resFontFamilyUserMessage else ChatAttr.getInstance().resFontFamilyOperatorMessage
-            )
-        }
-        itemRepliedMessage.file != null -> {
-            when (itemRepliedMessage.file.type) {
-                TypeFile.FILE -> {
-                    repliedMessageContainer?.visibility = View.VISIBLE
-                    repliedMessage?.visibility = View.GONE
-                    repliedMediaFile?.visibility = View.GONE
-                    repliedMediaFileWarning?.visibility = View.GONE
-                    repliedFileInfo?.visibility = View.VISIBLE
-                    repliedBarrier?.setBackgroundColor(if (isUserMessage) ChatAttr.getInstance().colorBarrierUserRepliedMessage else ChatAttr.getInstance().colorBarrierOperatorRepliedMessage)
-                    repliedProgressDownload?.setProgressDownloadFile(itemRepliedMessage.file.typeDownloadProgress)
-                    repliedFileIcon?.setFileIcon(itemRepliedMessage.file.typeDownloadProgress)
-                    repliedFileName?.setFileName(
-                        file = itemRepliedMessage.file,
-                        colorTextFileName = if (isUserMessage) ChatAttr.getInstance().colorUserRepliedFileName else ChatAttr.getInstance().colorOperatorRepliedFileName,
-                        sizeTextFileName = if (isUserMessage) ChatAttr.getInstance().sizeUserRepliedFileName else ChatAttr.getInstance().sizeOperatorRepliedFileName
-                    )
-                    repliedFileSize?.setFileSize(
-                        file = itemRepliedMessage.file,
-                        colorTextFileSize = if (isUserMessage) ChatAttr.getInstance().colorUserRepliedFileSize else ChatAttr.getInstance().colorOperatorRepliedFileSize,
-                        sizeTextFileSize = if (isUserMessage) ChatAttr.getInstance().sizeUserRepliedFileSize else ChatAttr.getInstance().sizeOperatorRepliedFileSize
-                    )
-                }
-                TypeFile.IMAGE -> {
-                    repliedMessageContainer?.visibility = View.VISIBLE
-                    repliedMessage?.visibility = View.GONE
-                    repliedFileInfo?.visibility = View.GONE
-                    repliedMediaFile?.apply {
-                        visibility = View.VISIBLE
-                        repliedBarrier?.setBackgroundColor(if (isUserMessage) ChatAttr.getInstance().colorBarrierUserRepliedMessage else ChatAttr.getInstance().colorBarrierOperatorRepliedMessage)
-                        settingMediaFile(true)
-                        loadMediaFile(
-                            id = itemId,
-                            mediaFile = itemRepliedMessage.file,
-                            updateData = updateData,
-                            isUserMessage = true,
-                            isUnionMessage = true,
-                            warningContainer = repliedMediaFileWarning
-                        )
-                    }
-                }
-                TypeFile.GIF -> {
-                    repliedMessageContainer?.visibility = View.VISIBLE
-                    repliedMessage?.visibility = View.GONE
-                    repliedFileInfo?.visibility = View.GONE
-                    repliedMediaFile?.apply {
-                        visibility = View.VISIBLE
-                        repliedBarrier?.setBackgroundColor(if (isUserMessage) ChatAttr.getInstance().colorBarrierUserRepliedMessage else ChatAttr.getInstance().colorBarrierOperatorRepliedMessage)
-                        settingMediaFile(true)
-                        loadMediaFile(
-                            id = itemId,
-                            mediaFile = itemRepliedMessage.file,
-                            updateData = updateData,
-                            isUserMessage = true,
-                            isUnionMessage = true,
-                            warningContainer = repliedMediaFileWarning,
-                            isGif = true
-                        )
-                    }
-                }
-            }
-        }
-    }
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/initialization/listeners.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/initialization/listeners.kt b/chat/src/main/java/com/crafttalk/chat/initialization/listeners.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/initialization/listeners.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,5 +0,0 @@
-package com.crafttalk.chat.initialization
-
-interface ChatMessageListener {
-    fun getNewMessages(countMessages: Int)
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/repository/IFileRepository.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/repository/IFileRepository.kt b/chat/src/main/java/com/crafttalk/chat/domain/repository/IFileRepository.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/repository/IFileRepository.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,13 +0,0 @@
-package com.crafttalk.chat.domain.repository
-
-import android.graphics.Bitmap
-import com.crafttalk.chat.domain.entity.auth.Visitor
-import com.crafttalk.chat.domain.entity.file.TypeUpload
-import com.crafttalk.chat.domain.entity.file.File as DomainFile
-import java.io.File as IOFile
-
-interface IFileRepository {
-    fun uploadFile(visitor: Visitor, file: DomainFile, type: TypeUpload, handleUploadFile: (responseCode: Int, responseMessage: String) -> Unit)
-    fun uploadMediaFile(visitor: Visitor, bitmap: Bitmap, type: TypeUpload, handleUploadFile: (responseCode: Int, responseMessage: String) -> Unit)
-    suspend fun downloadDocument(documentUrl: String, documentFile: IOFile, alternativeFile: IOFile, downloadedSuccess: suspend () -> Unit, downloadedFail: () -> Unit)
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/local/db/entity/converters/SpanStructureListConverter.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/converters/SpanStructureListConverter.kt b/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/converters/SpanStructureListConverter.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/converters/SpanStructureListConverter.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,51 +0,0 @@
-package com.crafttalk.chat.data.local.db.entity.converters
-
-import androidx.room.TypeConverter
-import com.crafttalk.chat.data.local.db.entity.deserializers.TagDeserializer
-import com.crafttalk.chat.domain.entity.tags.*
-import com.google.gson.Gson
-import com.google.gson.GsonBuilder
-import com.google.gson.reflect.TypeToken
-import java.lang.StringBuilder
-import java.lang.reflect.Type
-
-class SpanStructureListConverter {
-
-    @TypeConverter
-    fun fromSpanStructureList(tags: List<Tag>?): String {
-        tags ?: return "[]"
-        if (tags.isEmpty()) return "[]"
-
-        val gson = Gson()
-
-        val result = StringBuilder("[")
-        tags.forEach {
-            when (it) {
-                is StrikeTag -> result.append(gson.toJson(it, StrikeTag::class.java)).append(",")
-                is StrongTag -> result.append(gson.toJson(it, StrongTag::class.java)).append(",")
-                is BTag -> result.append(gson.toJson(it, BTag::class.java)).append(",")
-                is ItalicTag -> result.append(gson.toJson(it, ItalicTag::class.java)).append(",")
-                is EmTag -> result.append(gson.toJson(it, EmTag::class.java)).append(",")
-                is UrlTag -> result.append(gson.toJson(it, UrlTag::class.java)).append(",")
-                is ImageTag -> result.append(gson.toJson(it, ImageTag::class.java)).append(",")
-                is ItemListTag -> result.append(gson.toJson(it, ItemListTag::class.java)).append(",")
-                is HostListTag -> result.append(gson.toJson(it, HostListTag::class.java)).append(",")
-                is PhoneTag -> result.append(gson.toJson(it, PhoneTag::class.java)).append(",")
-            }
-        }
-        result.replace(result.length - 1, result.length, "]")
-        return result.toString()
-    }
-
-    @TypeConverter
-    fun toSpanStructureList(tags: String?): List<Tag> {
-        tags ?: return listOf()
-        if (tags == "[]") return listOf()
-
-        val type: Type = object : TypeToken<List<Tag>>() {}.type
-        val gsonBuilder = GsonBuilder()
-        gsonBuilder.registerTypeAdapter(type, TagDeserializer(Gson()))
-        return gsonBuilder.create().fromJson(tags, type)
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/res/layout/com_crafttalk_chat_item_button.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_item_button.xml b/chat/src/main/res/layout/com_crafttalk_chat_item_button.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_item_button.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout
-    android:id="@+id/item_button"
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:orientation="vertical"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content">
-
-    <TextView
-        android:id="@+id/button_text"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_gravity="center"
-        android:gravity="center"
-        android:paddingVertical="12dp"
-        android:paddingHorizontal="8dp"
-        android:fontFamily="@font/com_crafttalk_chat_ubuntu_medium"
-        android:textFontWeight="600"
-        tools:text="Событие" />
-
-</LinearLayout>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/api/rest/FileApi.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/api/rest/FileApi.kt b/chat/src/main/java/com/crafttalk/chat/data/api/rest/FileApi.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/api/rest/FileApi.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,33 +0,0 @@
-package com.crafttalk.chat.data.api.rest
-
-import com.crafttalk.chat.data.ApiParams
-import com.crafttalk.chat.domain.entity.file.NetworkBodyStructureUploadFile
-import com.crafttalk.chat.utils.ChatParams
-import okhttp3.MultipartBody
-import okhttp3.RequestBody
-import retrofit2.Call
-import retrofit2.http.*
-
-interface FileApi {
-
-    @Headers("Content-Type: application/json")
-    @POST("webchat/{clientId}/upload-file")
-    fun uploadFile(
-        @Header("Cookie") cookie: String = "webchat-${ChatParams.urlChatNameSpace}-uuid=${ChatParams.visitorUuid}",
-        @Header("ct-webchat-client-id") uuid: String = ChatParams.visitorUuid,
-        @Path("clientId") clientId: String = ChatParams.urlChatNameSpace!!,
-        @Body networkBody: NetworkBodyStructureUploadFile
-    ): Call<String>
-
-    @Multipart
-    @POST("webchat/{clientId}/upload-file")
-    fun uploadFile(
-        @Header("Cookie") cookie: String = "webchat-${ChatParams.urlChatNameSpace}-uuid=${ChatParams.visitorUuid}",
-        @Header("ct-webchat-client-id") uuidHearder: String = ChatParams.visitorUuid,
-        @Path("clientId") clientId: String = ChatParams.urlChatNameSpace!!,
-        @Part(ApiParams.FILE_NAME) fileName: RequestBody,
-        @Part(ApiParams.UUID) uuid: RequestBody,
-        @Part fileB64: MultipartBody.Part
-    ): Call<String>
-
-}
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_ic_send.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_ic_send.xml b/chat/src/main/res/drawable/com_crafttalk_chat_ic_send.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_ic_send.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,5 +0,0 @@
-<vector android:height="25dp" android:tint="#FF5454"
-    android:viewportHeight="25.0" android:viewportWidth="25.0"
-    android:width="25dp" xmlns:android="http://schemas.android.com/apk/res/android">
-    <path android:fillColor="#FF000000" android:pathData="M2.01,21L23,12 2.01,3 2,10l15,2 -15,2z"/>
-</vector>
Index: chat/src/main/java/com/crafttalk/chat/data/local/db/migrations/Migration_6_7.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/local/db/migrations/Migration_6_7.kt b/chat/src/main/java/com/crafttalk/chat/data/local/db/migrations/Migration_6_7.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/local/db/migrations/Migration_6_7.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,13 +0,0 @@
-package com.crafttalk.chat.data.local.db.migrations
-
-import androidx.room.migration.Migration
-import androidx.sqlite.db.SupportSQLiteDatabase
-import com.crafttalk.chat.data.local.db.entity.MessageEntity
-
-object Migration_6_7: Migration(6, 7) {
-    override fun migrate(database: SupportSQLiteDatabase) {
-
-        database.execSQL("ALTER TABLE ${MessageEntity.TABLE_NAME} ADD COLUMN arrival_time INTEGER DEFAULT NULL")
-
-    }
-}
\ No newline at end of file
Index: chat/src/main/res/layout/com_crafttalk_chat_item_user_gif_message.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_item_user_gif_message.xml b/chat/src/main/res/layout/com_crafttalk_chat_item_user_gif_message.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_item_user_gif_message.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,97 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:layout_marginStart="@dimen/com_crafttalk_chat_message_margin_start"
-    android:layout_marginTop="@dimen/com_crafttalk_chat_message_margin_top"
-    android:layout_marginEnd="@dimen/com_crafttalk_chat_message_margin_end"
-    android:layout_marginBottom="@dimen/com_crafttalk_chat_message_margin_bottom">
-
-    <include
-        android:id="@+id/include_date"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        layout="@layout/com_crafttalk_chat_include_date_message" />
-
-    <View
-        android:id="@+id/content_container"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        app:layout_constraintStart_toStartOf="@id/barrier_gif_start"
-        app:layout_constraintTop_toBottomOf="@id/include_date"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintBottom_toBottomOf="@id/barrier_gif_bottom"
-        tools:background="@drawable/com_crafttalk_chat_background_item_simple_user_message" />
-
-    <ImageView
-        android:id="@+id/user_gif"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:scaleType="fitXY"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/include_date"
-        tools:layout_width="150dp"
-        tools:layout_height="150dp"
-        tools:src="@tools:sample/avatars"
-        tools:padding="10dp"
-        tools:visibility="visible" />
-
-    <include
-        android:id="@+id/user_gif_warning"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        layout="@layout/com_crafttalk_chat_include_media_warning"
-        android:visibility="gone"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/include_date"
-        tools:layout_width="150dp"
-        tools:layout_height="150dp"
-        tools:visibility="gone" />
-
-    <TextView
-        android:id="@+id/download_file"
-        android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        android:text="@string/com_crafttalk_chat_download"
-        android:gravity="center"
-        android:padding="8dp"
-        android:layout_marginTop="@dimen/com_crafttalk_chat_download_btn_margin_top"
-        app:layout_constraintStart_toStartOf="@id/user_gif"
-        app:layout_constraintEnd_toEndOf="@id/user_gif"
-        app:layout_constraintTop_toBottomOf="@id/user_gif"
-        tools:visibility="visible" />
-
-    <androidx.constraintlayout.widget.Barrier
-        android:id="@+id/barrier_gif_start"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        app:barrierDirection="start"
-        app:constraint_referenced_ids="user_gif,user_gif_warning" />
-
-    <androidx.constraintlayout.widget.Barrier
-        android:id="@+id/barrier_gif_bottom"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        app:barrierDirection="bottom"
-        app:constraint_referenced_ids="user_gif,user_gif_warning" />
-
-    <androidx.constraintlayout.widget.Barrier
-        android:id="@+id/barrier_content_bottom"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        app:barrierDirection="bottom"
-        app:constraint_referenced_ids="user_gif,user_gif_warning,download_file" />
-
-    <include
-        android:id="@+id/include_message_info"
-        android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        layout="@layout/com_crafttalk_chat_include_user_message_info"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/barrier_content_bottom" />
-
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: chat/src/main/res/layout/com_crafttalk_chat_include_media_warning.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_include_media_warning.xml b/chat/src/main/res/layout/com_crafttalk_chat_include_media_warning.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_include_media_warning.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:orientation="vertical"
-    android:gravity="center">
-
-    <ImageView
-        android:layout_width="36dp"
-        android:layout_height="36dp"
-        android:src="@drawable/com_crafttalk_chat_ic_circle_warning"
-        android:rotation="180"
-        android:tint="@color/com_crafttalk_chat_default_color_info"
-        android:layout_gravity="center_horizontal" />
-
-    <TextView
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:text="@string/com_crafttalk_chat_warning_loading_media_file"
-        android:gravity="center"
-        android:layout_marginTop="8dp" />
-
-</LinearLayout>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderButtons.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderButtons.kt b/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderButtons.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderButtons.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,89 +0,0 @@
-package com.crafttalk.chat.presentation.holders
-
-import android.content.Intent
-import android.net.Uri
-import android.util.TypedValue
-import android.view.LayoutInflater
-import android.view.View
-import android.view.ViewGroup
-import android.widget.LinearLayout
-import android.widget.TextView
-import androidx.core.content.res.ResourcesCompat
-import com.crafttalk.chat.R
-import com.crafttalk.chat.domain.entity.message.NetworkButtonOperation
-import com.crafttalk.chat.presentation.base.BaseViewHolder
-import com.crafttalk.chat.presentation.model.ButtonItem
-import com.crafttalk.chat.presentation.model.ButtonsListItem
-import com.crafttalk.chat.utils.ChatAttr
-
-class HolderButtons(
-    val view: View,
-    private val hasSelectedButton: Boolean,
-    private val clickHandler: (actionId: String, buttonId: String) -> Unit
-) : BaseViewHolder<ButtonsListItem>(view) {
-
-    private val buttonsContainer: ViewGroup? = view.findViewById(R.id.item_buttons)
-
-    override fun bindTo(item: ButtonsListItem) {
-        item.buttons.forEach {
-            buttonsContainer?.addView(
-                createAndBindButton(it)
-            )
-        }
-    }
-
-    private fun createAndBindButton(item: ButtonItem): View {
-        val itemButton = LayoutInflater.from(view.context).inflate(R.layout.com_crafttalk_chat_item_button, null, false)
-        val buttonText: TextView? = itemButton.findViewById(R.id.button_text)
-
-        // set width item
-        val params = LinearLayout.LayoutParams(
-            item.width,
-            ViewGroup.LayoutParams.WRAP_CONTENT
-        )
-        params.setMargins(
-            item.marginStart,
-            item.marginTop,
-            item.marginEnd,
-            item.marginBottom
-        )
-        itemButton?.layoutParams = params
-
-        buttonText?.apply {
-            // set content
-            text = item.text
-            // set color
-            setTextColor(item.textColor)
-            // set dimension
-            setTextSize(TypedValue.COMPLEX_UNIT_PX, ChatAttr.getInstance().sizeTextOperatorButton)
-            // set font
-            ChatAttr.getInstance().resFontFamilyOperatorButton?.let {
-                typeface = ResourcesCompat.getFont(context, it)
-            }
-        }
-        // set bg
-        itemButton?.apply {
-            setBackgroundResource(item.backgroundRes)
-        }
-
-        itemButton.setOnClickListener {
-            if (hasSelectedButton) return@setOnClickListener
-            if (item.action.isEmpty()) return@setOnClickListener
-            if (item.id.isEmpty()) return@setOnClickListener
-
-            when (item.typeOperation) {
-                NetworkButtonOperation.URL -> {
-                    val intent = Intent(Intent.ACTION_VIEW, Uri.parse(item.action))
-                    intent.flags = Intent.FLAG_ACTIVITY_NEW_TASK
-                    view.context.startActivity(intent)
-                }
-                NetworkButtonOperation.ACTION -> {
-                    clickHandler(item.action, item.id)
-                }
-            }
-        }
-
-        return itemButton
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/repository/FeedbackRepository.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/repository/FeedbackRepository.kt b/chat/src/main/java/com/crafttalk/chat/data/repository/FeedbackRepository.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/repository/FeedbackRepository.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,16 +0,0 @@
-package com.crafttalk.chat.data.repository
-
-import com.crafttalk.chat.data.api.socket.SocketApi
-import com.crafttalk.chat.domain.repository.IFeedbackRepository
-import javax.inject.Inject
-
-class FeedbackRepository
-@Inject constructor(
-    private val socketApi: SocketApi
-) : IFeedbackRepository {
-
-    override fun giveFeedbackOnOperator(countStars: Int) {
-        socketApi.giveFeedbackOnOperator(countStars)
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/res/values-en/strings.xml
===================================================================
diff --git a/chat/src/main/res/values-en/strings.xml b/chat/src/main/res/values-en/strings.xml
deleted file mode 100644
--- a/chat/src/main/res/values-en/strings.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,99 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-
-    <!--    Auth-->
-    <string name="com_crafttalk_chat_auth_user_introduction">Please, introduce yourself</string>
-    <string name="com_crafttalk_chat_auth_user_first_name">Your name</string>
-    <string name="com_crafttalk_chat_auth_user_surname_name">Your surname</string>
-    <string name="com_crafttalk_chat_auth_user_phone">Your phone number</string>
-    <string name="com_crafttalk_chat_auth_sign_in">Start chat</string>
-
-    <!--    Chat-->
-    <string name="com_crafttalk_chat_stete_synchronization">Synchronization</string>
-    <string name="com_crafttalk_chat_internet_connection_warning">Waiting for network…</string>
-    <string name="com_crafttalk_chat_name_company">by CraftTalk</string>
-    <string name="com_crafttalk_chat_state_action_operator">Operator write message…</string>
-    <string name="com_crafttalk_chat_entry_field_hint">Enter your message…</string>
-
-    <!--    Message-->
-    <string name="com_crafttalk_chat_message_join">Operator %s joined the dialogue</string>
-
-    <!--    File-->
-    <string name="com_crafttalk_chat_file_size_byte">byte</string>
-    <string name="com_crafttalk_chat_file_size_Kb">Kb</string>
-    <string name="com_crafttalk_chat_file_size_Mb">Mb</string>
-    <string name="com_crafttalk_chat_file_size_Gb">Gb</string>
-
-    <!--    Warning-->
-    <string name="com_crafttalk_chat_warning_title">Error has occurred</string>
-    <string name="com_crafttalk_chat_warning_reload">Please reload the page or try again later</string>
-    <string name="com_crafttalk_chat_warning_loading_image">Error loading image</string>
-    <string name="com_crafttalk_chat_warning_loading_gif">Error loading gif</string>
-    <string name="com_crafttalk_chat_warning_loading_media_file">Error loading media file</string>
-
-    <!--    Warning snackbar-->
-    <string name="com_crafttalk_chat_warning_snackbar_not_support_type_title">Unable to load document</string>
-    <string name="com_crafttalk_chat_warning_snackbar_not_support_type_description">The download file is not allowed to be sent</string>
-    <string name="com_crafttalk_chat_warning_snackbar_large_title">Unable to load document</string>
-    <string name="com_crafttalk_chat_warning_snackbar_large_description">The download file is too large</string>
-
-    <!--    Bottom sheet file viewer-->
-    <string name="com_crafttalk_chat_bottom_sheet_file_viewer_image_from_gallery">Image</string>
-    <string name="com_crafttalk_chat_bottom_sheet_file_viewer_image_from_camera">Camera</string>
-    <string name="com_crafttalk_chat_bottom_sheet_file_viewer_document_from_gallery">Document</string>
-    <string name="com_crafttalk_chat_bottom_sheet_file_viewer_warning">You cannot attach more than %d</string>
-
-    <!--    FeedBack-->
-    <string name="com_crafttalk_chat_feedback_title">The dialogue is over. Rate the quality of service.</string>
-
-    <!--    Search-->
-    <string name="com_crafttalk_chat_search_hint">Enter text…</string>
-    <string name="com_crafttalk_chat_search_cancel">Cancel</string>
-    <string name="com_crafttalk_chat_coincidence_not_found">No matches</string>
-    <string name="com_crafttalk_chat_coincidence">%d out of %d matches</string>
-
-    <!--    Voice input-->
-    <string name="com_crafttalk_chat_voice_input_entry_field_hint">Listening…</string>
-    <string name="com_crafttalk_chat_voice_input_failed_attempt_warning_title">Couldn\'t recognize your words, try to repeat</string>
-    <string name="com_crafttalk_chat_voice_input_network_warning_title">Check your internet connection and try again</string>
-    <string name="com_crafttalk_chat_voice_input_service_warning_title">Please try again later: voice input is temporarily unavailable</string>
-    <string name="com_crafttalk_chat_voice_input_instruction_warning_title">Press and hold the microphone icon and start speaking</string>
-    <string name="com_crafttalk_chat_voice_input_permission_warning_title">You don\'t have enough permission to use voice input</string>
-
-    <!--    History-->
-    <string name="com_crafttalk_chat_upload_history">Download history</string>
-
-    <!--    Download file-->
-    <string name="com_crafttalk_chat_download_file_success">File downloaded successfully</string>
-    <string name="com_crafttalk_chat_download_file_fail">File could not be downloaded</string>
-    <string name="com_crafttalk_chat_open_file_fail">File could not be opened</string>
-    <string name="com_crafttalk_chat_download">Download</string>
-
-    <string name="com_crafttalk_chat_string_chooser_open_file_action_view">Select an application to view this file:</string>
-
-    <string name="com_crafttalk_chat_requested_permission_storage">You do not have permission to access resources!</string>
-    <string name="com_crafttalk_chat_requested_permission_camera">You do not have permission to access the camera!</string>
-    <string name="com_crafttalk_chat_requested_permission_download">You don\'t have permission to download files!</string>
-
-    <!--    Language-->
-    <string name="com_crafttalk_chat_default_language">en</string>
-    <string name="com_crafttalk_chat_default_country">UK</string>
-
-    <!--    Phone formats-->
-    <string name="com_crafttalk_chat_russian_phone_format">+7 ([000]) [000]-[00]-[00]</string>
-
-    <!--    Patterns phone-->
-    <string-array name="com_crafttalk_chat_phone_patterns">
-        <item>\\+[0-9]{13}</item>
-        <item>\\+[0-9]{12}</item>
-        <item>\\+[0-9]{11}</item>
-        <item>\\+[0-9]{9}</item>
-        <item>[0-9]{11}</item>
-        <item>\\+7 \\([0-9]{3}\\) [0-9]{3}-[0-9]{2}-[0-9]{2}</item>
-        <item>\\+7\\([0-9]{3}\\)-[0-9]{3}-[0-9]{2}-[0-9]{2}</item>
-        <item>\\+7 [0-9]{3} [0-9]{3} [0-9]{2} [0-9]{2}</item>
-        <item>\\+7 [0-9]{3} [0-9]{3}-[0-9]{2}-[0-9]{2}</item>
-        <item>[0-9] [0-9]{3} [0-9]{3}-[0-9]{2}-[0-9]{2}</item>
-    </string-array>
-
-</resources>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/api/rest/NotificationApi.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/api/rest/NotificationApi.kt b/chat/src/main/java/com/crafttalk/chat/data/api/rest/NotificationApi.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/api/rest/NotificationApi.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,39 +0,0 @@
-package com.crafttalk.chat.data.api.rest
-
-import com.crafttalk.chat.domain.entity.notification.NetworkCheckSubscription
-import com.crafttalk.chat.domain.entity.notification.NetworkResultCheckSubscription
-import com.crafttalk.chat.domain.entity.notification.NetworkSubscription
-import com.crafttalk.chat.domain.entity.notification.NetworkUnsubscription
-import com.crafttalk.chat.utils.ChatParams
-import retrofit2.Call
-import retrofit2.http.Body
-import retrofit2.http.Header
-import retrofit2.http.POST
-import retrofit2.http.Path
-
-interface NotificationApi {
-
-    @POST("webchat/{namespace}/set-user-subscription")
-    fun subscribe(
-        @Header("Cookie") cookie: String = "webchat-${ChatParams.urlChatNameSpace}-uuid=${ChatParams.visitorUuid}",
-        @Header("ct-webchat-client-id") uuid: String = ChatParams.visitorUuid,
-        @Path("namespace") clientId : String = ChatParams.urlChatNameSpace!!,
-        @Body body: NetworkSubscription
-    ) : Call<Unit>
-
-    @POST("webchat/{namespace}/delete-user-subscription")
-    fun unsubscribe(
-        @Header("Cookie") cookie: String = "webchat-${ChatParams.urlChatNameSpace}-uuid=${ChatParams.visitorUuid}",
-        @Header("ct-webchat-client-id") uuid: String = ChatParams.visitorUuid,
-        @Path("namespace") clientId : String = ChatParams.urlChatNameSpace!!,
-        @Body body: NetworkUnsubscription
-    ) : Call<Unit>
-
-    @POST("webchat/{namespace}/check-user-subscription")
-    fun checkSubscription(
-        @Header("Cookie") cookie: String = "webchat-${ChatParams.urlChatNameSpace}-uuid=${ChatParams.visitorUuid}",
-        @Header("ct-webchat-client-id") uuid: String = ChatParams.visitorUuid,
-        @Path("namespace") clientId : String = ChatParams.urlChatNameSpace!!,
-        @Body body: NetworkCheckSubscription
-    ) : Call<NetworkResultCheckSubscription>
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/utils/ConstantsUtils.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/utils/ConstantsUtils.kt b/chat/src/main/java/com/crafttalk/chat/utils/ConstantsUtils.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/utils/ConstantsUtils.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,6 +0,0 @@
-package com.crafttalk.chat.utils
-
-object ConstantsUtils {
-    const val TAG_SOCKET = "SOCKET_API"
-    const val TAG_SOCKET_EVENT = "TAG_SOCKET_EVENT"
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/helper/extensions/TypedArray.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/helper/extensions/TypedArray.kt b/chat/src/main/java/com/crafttalk/chat/presentation/helper/extensions/TypedArray.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/helper/extensions/TypedArray.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,21 +0,0 @@
-package com.crafttalk.chat.presentation.helper.extensions
-
-import android.content.res.TypedArray
-import androidx.annotation.AnyRes
-import androidx.annotation.StyleableRes
-
-@AnyRes
-fun TypedArray.getResourceIdOrNull(@StyleableRes index: Int): Int? {
-    val result = getResourceId(index, -1)
-    return if (result == -1) null else result
-}
-
-fun TypedArray.getDimensionOrNull(@StyleableRes index: Int): Float? {
-    val result = getDimension(index, -1f)
-    return if (result == -1f) null else result
-}
-
-fun TypedArray.getFloatOrNull(@StyleableRes index: Int): Float? {
-    val result = getFloat(index, -1f)
-    return if (result == -1f) null else result
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkButtonImage.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkButtonImage.kt b/chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkButtonImage.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkButtonImage.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,13 +0,0 @@
-package com.crafttalk.chat.domain.entity.message
-
-import com.google.gson.annotations.SerializedName
-
-data class NetworkButtonImage(
-
-    @SerializedName("url")
-    val url: String,
-
-    @SerializedName("align")
-    val align: NetworkButtonImageAlign
-
-)
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderDefaultMessage.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderDefaultMessage.kt b/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderDefaultMessage.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderDefaultMessage.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,11 +0,0 @@
-package com.crafttalk.chat.presentation.holders
-
-import android.view.View
-import com.crafttalk.chat.presentation.base.BaseViewHolder
-import com.crafttalk.chat.presentation.model.DefaultMessageItem
-
-class HolderDefaultMessage(
-    view: View
-) : BaseViewHolder<DefaultMessageItem>(view) {
-    override fun bindTo(item: DefaultMessageItem) {}
-}
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_background_count_unread_message.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_background_count_unread_message.xml b/chat/src/main/res/drawable/com_crafttalk_chat_background_count_unread_message.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_background_count_unread_message.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,6 +0,0 @@
-<shape xmlns:android="http://schemas.android.com/apk/res/android"
-    android:shape="oval">
-    <solid android:color="#2e7d32"/>
-    <stroke android:width="0dp" android:color="#fff" />
-    <size android:width="28dp" android:height="28dp"/>
-</shape>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/repository/ConfigurationRepository.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/repository/ConfigurationRepository.kt b/chat/src/main/java/com/crafttalk/chat/data/repository/ConfigurationRepository.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/repository/ConfigurationRepository.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,13 +0,0 @@
-package com.crafttalk.chat.data.repository
-
-import com.crafttalk.chat.data.api.rest.ConfigurationApi
-import com.crafttalk.chat.data.helper.network.toData
-import com.crafttalk.chat.domain.repository.IConfigurationRepository
-import javax.inject.Inject
-
-class ConfigurationRepository
-@Inject constructor(
-    private val configurationApi: ConfigurationApi
-) : IConfigurationRepository {
-    override fun getConfiguration() = configurationApi.getConfiguration().toData()
-}
\ No newline at end of file
Index: chat/src/main/res/values/strings.xml
===================================================================
diff --git a/chat/src/main/res/values/strings.xml b/chat/src/main/res/values/strings.xml
deleted file mode 100644
--- a/chat/src/main/res/values/strings.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,99 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-
-    <!--    Auth-->
-    <string name="com_crafttalk_chat_auth_user_introduction">Пожалуйста, представьтесь</string>
-    <string name="com_crafttalk_chat_auth_user_first_name">Ваше имя</string>
-    <string name="com_crafttalk_chat_auth_user_surname_name">Ваша фамилия</string>
-    <string name="com_crafttalk_chat_auth_user_phone">Ваш номер телефона</string>
-    <string name="com_crafttalk_chat_auth_sign_in">Начать чат</string>
-
-    <!--    Chat-->
-    <string name="com_crafttalk_chat_stete_synchronization">Синхронизация</string>
-    <string name="com_crafttalk_chat_internet_connection_warning">Нет доступа к сети…</string>
-    <string name="com_crafttalk_chat_name_company">автор CraftTalk</string>
-    <string name="com_crafttalk_chat_state_action_operator">Оператор печатает сообщение…</string>
-    <string name="com_crafttalk_chat_entry_field_hint">Введите сообщение…</string>
-
-    <!--    Message-->
-    <string name="com_crafttalk_chat_message_join">Оператор %s подключился к диалогу</string>
-
-    <!--    File-->
-    <string name="com_crafttalk_chat_file_size_byte">байт</string>
-    <string name="com_crafttalk_chat_file_size_Kb">Кб</string>
-    <string name="com_crafttalk_chat_file_size_Mb">Мб</string>
-    <string name="com_crafttalk_chat_file_size_Gb">Гб</string>
-
-    <!--    Warning-->
-    <string name="com_crafttalk_chat_warning_title">Произошла ошибка</string>
-    <string name="com_crafttalk_chat_warning_reload">Пожалуйста, перезагрузите страницу или повторите попытку позже</string>
-    <string name="com_crafttalk_chat_warning_loading_image">Ошибка при загрузке изображения</string>
-    <string name="com_crafttalk_chat_warning_loading_gif">Ошибка при загрузке гифки</string>
-    <string name="com_crafttalk_chat_warning_loading_media_file">Ошибка при загрузке медиафайла</string>
-
-    <!--    Warning snackbar-->
-    <string name="com_crafttalk_chat_warning_snackbar_not_support_type_title">Невозможно загрузить документ</string>
-    <string name="com_crafttalk_chat_warning_snackbar_not_support_type_description">Загружаемый файл запрещен к отправке</string>
-    <string name="com_crafttalk_chat_warning_snackbar_large_title">Невозможно загрузить документ</string>
-    <string name="com_crafttalk_chat_warning_snackbar_large_description">Загружаемый файл слишком большой</string>
-
-    <!--    Bottom sheet file viewer-->
-    <string name="com_crafttalk_chat_bottom_sheet_file_viewer_image_from_gallery">Изображение</string>
-    <string name="com_crafttalk_chat_bottom_sheet_file_viewer_image_from_camera">Камера</string>
-    <string name="com_crafttalk_chat_bottom_sheet_file_viewer_document_from_gallery">Документ</string>
-    <string name="com_crafttalk_chat_bottom_sheet_file_viewer_warning">Нельзя прикрепить больше чем %d</string>
-
-    <!--    FeedBack-->
-    <string name="com_crafttalk_chat_feedback_title">Диалог завершен. Оцените качество обслуживания.</string>
-
-    <!--    Search-->
-    <string name="com_crafttalk_chat_search_hint">Введите текст…</string>
-    <string name="com_crafttalk_chat_search_cancel">Отменить</string>
-    <string name="com_crafttalk_chat_coincidence_not_found">Нет совпадений</string>
-    <string name="com_crafttalk_chat_coincidence">%d из %d совпадений</string>
-
-    <!--    Voice input-->
-    <string name="com_crafttalk_chat_voice_input_entry_field_hint">Записываю…</string>
-    <string name="com_crafttalk_chat_voice_input_failed_attempt_warning_title">Не удалось распознать ваши слова, попробуйте повторить</string>
-    <string name="com_crafttalk_chat_voice_input_network_warning_title">Проверьте подключение к Интернету и попробуйте еще раз</string>
-    <string name="com_crafttalk_chat_voice_input_service_warning_title">Пожалуйста, повторите действие позже: голосовой ввод временно недоступен</string>
-    <string name="com_crafttalk_chat_voice_input_instruction_warning_title">Нажав на иконку микрофона и удерживая её, начните говорить</string>
-    <string name="com_crafttalk_chat_voice_input_permission_warning_title">У вас недостаточно разрешений на использование голосового ввода</string>
-
-    <!--    History-->
-    <string name="com_crafttalk_chat_upload_history">Загрузить историю</string>
-
-    <!--    Download file-->
-    <string name="com_crafttalk_chat_download_file_success">Файл успешно скачан</string>
-    <string name="com_crafttalk_chat_download_file_fail">Файл не удалось скачать</string>
-    <string name="com_crafttalk_chat_open_file_fail">Файл не удалось открыть</string>
-    <string name="com_crafttalk_chat_download">Загрузить</string>
-
-    <string name="com_crafttalk_chat_string_chooser_open_file_action_view">Выберите приложение для просмотра этого файла:</string>
-
-    <string name="com_crafttalk_chat_requested_permission_storage">У вас нет разрешения на доступ к ресурсам!</string>
-    <string name="com_crafttalk_chat_requested_permission_camera">У вас нет разрешения на доступ к камере!</string>
-    <string name="com_crafttalk_chat_requested_permission_download">У вас нет разрешения на скачивание файлов!</string>
-
-    <!--    Language-->
-    <string name="com_crafttalk_chat_default_language">ru</string>
-    <string name="com_crafttalk_chat_default_country">RU</string>
-
-    <!--    Phone formats-->
-    <string name="com_crafttalk_chat_russian_phone_format">+7 ([000]) [000]-[00]-[00]</string>
-
-    <!--    Patterns phone-->
-    <string-array name="com_crafttalk_chat_phone_patterns">
-        <item>\\+[0-9]{13}</item>
-        <item>\\+[0-9]{12}</item>
-        <item>\\+[0-9]{11}</item>
-        <item>\\+[0-9]{9}</item>
-        <item>[0-9]{11}</item>
-        <item>\\+7 \\([0-9]{3}\\) [0-9]{3}-[0-9]{2}-[0-9]{2}</item>
-        <item>\\+7\\([0-9]{3}\\)-[0-9]{3}-[0-9]{2}-[0-9]{2}</item>
-        <item>\\+7 [0-9]{3} [0-9]{3} [0-9]{2} [0-9]{2}</item>
-        <item>\\+7 [0-9]{3} [0-9]{3}-[0-9]{2}-[0-9]{2}</item>
-        <item>[0-9] [0-9]{3} [0-9]{3}-[0-9]{2}-[0-9]{2}</item>
-    </string-array>
-
-</resources>
\ No newline at end of file
Index: chat/src/main/res/layout/com_crafttalk_chat_item_user_image_message.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_item_user_image_message.xml b/chat/src/main/res/layout/com_crafttalk_chat_item_user_image_message.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_item_user_image_message.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,97 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:layout_marginStart="@dimen/com_crafttalk_chat_message_margin_start"
-    android:layout_marginTop="@dimen/com_crafttalk_chat_message_margin_top"
-    android:layout_marginEnd="@dimen/com_crafttalk_chat_message_margin_end"
-    android:layout_marginBottom="@dimen/com_crafttalk_chat_message_margin_bottom">
-
-    <include
-        android:id="@+id/include_date"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        layout="@layout/com_crafttalk_chat_include_date_message" />
-
-    <View
-        android:id="@+id/content_container"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        app:layout_constraintStart_toStartOf="@id/barrier_image_start"
-        app:layout_constraintTop_toBottomOf="@id/include_date"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintBottom_toBottomOf="@id/barrier_image_bottom"
-        tools:background="@drawable/com_crafttalk_chat_background_item_simple_user_message" />
-
-    <ImageView
-        android:id="@+id/user_image"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:scaleType="fitXY"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/include_date"
-        tools:layout_width="150dp"
-        tools:layout_height="150dp"
-        tools:src="@tools:sample/avatars"
-        tools:padding="10dp"
-        tools:visibility="visible" />
-
-    <include
-        android:id="@+id/user_image_warning"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        layout="@layout/com_crafttalk_chat_include_media_warning"
-        android:visibility="gone"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/include_date"
-        tools:layout_width="150dp"
-        tools:layout_height="150dp"
-        tools:visibility="gone" />
-
-    <TextView
-        android:id="@+id/download_file"
-        android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        android:text="@string/com_crafttalk_chat_download"
-        android:gravity="center"
-        android:padding="8dp"
-        android:layout_marginTop="@dimen/com_crafttalk_chat_download_btn_margin_top"
-        app:layout_constraintStart_toStartOf="@id/user_image"
-        app:layout_constraintEnd_toEndOf="@id/user_image"
-        app:layout_constraintTop_toBottomOf="@id/user_image"
-        tools:visibility="visible" />
-
-    <androidx.constraintlayout.widget.Barrier
-        android:id="@+id/barrier_image_start"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        app:barrierDirection="start"
-        app:constraint_referenced_ids="user_image,user_image_warning" />
-
-    <androidx.constraintlayout.widget.Barrier
-        android:id="@+id/barrier_image_bottom"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        app:barrierDirection="bottom"
-        app:constraint_referenced_ids="user_image,user_image_warning" />
-
-    <androidx.constraintlayout.widget.Barrier
-        android:id="@+id/barrier_content_bottom"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        app:barrierDirection="bottom"
-        app:constraint_referenced_ids="user_image,user_image_warning,download_file" />
-
-    <include
-        android:id="@+id/include_message_info"
-        android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        layout="@layout/com_crafttalk_chat_include_user_message_info"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/barrier_content_bottom" />
-
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/MessageSwipeController.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/MessageSwipeController.kt b/chat/src/main/java/com/crafttalk/chat/presentation/MessageSwipeController.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/MessageSwipeController.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,167 +0,0 @@
-package com.crafttalk.chat.presentation
-
-import android.annotation.SuppressLint
-import android.graphics.Canvas
-import android.view.HapticFeedbackConstants
-import android.view.MotionEvent
-import android.view.View
-import android.view.ViewGroup
-import androidx.recyclerview.widget.ItemTouchHelper
-import androidx.recyclerview.widget.ItemTouchHelper.ACTION_STATE_IDLE
-import androidx.recyclerview.widget.ItemTouchHelper.ACTION_STATE_SWIPE
-import androidx.recyclerview.widget.RecyclerView
-import com.crafttalk.chat.R
-import com.crafttalk.chat.presentation.adapters.AdapterListMessages
-import com.crafttalk.chat.presentation.holders.HolderInfoMessage
-import com.crafttalk.chat.presentation.holders.HolderOperatorWidgetMessage
-import com.crafttalk.chat.presentation.holders.HolderTransferMessage
-import com.crafttalk.chat.presentation.model.MessageModel
-import com.crafttalk.chat.utils.ChatAttr
-import kotlin.math.abs
-
-class MessageSwipeController(
-    private val swipeControllerAction: (MessageModel) -> Unit
-): ItemTouchHelper.Callback() {
-
-    private var isReturnBackToStartPosition = false
-    private var isStartedVibrate = false
-    private var widthItem: Float = 0f
-
-    override fun isLongPressDragEnabled(): Boolean {
-        return false
-    }
-
-    override fun getMovementFlags(
-        recyclerView: RecyclerView,
-        viewHolder: RecyclerView.ViewHolder
-    ): Int {
-        return when (viewHolder) {
-            is HolderTransferMessage,
-            is HolderInfoMessage,
-            is HolderOperatorWidgetMessage -> {
-                0
-            }
-            else -> makeFlag(ACTION_STATE_IDLE, ItemTouchHelper.LEFT) or makeFlag(ACTION_STATE_SWIPE, ItemTouchHelper.LEFT)
-        }
-    }
-
-    override fun onMove(
-        recyclerView: RecyclerView,
-        viewHolder: RecyclerView.ViewHolder,
-        target: RecyclerView.ViewHolder
-    ): Boolean {
-        return false
-    }
-
-    override fun onSwiped(viewHolder: RecyclerView.ViewHolder, direction: Int) {}
-
-    override fun onChildDraw(
-        canvas: Canvas,
-        recyclerView: RecyclerView,
-        viewHolder: RecyclerView.ViewHolder,
-        dX: Float,
-        dY: Float,
-        actionState: Int,
-        isCurrentlyActive: Boolean
-    ) {
-        widthItem = viewHolder.itemView.width.toFloat()
-
-        val heightItemView = viewHolder.itemView.height.toFloat()
-        val heightIncludeDate: Float = viewHolder.itemView.findViewById<ViewGroup>(R.id.include_date)?.height?.toFloat() ?: DEFAULT_HEIGHT_NPE_VIEW_GROUP
-        val heightIncludeMessageInfo: Float = viewHolder.itemView.findViewById<ViewGroup>(R.id.include_message_info)?.height?.toFloat() ?: DEFAULT_HEIGHT_NPE_VIEW_GROUP
-
-        if (
-            actionState == ACTION_STATE_SWIPE &&
-            viewHolder.itemView.y + canvas.height.toFloat() - heightIncludeMessageInfo > 0 &&
-            viewHolder.itemView.y + heightIncludeDate < canvas.height.toFloat()
-        ) {
-            setTouchListener(recyclerView, viewHolder)
-            val alpha = 1.0f - abs(dX) / widthItem
-            if (widthItem * 0.1 > abs(dX)) {
-                isStartedVibrate = false
-            }
-            if (widthItem * 0.2 > abs(dX)) {
-                viewHolder.itemView.alpha = alpha
-                viewHolder.itemView.translationX = dX
-            }
-            if (widthItem * 0.1 <= abs(dX)) {
-                vibrate(viewHolder.itemView)
-                drawReplyButton(
-                    canvas = canvas,
-                    itemTop = viewHolder.itemView.y,
-                    itemBottom = viewHolder.itemView.y + heightItemView,
-                    contentTop = viewHolder.itemView.y + heightIncludeDate,
-                    contentBottom = viewHolder.itemView.y + heightItemView - heightIncludeMessageInfo
-                )
-            }
-        }
-    }
-
-    override fun convertToAbsoluteDirection(flags: Int, layoutDirection: Int): Int {
-        if (isReturnBackToStartPosition) {
-            isReturnBackToStartPosition = false
-            return 0
-        }
-        return super.convertToAbsoluteDirection(flags, layoutDirection)
-    }
-
-    @SuppressLint("ClickableViewAccessibility")
-    private fun setTouchListener(recyclerView: RecyclerView, viewHolder: RecyclerView.ViewHolder) {
-        recyclerView.setOnTouchListener { _, event ->
-            isReturnBackToStartPosition = event.action == MotionEvent.ACTION_CANCEL || event.action == MotionEvent.ACTION_UP
-            if (isReturnBackToStartPosition && abs(viewHolder.itemView.translationX) >= widthItem * 0.1) {
-                val adapter = recyclerView.adapter as AdapterListMessages
-                adapter.currentList?.get(viewHolder.absoluteAdapterPosition)?.let(swipeControllerAction)
-            }
-            false
-        }
-    }
-
-    private fun vibrate(view: View) {
-        if (isStartedVibrate) return
-        view.performHapticFeedback(
-            HapticFeedbackConstants.KEYBOARD_TAP,
-            HapticFeedbackConstants.FLAG_IGNORE_GLOBAL_SETTING
-        )
-        isStartedVibrate = true
-    }
-
-    private fun drawReplyButton(
-        canvas: Canvas,
-        itemTop: Float,      // A
-        itemBottom: Float,   // D
-        contentTop: Float,   // B
-        contentBottom: Float // C
-    ) {
-
-        val recyclerViewHeight = canvas.height.toFloat()
-
-        val iconMiddle: Float = when {
-            itemTop > 0f && itemBottom < recyclerViewHeight -> (contentTop + contentBottom) / 2
-            itemTop > 0f && contentTop < recyclerViewHeight && contentBottom > recyclerViewHeight -> (contentTop + recyclerViewHeight) / 2
-            itemTop > 0f && contentBottom < recyclerViewHeight && itemBottom > recyclerViewHeight -> (contentTop + contentBottom) / 2
-            contentTop < 0f && contentBottom > 0f && itemBottom < recyclerViewHeight -> contentBottom / 2
-            itemTop < 0f && contentTop > 0f && itemBottom < recyclerViewHeight -> (contentTop + contentBottom) / 2
-            contentTop == 0f && itemBottom < recyclerViewHeight -> contentBottom / 2
-            itemTop > 0f && contentBottom == recyclerViewHeight -> (contentTop + recyclerViewHeight) / 2
-            else -> null
-        } ?: return
-
-        ChatAttr.getInstance().drawableReplyMessageIcon?.let { icon ->
-            val halfHeightIcon = icon.intrinsicWidth.toFloat() / 2f
-            icon.setBounds(
-                canvas.width - icon.intrinsicWidth - INDENT_TO_RIGHT_OF_REPLY_ICON,
-                (iconMiddle - halfHeightIcon).toInt(),
-                canvas.width - INDENT_TO_RIGHT_OF_REPLY_ICON,
-                (iconMiddle + halfHeightIcon).toInt()
-            )
-            icon.draw(canvas)
-        }
-    }
-
-    companion object {
-        const val INDENT_TO_RIGHT_OF_REPLY_ICON = 80
-        const val DEFAULT_HEIGHT_NPE_VIEW_GROUP = 0f
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/res/color/com_crafttalk_chat_color_download_file.xml
===================================================================
diff --git a/chat/src/main/res/color/com_crafttalk_chat_color_download_file.xml b/chat/src/main/res/color/com_crafttalk_chat_color_download_file.xml
deleted file mode 100644
--- a/chat/src/main/res/color/com_crafttalk_chat_color_download_file.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,5 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<selector xmlns:android="http://schemas.android.com/apk/res/android">
-    <item android:state_pressed="true" android:color="@color/com_crafttalk_chat_white" />
-    <item android:state_pressed="false" android:color="@color/com_crafttalk_chat_gray_707070" />
-</selector>
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_ic_file_download_done.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_ic_file_download_done.xml b/chat/src/main/res/drawable/com_crafttalk_chat_ic_file_download_done.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_ic_file_download_done.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,5 +0,0 @@
-<vector android:height="24dp" android:tint="#FFFFFF"
-    android:viewportHeight="24" android:viewportWidth="24"
-    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
-    <path android:fillColor="@android:color/white" android:pathData="M5,18h14v2L5,20v-2zM9.6,15.3L5,10.7l2,-1.9 2.6,2.6L17,4l2,2 -9.4,9.3z"/>
-</vector>
Index: chat/src/main/java/com/crafttalk/chat/data/local/db/migrations/Migration_5_6.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/local/db/migrations/Migration_5_6.kt b/chat/src/main/java/com/crafttalk/chat/data/local/db/migrations/Migration_5_6.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/local/db/migrations/Migration_5_6.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,13 +0,0 @@
-package com.crafttalk.chat.data.local.db.migrations
-
-import androidx.room.migration.Migration
-import androidx.sqlite.db.SupportSQLiteDatabase
-import com.crafttalk.chat.data.local.db.entity.MessageEntity
-
-object Migration_5_6: Migration(5, 6) {
-    override fun migrate(database: SupportSQLiteDatabase) {
-
-        database.execSQL("ALTER TABLE ${MessageEntity.TABLE_NAME} ADD COLUMN widget TEXT DEFAULT NULL")
-
-    }
-}
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_ic_arrow_back.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_ic_arrow_back.xml b/chat/src/main/res/drawable/com_crafttalk_chat_ic_arrow_back.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_ic_arrow_back.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,5 +0,0 @@
-<vector android:height="24dp" android:tint="#FFFFFF"
-    android:viewportHeight="24" android:viewportWidth="24"
-    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
-    <path android:fillColor="@android:color/white" android:pathData="M20,11H7.83l5.59,-5.59L12,4l-8,8 8,8 1.41,-1.41L7.83,13H20v-2z"/>
-</vector>
Index: chat/src/main/java/com/crafttalk/chat/data/helper/network/CustomCookieJar.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/helper/network/CustomCookieJar.kt b/chat/src/main/java/com/crafttalk/chat/data/helper/network/CustomCookieJar.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/helper/network/CustomCookieJar.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,56 +0,0 @@
-package com.crafttalk.chat.data.helper.network
-
-import okhttp3.Cookie
-import okhttp3.CookieJar
-import okhttp3.HttpUrl
-
-class CustomCookieJar : CookieJar {
-    private val cache: MutableSet<WrappedCookie> = HashSet()
-
-    override fun saveFromResponse(url: HttpUrl, cookies: List<Cookie>) {
-        for (cookie in cookies) {
-            cache.add(WrappedCookie(cookie))
-        }
-    }
-
-    override fun loadForRequest(url: HttpUrl): List<Cookie> {
-        val cookies: MutableList<Cookie> = ArrayList()
-        val iterator = cache.iterator()
-        while (iterator.hasNext()) {
-            val cookie: Cookie = iterator.next().cookie
-            if (isCookieExpired(cookie)) {
-                iterator.remove()
-            } else if (cookie.matches(url)) {
-                cookies.add(cookie)
-            }
-        }
-        return cookies
-    }
-
-    private fun isCookieExpired(cookie: Cookie): Boolean {
-        return cookie.expiresAt < System.currentTimeMillis()
-    }
-}
-
-private class WrappedCookie(val cookie: Cookie) {
-
-    override fun equals(other: Any?): Boolean {
-        if (other !is WrappedCookie) return false
-        return (other.cookie.name == cookie.name
-                && other.cookie.domain == cookie.domain
-                && other.cookie.path == cookie.path
-                && other.cookie.secure == cookie.secure
-                && other.cookie.hostOnly == cookie.hostOnly)
-    }
-
-    override fun hashCode(): Int {
-        var hash = 17
-        hash = 31 * hash + cookie.name.hashCode()
-        hash = 31 * hash + cookie.domain.hashCode()
-        hash = 31 * hash + cookie.path.hashCode()
-        hash = 31 * hash + if (cookie.secure) 0 else 1
-        hash = 31 * hash + if (cookie.hostOnly) 0 else 1
-        return hash
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/helper/converters/dimensionConverter.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/helper/converters/dimensionConverter.kt b/chat/src/main/java/com/crafttalk/chat/presentation/helper/converters/dimensionConverter.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/helper/converters/dimensionConverter.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,12 +0,0 @@
-package com.crafttalk.chat.presentation.helper.converters
-
-import android.content.Context
-import android.util.TypedValue
-
-fun convertDpToPx(dp: Float, context: Context): Float {
-    return TypedValue.applyDimension(
-        TypedValue.COMPLEX_UNIT_DIP,
-        dp,
-        context.resources.displayMetrics
-    )
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/base/BaseViewHolder.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/base/BaseViewHolder.kt b/chat/src/main/java/com/crafttalk/chat/presentation/base/BaseViewHolder.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/base/BaseViewHolder.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,9 +0,0 @@
-package com.crafttalk.chat.presentation.base
-
-import android.view.View
-import androidx.recyclerview.widget.RecyclerView
-
-abstract class BaseViewHolder<T>(view: View) : RecyclerView.ViewHolder(view) {
-    abstract fun bindTo(item: T)
-//    abstract fun clear()
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/feature/file_viewer/Option.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/feature/file_viewer/Option.kt b/chat/src/main/java/com/crafttalk/chat/presentation/feature/file_viewer/Option.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/feature/file_viewer/Option.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,5 +0,0 @@
-package com.crafttalk.chat.presentation.feature.file_viewer
-
-import android.graphics.drawable.Drawable
-
-class Option(val id: Int, var title: CharSequence, var icon: Drawable?)
\ No newline at end of file
Index: chat/src/main/res/values/colors.xml
===================================================================
diff --git a/chat/src/main/res/values/colors.xml b/chat/src/main/res/values/colors.xml
deleted file mode 100644
--- a/chat/src/main/res/values/colors.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,43 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-
-    <color name="com_crafttalk_chat_default_color_title">#000</color>
-
-    <color name="com_crafttalk_chat_default_color_main">#2e7d32</color>
-
-    <color name="com_crafttalk_chat_default_color_bg_user_message">@color/com_crafttalk_chat_default_color_main</color>
-    <color name="com_crafttalk_chat_default_color_bg_server_message">#EBEBEB</color>
-    <color name="com_crafttalk_chat_default_color_borders_server_action">#ddd</color>
-    <color name="com_crafttalk_chat_default_color_bg_server_action">#fff</color>
-    <color name="com_crafttalk_chat_default_color_bg_server_button">#fff</color>
-    <color name="com_crafttalk_chat_default_color_text_phone_server_message">@color/com_crafttalk_chat_default_color_main</color>
-    <color name="com_crafttalk_chat_default_color_text_phone_user_message">@color/com_crafttalk_chat_white</color>
-
-    <color name="com_crafttalk_chat_default_color_text_server_message">#000</color>
-    <color name="com_crafttalk_chat_default_color_text_user_message">#fff</color>
-    <color name="com_crafttalk_chat_default_color_barrier_replied_message">#fff</color>
-    <color name="com_crafttalk_chat_default_color_barrier_replied_preview_message">#AEB0B0</color>
-    <color name="com_crafttalk_chat_default_color_text_user_replied_message">#AEB0B0</color>
-    <color name="com_crafttalk_chat_default_color_text_server_action">@color/com_crafttalk_chat_default_color_main</color>
-    <color name="com_crafttalk_chat_default_color_text_warning">#2C2C2C</color>
-    <color name="com_crafttalk_chat_default_color_text_link_server_message">@color/com_crafttalk_chat_default_color_main</color>
-    <color name="com_crafttalk_chat_default_color_text_link_user_message">@color/com_crafttalk_chat_white</color>
-
-    <color name="com_crafttalk_chat_default_color_info">#AEB0B0</color>
-
-    <color name="com_crafttalk_chat_white">#fff</color>
-    <color name="com_crafttalk_chat_white_transparent_75">#C0ffffff</color>
-    <color name="com_crafttalk_chat_gray">#ddd</color>
-    <color name="com_crafttalk_chat_gray_bdbdbd">#bdbdbd</color>
-    <color name="com_crafttalk_chat_gray_f5f5f5">#f5f5f5</color>
-    <color name="com_crafttalk_chat_gray_8d8d8d">#8d8d8d</color>
-    <color name="com_crafttalk_chat_gray_707070">#707070</color>
-    <color name="com_crafttalk_chat_black">#000</color>
-    <color name="com_crafttalk_chat_black_translucent">#7F000000</color>
-    <color name="com_crafttalk_chat_success">#2e7d32</color>
-    <color name="com_crafttalk_chat_error">#ef5350</color>
-
-    <color name="com_crafttalk_chat_blue_005cb2">#005cb2</color>
-    <color name="com_crafttalk_chat_yellow_ffeb3b">#ffeb3b</color>
-    <color name="com_crafttalk_chat_orange_ffb300">#ffb300</color>
-</resources>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/entity/tags/html.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/entity/tags/html.kt b/chat/src/main/java/com/crafttalk/chat/domain/entity/tags/html.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/entity/tags/html.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,66 +0,0 @@
-package com.crafttalk.chat.domain.entity.tags
-
-sealed class Tag(
-    val name: String,
-    @Transient
-    open val pointStart: Int,
-    @Transient
-    open var pointEnd: Int
-)
-data class StrikeTag(
-    override val pointStart: Int,
-    override var pointEnd: Int
-): Tag("strike", pointStart, pointEnd)
-data class StrongTag(
-    override val pointStart: Int,
-    override var pointEnd: Int
-): Tag("strong", pointStart, pointEnd)
-data class BTag(
-    override val pointStart: Int,
-    override var pointEnd: Int
-): Tag("b", pointStart, pointEnd)
-data class ItalicTag(
-    override val pointStart: Int,
-    override var pointEnd: Int
-): Tag("i", pointStart, pointEnd)
-data class EmTag(
-    override val pointStart: Int,
-    override var pointEnd: Int
-): Tag("em", pointStart, pointEnd)
-data class UrlTag(
-    override val pointStart: Int,
-    override var pointEnd: Int,
-    val url: String
-): Tag("a", pointStart, pointEnd)
-data class ImageTag(
-    override val pointStart: Int,
-    override var pointEnd: Int,
-    val url: String,
-    val width: Int,
-    val height: Int
-): Tag("img", pointStart, pointEnd)
-data class HostListTag(
-    override val pointStart: Int,
-    override var pointEnd: Int,
-    val countNesting: Int
-): Tag("ul", pointStart, pointEnd)
-data class ItemListTag(
-    override val pointStart: Int,
-    override var pointEnd: Int,
-    val countNesting: Int
-): Tag("li", pointStart, pointEnd)
-data class PhoneTag(
-    override val pointStart: Int,
-    override var pointEnd: Int,
-    val phone: String
-): Tag("phone", pointStart, pointEnd)
-
-class AttrTag(
-    val attrName: String,
-    val value: String
-)
-
-class AttrTagInfo(
-    val endIndex: Int,
-    val attrTag: AttrTag
-)
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_background_search_input_field.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_background_search_input_field.xml b/chat/src/main/res/drawable/com_crafttalk_chat_background_search_input_field.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_background_search_input_field.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<shape
-    android:shape="rectangle"
-    xmlns:android="http://schemas.android.com/apk/res/android">
-    <solid android:color="@color/com_crafttalk_chat_gray" />
-    <corners android:radius="10dp"/>
-</shape>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/local/db/dao/MessagesDao.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/local/db/dao/MessagesDao.kt b/chat/src/main/java/com/crafttalk/chat/data/local/db/dao/MessagesDao.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/local/db/dao/MessagesDao.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,85 +0,0 @@
-package com.crafttalk.chat.data.local.db.dao
-
-import androidx.paging.DataSource
-import androidx.room.*
-import com.crafttalk.chat.data.local.db.entity.ActionEntity
-import com.crafttalk.chat.data.local.db.entity.KeyboardEntity
-import com.crafttalk.chat.data.local.db.entity.MessageEntity
-import com.crafttalk.chat.domain.entity.file.TypeDownloadProgress
-
-@Dao
-interface MessagesDao {
-
-    @Query("SELECT * FROM ${MessageEntity.TABLE_NAME} ORDER BY timestamp DESC, arrival_time DESC")
-    fun getMessages(): DataSource.Factory<Int, MessageEntity>
-
-    @Query("SELECT * FROM ${MessageEntity.TABLE_NAME} ORDER BY timestamp DESC, arrival_time DESC")
-    fun getAllMessages(): List<MessageEntity>
-
-    @Query("SELECT EXISTS (SELECT * FROM ${MessageEntity.TABLE_NAME} LIMIT 1)")
-    fun isNotEmpty(): Boolean
-
-    @Query("SELECT COUNT(*) FROM ${MessageEntity.TABLE_NAME} WHERE timestamp > :timestamp")
-    fun getPositionByTimestamp(timestamp: Long): Int?
-
-    @Query("SELECT EXISTS (SELECT * FROM ${MessageEntity.TABLE_NAME} WHERE id = :id)")
-    fun emptyAvailable(id: String): Boolean
-
-    @Query("SELECT COUNT(*) FROM ${MessageEntity.TABLE_NAME} WHERE timestamp > :currentReadMessageTime AND message_type NOT IN (:ignoredMessageTypes)")
-    fun getCountUnreadMessages(currentReadMessageTime: Long, ignoredMessageTypes: List<Int>): Int?
-
-    @Query("SELECT COUNT(*) FROM ${MessageEntity.TABLE_NAME} WHERE timestamp <= :timestampMessage")
-    fun getCountMessagesInclusiveTimestamp(timestampMessage: Long): Int?
-
-    @Query("SELECT COUNT(*) FROM ${MessageEntity.TABLE_NAME} WHERE timestamp > :currentReadMessageTime AND timestamp <= :timestampLastMessage AND message_type NOT IN (:ignoredMessageTypes)")
-    fun getCountUnreadMessagesRange(currentReadMessageTime: Long, timestampLastMessage: Long, ignoredMessageTypes: List<Int>): Int?
-
-    @Query("SELECT timestamp FROM ${MessageEntity.TABLE_NAME} ORDER BY timestamp ASC LIMIT 1")
-    fun getFirstTime(): Long?
-
-    @Query("SELECT timestamp FROM ${MessageEntity.TABLE_NAME} ORDER BY timestamp DESC LIMIT 1")
-    fun getLastTime(): Long?
-
-    @Query("SELECT * FROM ${MessageEntity.TABLE_NAME} WHERE id = :id")
-    fun getMessageById(id: String): MessageEntity?
-
-    @Query("SELECT timestamp FROM ${MessageEntity.TABLE_NAME} WHERE id = :id")
-    fun getTimestampMessageById(id: String): Long?
-
-    @Query("SELECT EXISTS (SELECT * FROM ${MessageEntity.TABLE_NAME} WHERE id = :id LIMIT 1)")
-    fun hasThisMessage(id: String): Boolean
-
-    @Insert(onConflict = OnConflictStrategy.REPLACE)
-    fun insertMessages(messages: List<MessageEntity>)
-
-    @Insert(onConflict = OnConflictStrategy.IGNORE)
-    fun insertMessage(message: MessageEntity)
-
-    @Query("UPDATE ${MessageEntity.TABLE_NAME} SET message_type = :type WHERE id = :id")
-    fun updateMessage(id: String, type: Int)
-
-    @Query("UPDATE ${MessageEntity.TABLE_NAME} SET height = :height, width = :width WHERE id = :id")
-    fun updateSizeMessage(id: String, height: Int, width: Int)
-
-    @Query("UPDATE ${MessageEntity.TABLE_NAME} SET attachment_download_progress_type = :typeDownloadProgress WHERE id = :id")
-    fun updateTypeDownloadProgress(id: String, typeDownloadProgress: TypeDownloadProgress)
-
-    @Query("UPDATE ${MessageEntity.TABLE_NAME} SET operator_name = :currentPersonName WHERE operator_id = :personId")
-    fun updatePersonName(personId: String, currentPersonName: String)
-
-    @Query("UPDATE ${MessageEntity.TABLE_NAME} SET operator_preview = :newPersonPicture WHERE (operator_id = :personId) AND ((operator_preview != :newPersonPicture) OR (operator_preview is null AND :newPersonPicture is not null) OR (operator_preview is not null AND :newPersonPicture is null))")
-    fun updatePersonPreview(personId: String, newPersonPicture: String?)
-
-    @Query("DELETE FROM ${MessageEntity.TABLE_NAME}")
-    fun deleteAllMessages()
-
-    @Query("DELETE FROM ${MessageEntity.TABLE_NAME} WHERE message_type = :messageType")
-    fun deleteAllMessageByType(messageType: Int)
-
-    @Query("UPDATE ${MessageEntity.TABLE_NAME} SET actions = :actions WHERE id = :id")
-    fun selectAction(id: String, actions: List<ActionEntity>?)
-
-    @Query("UPDATE ${MessageEntity.TABLE_NAME} SET keyboard = :keyboard WHERE id = :id")
-    fun selectButton(id: String, keyboard: KeyboardEntity?)
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/local/db/entity/converters/WidgetContainer.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/converters/WidgetContainer.kt b/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/converters/WidgetContainer.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/converters/WidgetContainer.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,43 +0,0 @@
-package com.crafttalk.chat.data.local.db.entity.converters
-
-import androidx.room.TypeConverter
-import com.crafttalk.chat.data.local.db.entity.WidgetEntity
-import com.crafttalk.chat.utils.ChatParams
-import com.google.gson.Gson
-import org.json.JSONObject
-
-class WidgetContainer {
-
-    @TypeConverter
-    fun fromWidget(widget: WidgetEntity?): String? {
-        widget ?: return null
-        return Gson().toJson(widget, WidgetEntity::class.java)
-    }
-
-    @TypeConverter
-    fun toWidget(widget: String?): WidgetEntity? {
-        widget ?: return null
-        val jsonObject = JSONObject(widget)
-        if (!jsonObject.has("widgetId")) return null
-        if (!jsonObject.has("payload")) return null
-        val widgetId = jsonObject["widgetId"].toString()
-        val widgetDescription = if (jsonObject.has("description")) {
-            jsonObject["description"].toString()
-        } else {
-            ""
-        }
-        return try {
-            val payloadObj = Gson().fromJson(
-                jsonObject["payload"].toString(),
-                ChatParams.methodGetPayloadTypeWidget(widgetId) ?: HashMap<String, Any>()::class.java
-            )
-            WidgetEntity(
-                widgetId = widgetId,
-                description = widgetDescription,
-                payload = payloadObj
-            )
-        } catch (ex: Exception) {
-            null
-        }
-    }
-}
\ No newline at end of file
Index: chat/src/main/res/layout/com_crafttalk_chat_view_warning_snackbar.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_view_warning_snackbar.xml b/chat/src/main/res/layout/com_crafttalk_chat_view_warning_snackbar.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_view_warning_snackbar.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,52 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<merge xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    tools:parentTag="android.widget.RelativeLayout">
-
-    <androidx.constraintlayout.widget.ConstraintLayout
-        android:id="@+id/warning_snackbar_container"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:padding="16dp"
-        tools:background="@color/com_crafttalk_chat_error">
-
-        <TextView
-            android:id="@+id/warning_snackbar_title"
-            android:layout_width="0dp"
-            android:layout_height="wrap_content"
-            android:textColor="@color/com_crafttalk_chat_white"
-            android:textSize="16sp"
-            android:textStyle="bold"
-            app:layout_constraintTop_toTopOf="parent"
-            app:layout_constraintStart_toStartOf="parent"
-            app:layout_constraintEnd_toStartOf="@id/icon_warning"
-            app:layout_constraintBottom_toTopOf="@id/warning_snackbar_description"
-            tools:text="@string/com_crafttalk_chat_warning_snackbar_not_support_type_title" />
-
-        <TextView
-            android:id="@+id/warning_snackbar_description"
-            android:layout_width="0dp"
-            android:layout_height="wrap_content"
-            android:textColor="@color/com_crafttalk_chat_white"
-            android:layout_marginTop="8dp"
-            app:layout_constraintStart_toStartOf="parent"
-            app:layout_constraintEnd_toStartOf="@id/icon_warning"
-            app:layout_constraintTop_toBottomOf="@id/warning_snackbar_title"
-            app:layout_constraintBottom_toBottomOf="parent"
-            tools:text="@string/com_crafttalk_chat_warning_snackbar_not_support_type_description" />
-
-        <ImageView
-            android:id="@+id/icon_warning"
-            android:layout_width="40dp"
-            android:layout_height="40dp"
-            app:layout_constraintEnd_toEndOf="parent"
-            app:layout_constraintTop_toTopOf="parent"
-            app:layout_constraintBottom_toBottomOf="parent"
-            tools:src="@drawable/com_crafttalk_chat_ic_warning" />
-
-    </androidx.constraintlayout.widget.ConstraintLayout>
-
-</merge>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/model/FileModel.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/model/FileModel.kt b/chat/src/main/java/com/crafttalk/chat/presentation/model/FileModel.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/model/FileModel.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,16 +0,0 @@
-package com.crafttalk.chat.presentation.model
-
-import android.text.SpannableString
-import com.crafttalk.chat.domain.entity.file.TypeDownloadProgress
-import com.crafttalk.chat.domain.entity.file.TypeFile
-
-data class FileModel(
-    val url: String,
-    val name: SpannableString,
-    val size: Long? = null,
-    val height: Int? = null,
-    val width: Int? = null,
-    val failLoading: Boolean = false,
-    val type: TypeFile? = null,
-    var typeDownloadProgress: TypeDownloadProgress = TypeDownloadProgress.NOT_DOWNLOADED
-)
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/adapters/AdapterAction.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/adapters/AdapterAction.kt b/chat/src/main/java/com/crafttalk/chat/presentation/adapters/AdapterAction.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/adapters/AdapterAction.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,22 +0,0 @@
-package com.crafttalk.chat.presentation.adapters
-
-import android.view.ViewGroup
-import com.crafttalk.chat.presentation.base.BaseAdapter
-import com.crafttalk.chat.presentation.base.BaseViewHolder
-import com.crafttalk.chat.presentation.helper.extensions.inflate
-import com.crafttalk.chat.presentation.holders.HolderAction
-import com.crafttalk.chat.presentation.model.ActionModel
-
-class AdapterAction(
-    private val messageId: String,
-    private val hasSelectedAction: Boolean,
-    private val selectAction: (messageId: String, actionId: String) -> Unit
-) : BaseAdapter<ActionModel>() {
-
-    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): BaseViewHolder<out ActionModel> {
-        return HolderAction(parent.inflate(viewType), hasSelectedAction) { actionId ->
-            selectAction(messageId, actionId)
-        }
-    }
-
-}
Index: chat/src/main/java/com/crafttalk/chat/domain/interactors/AuthInteractor.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/interactors/AuthInteractor.kt b/chat/src/main/java/com/crafttalk/chat/domain/interactors/AuthInteractor.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/interactors/AuthInteractor.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,153 +0,0 @@
-package com.crafttalk.chat.domain.interactors
-
-import android.util.Log
-import com.crafttalk.chat.domain.entity.auth.Visitor
-import com.crafttalk.chat.domain.repository.IAuthRepository
-import com.crafttalk.chat.presentation.ChatEventListener
-import com.crafttalk.chat.utils.AuthType
-import com.crafttalk.chat.utils.ChatParams
-import com.crafttalk.chat.utils.ChatStatus
-import java.io.File
-import javax.inject.Inject
-
-class AuthInteractor
-@Inject constructor(
-    private val authRepository: IAuthRepository,
-    private val visitorInteractor: VisitorInteractor,
-    private val conditionInteractor: ConditionInteractor,
-    private val personInteractor: PersonInteractor,
-    private val notificationInteractor: NotificationInteractor
-) {
-
-    private fun dataPreparation(visitor: Visitor?): Visitor? {
-        return when (ChatParams.authMode) {
-            AuthType.AUTH_WITH_FORM -> visitor?.apply(visitorInteractor::saveVisitor)
-            AuthType.AUTH_WITHOUT_FORM -> visitor?.apply(visitorInteractor::setVisitor)
-            else -> null
-        } ?: visitorInteractor.getVisitor()
-    }
-
-    fun logIn(
-        visitor: Visitor? = null,
-        successAuthUi: () -> Unit = {},
-        failAuthUi: () -> Unit = {},
-        successAuthUx: suspend () -> Unit = {},
-        failAuthUx: suspend () -> Unit = {},
-        sync: suspend () -> Unit = {},
-        updateCurrentReadMessageTime: (List<Pair<String, Long>>) -> Boolean = { false },
-        firstLogInWithForm: () -> Unit = {},
-        chatEventListener: ChatEventListener? = null
-    ) {
-        val currentVisitor = dataPreparation(visitor)
-        if (!currentVisitor?.uuid.isNullOrBlank()) {
-            ChatParams.visitorUuid = currentVisitor?.uuid.orEmpty()
-        }
-
-        val successAuthUiWrapper = {
-            if (conditionInteractor.getStatusChat() == ChatStatus.ON_CHAT_SCREEN_FOREGROUND_APP) {
-                successAuthUi()
-            }
-        }
-
-        val failAuthUiWrapper = {
-            if (conditionInteractor.getStatusChat() == ChatStatus.ON_CHAT_SCREEN_FOREGROUND_APP) {
-                failAuthUi()
-            }
-        }
-
-        val successAuthUxWrapper = suspend {
-            successAuthUx()
-            notificationInteractor.subscribeNotification()
-        }
-
-        val failAuthUxWrapper = suspend {
-            failAuthUx()
-            notificationInteractor.unsubscribeNotification()
-        }
-
-        val syncWrapper = suspend {
-            if (conditionInteractor.getStatusChat() == ChatStatus.ON_CHAT_SCREEN_FOREGROUND_APP) {
-                sync()
-            }
-        }
-
-        val updateCurrentReadMessageTimeWrapper: (newTimeMarks: List<Pair<String, Long>>) -> Unit = { newTimeMarks ->
-            when (conditionInteractor.getStatusChat()) {
-                ChatStatus.ON_CHAT_SCREEN_FOREGROUND_APP -> updateCurrentReadMessageTime(newTimeMarks)
-                ChatStatus.NOT_ON_CHAT_SCREEN_FOREGROUND_APP -> {
-                    val currentReadMessageTime = conditionInteractor.getCurrentReadMessageTime()
-                    val lastTime = newTimeMarks.lastOrNull()?.second
-                    if (lastTime != null && lastTime > currentReadMessageTime) {
-                        conditionInteractor.saveCurrentReadMessageTime(lastTime)
-                    }
-                }
-            }
-        }
-
-        val updateCountUnreadMessagesWrapper: (countNewMessages: Int, hasUserMessage: Boolean) -> Unit = { countNewUnreadMessages, hasUserMessage ->
-            if (conditionInteractor.getStatusChat() ==  ChatStatus.NOT_ON_CHAT_SCREEN_FOREGROUND_APP) {
-                if (hasUserMessage) {
-                    conditionInteractor.saveCountUnreadMessages(countNewUnreadMessages)
-                } else {
-                    val oldCountUnreadMessages = conditionInteractor.getCountUnreadMessages()
-                    conditionInteractor.saveCountUnreadMessages(oldCountUnreadMessages + countNewUnreadMessages)
-                }
-            }
-        }
-
-        val getPersonPreviewWrapper: suspend (personId: String) -> String? = { personId ->
-            currentVisitor?.token?.let { token ->
-                personInteractor.getPersonPreview(personId, token)
-            }
-        }
-
-        when (ChatParams.authMode) {
-            AuthType.AUTH_WITH_FORM -> {
-                if (currentVisitor == null) {
-                    firstLogInWithForm()
-                } else {
-                    authRepository.logIn(
-                        visitor = currentVisitor,
-                        successAuthUi = successAuthUiWrapper,
-                        failAuthUi = failAuthUiWrapper,
-                        successAuthUx = successAuthUxWrapper,
-                        failAuthUx = failAuthUxWrapper,
-                        sync = syncWrapper,
-                        updateCurrentReadMessageTime = updateCurrentReadMessageTimeWrapper,
-                        updateCountUnreadMessages = updateCountUnreadMessagesWrapper,
-                        getPersonPreview = getPersonPreviewWrapper,
-                        updatePersonName = personInteractor::updatePersonName,
-                        chatEventListener = chatEventListener
-                    )
-                }
-            }
-            AuthType.AUTH_WITHOUT_FORM -> {
-                authRepository.logIn(
-                    visitor = currentVisitor!!,
-                    successAuthUi = successAuthUiWrapper,
-                    failAuthUi = failAuthUiWrapper,
-                    successAuthUx = successAuthUxWrapper,
-                    failAuthUx = failAuthUxWrapper,
-                    sync = syncWrapper,
-                    updateCurrentReadMessageTime = updateCurrentReadMessageTimeWrapper,
-                    updateCountUnreadMessages = updateCountUnreadMessagesWrapper,
-                    getPersonPreview = getPersonPreviewWrapper,
-                    updatePersonName = personInteractor::updatePersonName,
-                    chatEventListener = chatEventListener
-                )
-            }
-        }
-    }
-
-    fun logOut(filesDir: File) {
-        try {
-            notificationInteractor.unsubscribeNotification()
-            authRepository.logOut(filesDir)
-        } catch (ex: Exception) {
-            Log.e("FAIL logOut", "${ex.message}")
-        }
-        conditionInteractor.clearDataChatState()
-        visitorInteractor.clearDataVisitor()
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderUserUnionMessage.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderUserUnionMessage.kt b/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderUserUnionMessage.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderUserUnionMessage.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,156 +0,0 @@
-package com.crafttalk.chat.presentation.holders
-
-import android.content.res.ColorStateList
-import android.view.View
-import android.view.ViewGroup
-import android.widget.ImageView
-import android.widget.ProgressBar
-import android.widget.TextView
-import androidx.core.view.ViewCompat
-import com.crafttalk.chat.R
-import com.crafttalk.chat.domain.entity.file.TypeFile
-import com.crafttalk.chat.presentation.base.BaseViewHolder
-import com.crafttalk.chat.presentation.helper.extensions.*
-import com.crafttalk.chat.presentation.model.UnionMessageItem
-import com.crafttalk.chat.utils.ChatAttr
-
-class HolderUserUnionMessage(
-    view: View,
-    private val download: (fileName: String, fileUrl: String, fileType: TypeFile) -> Unit,
-    private val updateData: (id: String, height: Int, width: Int) -> Unit,
-    private val clickGifHandler: (gifName: String, gifUrl: String) -> Unit,
-    private val clickImageHandler: (imageName: String, imageUrl: String) -> Unit,
-    private val clickDocumentHandler: (id: String, documentName: String, documentUrl: String) -> Unit
-) : BaseViewHolder<UnionMessageItem>(view), View.OnClickListener {
-    private val contentContainer: View? = view.findViewById(R.id.content_container)
-    private val warningContainer: ViewGroup? = view.findViewById(R.id.user_media_warning)
-    private val fileInfo: ViewGroup? = view.findViewById(R.id.file_info)
-
-    private val message: TextView? = view.findViewById(R.id.user_message)
-    private val fileIcon: ImageView? = view.findViewById(R.id.file_icon)
-    private val progressDownload: ProgressBar? = view.findViewById(R.id.progress_download)
-    private val fileName: TextView? = view.findViewById(R.id.file_name)
-    private val fileSize: TextView? = view.findViewById(R.id.file_size)
-    private val media: ImageView? = view.findViewById(R.id.user_media)
-    private val downloadMediaFile: TextView? = view.findViewById(R.id.download_file)
-    private val authorName: TextView? = view.findViewById(R.id.author_name)
-    private val authorPreview: ImageView? = view.findViewById(R.id.author_preview)
-    private val time: TextView? = view.findViewById(R.id.time)
-    private val status: ImageView? = view.findViewById(R.id.status)
-    private val date: TextView? = view.findViewById(R.id.date)
-
-    private var id: String? = null
-    private var attachmentFileName: String? = null
-    private var attachmentFileUrl: String? = null
-    private var mediaFileName: String? = null
-    private var fileType: TypeFile? = null
-    private var failLoading: Boolean = false
-
-    init {
-        fileIcon?.setOnClickListener(this)
-        media?.setOnClickListener(this)
-        downloadMediaFile?.setOnClickListener(this)
-    }
-
-    override fun onClick(view: View) {
-        when (view.id) {
-            R.id.file_icon -> {
-                val correctId = id ?: return
-                val correctDocumentName = attachmentFileName ?: return
-                val correctDocumentUrl = attachmentFileUrl ?: return
-                if (!failLoading)
-                    clickDocumentHandler(correctId, correctDocumentName, correctDocumentUrl)
-            }
-            R.id.user_media -> {
-                if (!failLoading) {
-                    val name = mediaFileName ?: return
-                    val url = attachmentFileUrl ?: return
-                    when (fileType) {
-                        TypeFile.IMAGE -> clickImageHandler(name, url)
-                        TypeFile.GIF -> clickGifHandler(name, url)
-                    }
-                }
-            }
-            R.id.download_file -> {
-                val name = mediaFileName ?: return
-                val url = attachmentFileUrl ?: return
-                download(name, url, fileType ?: TypeFile.IMAGE)
-            }
-        }
-    }
-
-    override fun bindTo(item: UnionMessageItem) {
-        id = item.id
-        attachmentFileName = item.file.name.toString()
-        attachmentFileUrl = item.file.url
-        mediaFileName = item.file.name.toString()
-        fileType = item.file.type
-        failLoading = item.file.failLoading
-
-        date?.setDate(item)
-        // set content
-        authorName?.setAuthor(item)
-        authorPreview?.setAuthorIcon(showAuthorIcon = false)
-        time?.setTime(item)
-        status?.setStatusMessage(item)
-        message?.setMessageText(
-            textMessage = item.message,
-            maxWidthTextMessage = ChatAttr.getInstance().widthItemUserTextMessage,
-            colorTextMessage = ChatAttr.getInstance().colorTextUserMessage,
-            colorTextLinkMessage = ChatAttr.getInstance().colorTextLinkUserMessage,
-            sizeTextMessage = ChatAttr.getInstance().sizeTextUserMessage,
-            resFontFamilyMessage = ChatAttr.getInstance().resFontFamilyUserMessage,
-            isClickableLink = true,
-            isSelectableText = true
-        )
-        downloadMediaFile?.apply {
-            if (fileType in listOf(TypeFile.IMAGE, TypeFile.GIF)) {
-                settingDownloadBtn(true, failLoading)
-            } else {
-                visibility = View.GONE
-            }
-        }
-        // set bg
-        contentContainer?.apply {
-            setBackgroundResource(ChatAttr.getInstance().bgUserMessageResId)
-            ViewCompat.setBackgroundTintList(this, ColorStateList.valueOf(ChatAttr.getInstance().colorBackgroundUserMessage))
-        }
-
-        when (fileType) {
-            TypeFile.FILE -> {
-                media?.visibility = View.GONE
-                warningContainer?.visibility = View.GONE
-                fileInfo?.visibility = View.VISIBLE
-                progressDownload?.setProgressDownloadFile(item.file.typeDownloadProgress)
-                fileIcon?.setFileIcon(item.file.typeDownloadProgress)
-                fileName?.setFileName(
-                    file = item.file,
-                    colorTextFileName = ChatAttr.getInstance().colorUserFileName,
-                    sizeTextFileName = ChatAttr.getInstance().sizeUserFileName
-                )
-                fileSize?.setFileSize(
-                    file = item.file,
-                    colorTextFileSize = ChatAttr.getInstance().colorUserFileSize,
-                    sizeTextFileSize = ChatAttr.getInstance().sizeUserFileSize
-                )
-            }
-            TypeFile.IMAGE -> {
-                fileInfo?.visibility = View.GONE
-                media?.apply {
-                    visibility = View.VISIBLE
-                    settingMediaFile(true)
-                    loadMediaFile(item.id, item.file, updateData, true, true, warningContainer)
-                }
-            }
-            TypeFile.GIF -> {
-                fileInfo?.visibility = View.GONE
-                media?.apply {
-                    visibility = View.VISIBLE
-                    settingMediaFile(true)
-                    loadMediaFile(item.id, item.file, updateData, true, true, warningContainer, true)
-                }
-            }
-        }
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderOperatorGifMessage.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderOperatorGifMessage.kt b/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderOperatorGifMessage.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderOperatorGifMessage.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,82 +0,0 @@
-package com.crafttalk.chat.presentation.holders
-
-import android.content.res.ColorStateList
-import android.view.View
-import android.view.ViewGroup
-import android.widget.ImageView
-import android.widget.TextView
-import androidx.core.view.ViewCompat
-import com.crafttalk.chat.R
-import com.crafttalk.chat.domain.entity.file.TypeFile
-import com.crafttalk.chat.presentation.base.BaseViewHolder
-import com.crafttalk.chat.presentation.helper.extensions.*
-import com.crafttalk.chat.presentation.model.GifMessageItem
-import com.crafttalk.chat.utils.ChatAttr
-
-class HolderOperatorGifMessage(
-    view: View,
-    private val download: (fileName: String, fileUrl: String, fileType: TypeFile) -> Unit,
-    private val updateData: (id: String, height: Int, width: Int) -> Unit,
-    private val clickHandler: (gifName: String, gifUrl: String) -> Unit
-) : BaseViewHolder<GifMessageItem>(view), View.OnClickListener {
-    private val contentContainer: View? = view.findViewById(R.id.content_container)
-    private val warningContainer: ViewGroup? = view.findViewById(R.id.server_gif_warning)
-
-    private val gif: ImageView? = view.findViewById(R.id.server_gif)
-    private val downloadGif: TextView? = view.findViewById(R.id.download_file)
-    private val authorName: TextView? = view.findViewById(R.id.author_name)
-    private val authorPreview: ImageView? = view.findViewById(R.id.author_preview)
-    private val time: TextView? = view.findViewById(R.id.time)
-    private val status: ImageView? = view.findViewById(R.id.status)
-    private val date: TextView? = view.findViewById(R.id.date)
-
-    private var gifUrl: String? = null
-    private var gifName: String? = null
-    private var failLoading: Boolean = false
-
-    init {
-        gif?.setOnClickListener(this)
-        downloadGif?.setOnClickListener(this)
-    }
-
-    override fun onClick(view: View) {
-        when (view.id) {
-            R.id.server_gif -> {
-                if (!failLoading) {
-                    val name = gifName ?: return
-                    val url = gifUrl ?: return
-                    clickHandler(name, url)
-                }
-            }
-            R.id.download_file -> {
-                val name = gifName ?: return
-                val url = gifUrl ?: return
-                download(name, url, TypeFile.GIF)
-            }
-        }
-    }
-
-    override fun bindTo(item: GifMessageItem) {
-        gifUrl = item.gif.url
-        gifName = item.gif.name.toString()
-        failLoading = item.gif.failLoading
-
-        date?.setDate(item)
-        // set content
-        authorName?.setAuthor(item)
-        authorPreview?.setAuthorIcon(item.authorPreview)
-        time?.setTime(item)
-        status?.setStatusMessage(item)
-        gif?.apply {
-            settingMediaFile()
-            loadMediaFile(item.id, item.gif, updateData, false, false, warningContainer, true)
-        }
-        downloadGif?.settingDownloadBtn(false, failLoading)
-        // set bg
-        contentContainer?.apply {
-            setBackgroundResource(ChatAttr.getInstance().bgOperatorMessageResId)
-            ViewCompat.setBackgroundTintList(this, ColorStateList.valueOf(ChatAttr.getInstance().colorBackgroundOperatorMediaFileMessage))
-        }
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderOperatorTextMessage.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderOperatorTextMessage.kt b/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderOperatorTextMessage.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderOperatorTextMessage.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,123 +0,0 @@
-package com.crafttalk.chat.presentation.holders
-
-import android.content.res.ColorStateList
-import android.view.View
-import android.view.ViewGroup
-import android.widget.ImageView
-import android.widget.ProgressBar
-import android.widget.TextView
-import androidx.core.view.ViewCompat
-import androidx.recyclerview.widget.RecyclerView
-import com.crafttalk.chat.R
-import com.crafttalk.chat.presentation.adapters.AdapterAction
-import com.crafttalk.chat.presentation.adapters.AdapterButton
-import com.crafttalk.chat.presentation.base.BaseViewHolder
-import com.crafttalk.chat.presentation.helper.extensions.*
-import com.crafttalk.chat.presentation.helper.ui.bindRepliedMessage
-import com.crafttalk.chat.presentation.model.TextMessageItem
-import com.crafttalk.chat.utils.ChatAttr
-
-class HolderOperatorTextMessage(
-    view: View,
-    private val selectReplyMessage: (messageId: String) -> Unit,
-    private val updateData: (id: String, height: Int, width: Int) -> Unit,
-    private val selectAction: (messageId: String, actionId: String) -> Unit,
-    private val selectButton: (messageId: String, actionId: String, buttonId: String) -> Unit
-) : BaseViewHolder<TextMessageItem>(view), View.OnClickListener {
-    private val contentContainer: View? = view.findViewById(R.id.content_container)
-
-    private val message: TextView? = view.findViewById(R.id.server_message)
-    private val repliedMessageContainer: ViewGroup? = view.findViewById(R.id.replied_message_container)
-    private val repliedBarrier: View? = view.findViewById(R.id.replied_barrier)
-    private val repliedMessage: TextView? = view.findViewById(R.id.replied_message)
-    private val repliedFileInfo: ViewGroup? = view.findViewById(R.id.replied_file_info)
-    private val repliedFileIcon: ImageView? = view.findViewById(R.id.file_icon)
-    private val repliedProgressDownload: ProgressBar? = view.findViewById(R.id.progress_download)
-    private val repliedFileName: TextView? = view.findViewById(R.id.file_name)
-    private val repliedFileSize: TextView? = view.findViewById(R.id.file_size)
-    private val repliedMediaFile: ImageView? = view.findViewById(R.id.replied_media_file)
-    private val repliedMediaFileWarning: ViewGroup? = view.findViewById(R.id.replied_media_file_warning)
-    private val listActions: RecyclerView? = view.findViewById(R.id.actions_list)
-    private val listButtons: RecyclerView? = view.findViewById(R.id.buttons_list)
-    private val authorName: TextView? = view.findViewById(R.id.author_name)
-    private val authorPreview: ImageView? = view.findViewById(R.id.author_preview)
-    private val time: TextView? = view.findViewById(R.id.time)
-    private val status: ImageView? = view.findViewById(R.id.status)
-    private val date: TextView? = view.findViewById(R.id.date)
-
-    private var replyMessageId: String? = null
-
-    init {
-        repliedMessageContainer?.setOnClickListener(this)
-    }
-
-    override fun onClick(view: View) {
-        when (view.id) {
-            R.id.replied_message_container -> replyMessageId?.run(selectReplyMessage)
-        }
-    }
-
-    override fun bindTo(item: TextMessageItem) {
-        replyMessageId = item.repliedMessage?.id
-
-        date?.setDate(item)
-        // set content
-        authorName?.setAuthor(item)
-        authorPreview?.setAuthorIcon(item.authorPreview)
-        time?.setTime(item)
-        status?.setStatusMessage(item)
-        message?.setMessageText(
-            textMessage = item.message,
-            maxWidthTextMessage = ChatAttr.getInstance().widthItemOperatorTextMessage,
-            colorTextMessage = ChatAttr.getInstance().colorTextOperatorMessage,
-            colorTextLinkMessage = ChatAttr.getInstance().colorTextLinkOperatorMessage,
-            sizeTextMessage = ChatAttr.getInstance().sizeTextOperatorMessage,
-            resFontFamilyMessage = ChatAttr.getInstance().resFontFamilyOperatorMessage,
-            isClickableLink = true,
-            isSelectableText = true,
-            bindContinue = {
-                listActions?.apply {
-                    if (item.actions == null) {
-                        visibility = View.GONE
-                    } else {
-                        adapter = AdapterAction(item.id, item.hasSelectedAction, selectAction).apply {
-                            this.data = item.actions
-                        }
-                        visibility = View.VISIBLE
-                    }
-                }
-                listButtons?.apply {
-                    if (item.buttons == null) {
-                        visibility = View.GONE
-                    } else {
-                        adapter = AdapterButton(item.id, item.hasSelectedButton, selectButton).apply {
-                            this.data = item.buttons
-                        }
-                        visibility = View.VISIBLE
-                    }
-                }
-            }
-        )
-        bindRepliedMessage(
-            itemId = item.id,
-            itemRepliedMessage = item.repliedMessage,
-            isUserMessage = false,
-            repliedMessageContainer = repliedMessageContainer,
-            repliedBarrier = repliedBarrier,
-            repliedMessage = repliedMessage,
-            repliedFileInfo = repliedFileInfo,
-            repliedFileIcon = repliedFileIcon,
-            repliedProgressDownload = repliedProgressDownload,
-            repliedFileName = repliedFileName,
-            repliedFileSize = repliedFileSize,
-            repliedMediaFile = repliedMediaFile,
-            repliedMediaFileWarning = repliedMediaFileWarning,
-            updateData = updateData
-        )
-        // set bg
-        contentContainer?.apply {
-            setBackgroundResource(ChatAttr.getInstance().bgOperatorMessageResId)
-            ViewCompat.setBackgroundTintList(this, ColorStateList.valueOf(ChatAttr.getInstance().colorBackgroundOperatorMessage))
-        }
-    }
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkSearch.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkSearch.kt b/chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkSearch.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkSearch.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,5 +0,0 @@
-package com.crafttalk.chat.domain.entity.message
-
-data class NetworkSearch(
-    val messages: List<NetworkMessage>
-)
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/di/apiAnnotation.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/di/apiAnnotation.kt b/chat/src/main/java/com/crafttalk/chat/di/apiAnnotation.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/di/apiAnnotation.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,11 +0,0 @@
-package com.crafttalk.chat.di
-
-import javax.inject.Qualifier
-
-@Qualifier
-@Retention(value = AnnotationRetention.RUNTIME)
-annotation class Base
-
-@Qualifier
-@Retention(value = AnnotationRetention.RUNTIME)
-annotation class Upload
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/api/rest/PersonApi.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/api/rest/PersonApi.kt b/chat/src/main/java/com/crafttalk/chat/data/api/rest/PersonApi.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/api/rest/PersonApi.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,21 +0,0 @@
-package com.crafttalk.chat.data.api.rest
-
-import com.crafttalk.chat.domain.entity.person.NetworkResultPersonPreview
-import com.crafttalk.chat.utils.ChatParams
-import retrofit2.Call
-import retrofit2.http.GET
-import retrofit2.http.Header
-import retrofit2.http.Path
-import retrofit2.http.Query
-
-interface PersonApi {
-
-    @GET("webchat/{clientId}/get-operator/{personId}")
-    fun getPersonPreview(
-        @Header("Cookie") cookie: String = "webchat-${ChatParams.urlChatNameSpace}-uuid=${ChatParams.visitorUuid}",
-        @Header("ct-webchat-client-id") uuid: String = ChatParams.visitorUuid,
-        @Path("clientId") clientId: String = ChatParams.urlChatNameSpace!!,
-        @Path("personId") personId : String,
-        @Query("auth_token") visitorToken: String
-    ) : Call<NetworkResultPersonPreview>
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/local/db/database/ChatDatabase.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/local/db/database/ChatDatabase.kt b/chat/src/main/java/com/crafttalk/chat/data/local/db/database/ChatDatabase.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/local/db/database/ChatDatabase.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,31 +0,0 @@
-package com.crafttalk.chat.data.local.db.database
-
-import androidx.room.Database
-import androidx.room.RoomDatabase
-import androidx.room.TypeConverters
-import com.crafttalk.chat.data.local.db.dao.FileDao
-import com.crafttalk.chat.data.local.db.dao.MessagesDao
-import com.crafttalk.chat.data.local.db.dao.PersonDao
-import com.crafttalk.chat.data.local.db.entity.FileEntity
-import com.crafttalk.chat.data.local.db.entity.MessageEntity
-import com.crafttalk.chat.data.local.db.entity.PersonEntity
-import com.crafttalk.chat.data.local.db.entity.converters.*
-
-@Database(
-    entities = [MessageEntity::class, PersonEntity::class, FileEntity::class],
-    version = 7,
-    exportSchema = false
-)
-@TypeConverters(
-    WidgetContainer::class,
-    ActionConverter::class,
-    KeyboardConverter::class,
-    TypeFileConverter::class,
-    TypeDownloadProgressConverter::class,
-    SpanStructureListConverter::class
-)
-abstract class ChatDatabase : RoomDatabase() {
-    abstract fun messageDao(): MessagesDao
-    abstract fun personDao(): PersonDao
-    abstract fun fileDao(): FileDao
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/repository/IVisitorRepository.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/repository/IVisitorRepository.kt b/chat/src/main/java/com/crafttalk/chat/domain/repository/IVisitorRepository.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/repository/IVisitorRepository.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,11 +0,0 @@
-package com.crafttalk.chat.domain.repository
-
-import com.crafttalk.chat.domain.entity.auth.Visitor
-
-interface IVisitorRepository {
-    fun getVisitorFromClient(): Visitor?
-    fun setVisitorFromClient(visitor: Visitor?)
-    fun getVisitorFromSharedPreferences(): Visitor?
-    fun saveVisitor(visitor: Visitor)
-    fun deleteVisitor()
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/entity/notification/NetworkUnsubscription.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/entity/notification/NetworkUnsubscription.kt b/chat/src/main/java/com/crafttalk/chat/domain/entity/notification/NetworkUnsubscription.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/entity/notification/NetworkUnsubscription.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,5 +0,0 @@
-package com.crafttalk.chat.domain.entity.notification
-
-class NetworkUnsubscription(
-    val uuid: String
-)
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/interactors/PersonInteractor.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/interactors/PersonInteractor.kt b/chat/src/main/java/com/crafttalk/chat/domain/interactors/PersonInteractor.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/interactors/PersonInteractor.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,12 +0,0 @@
-package com.crafttalk.chat.domain.interactors
-
-import com.crafttalk.chat.domain.repository.IPersonRepository
-import javax.inject.Inject
-
-class PersonInteractor
-@Inject constructor(
-    private val personRepository: IPersonRepository
-) {
-    suspend fun updatePersonName(personId: String?, currentPersonName: String?) = personRepository.updatePersonName(personId, currentPersonName)
-    suspend fun getPersonPreview(personId: String, visitorToken: String): String? = personRepository.getPersonPreview(personId, visitorToken)
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/ContentTypeValue.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/ContentTypeValue.kt b/chat/src/main/java/com/crafttalk/chat/data/ContentTypeValue.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/ContentTypeValue.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,6 +0,0 @@
-package com.crafttalk.chat.data
-
-enum class ContentTypeValue(val value: String) {
-    TEXT_PLAIN("text/plain"),
-    MEDIA("multipart/digest")
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/custom_views/custom_snackbar/WarningSnackbar.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/custom_views/custom_snackbar/WarningSnackbar.kt b/chat/src/main/java/com/crafttalk/chat/presentation/custom_views/custom_snackbar/WarningSnackbar.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/custom_views/custom_snackbar/WarningSnackbar.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,82 +0,0 @@
-package com.crafttalk.chat.presentation.custom_views.custom_snackbar
-
-import android.view.LayoutInflater
-import android.view.View
-import android.view.ViewGroup
-import androidx.annotation.ColorRes
-import androidx.annotation.DrawableRes
-import androidx.core.content.ContextCompat
-import com.crafttalk.chat.R
-import com.crafttalk.chat.presentation.custom_views.custom_snackbar.binding.findSuitableParent
-import com.crafttalk.chat.utils.ChatAttr
-import com.crafttalk.chat.utils.TypeFailUpload
-import com.google.android.material.snackbar.BaseTransientBottomBar
-
-class WarningSnackbar(
-    parent: ViewGroup,
-    content: WarningSnackbarView
-) : BaseTransientBottomBar<WarningSnackbar>(parent, content, content) {
-
-    init {
-        getView().setBackgroundColor(ContextCompat.getColor(view.context, android.R.color.transparent))
-        getView().setPadding(0, 0, 0, 0)
-    }
-
-    companion object {
-        fun make(
-            view: View,
-            parentViewGroup: ViewGroup? = null,
-            typeFailUpload: TypeFailUpload? = null,
-            title: String? = null,
-            description: String? = null,
-            @DrawableRes iconRes: Int = R.drawable.com_crafttalk_chat_ic_warning,
-            @ColorRes textColor: Int = ChatAttr.getInstance().colorFailDownloadFileWarning,
-            @ColorRes backgroundColor: Int = ChatAttr.getInstance().backgroundFailDownloadFileWarning
-        ): WarningSnackbar? {
-            val parent = parentViewGroup ?: view.findSuitableParent() ?: return null
-
-            val customView = LayoutInflater.from(view.context).inflate(
-                R.layout.com_crafttalk_chat_layout_warning_snackbar,
-                parent,
-                false
-            ) as WarningSnackbarView
-
-            when (typeFailUpload) {
-                TypeFailUpload.LARGE -> customView.bind(
-                    R.string.com_crafttalk_chat_warning_snackbar_large_title,
-                    R.string.com_crafttalk_chat_warning_snackbar_large_description,
-                    iconRes,
-                    textColor,
-                    backgroundColor
-                )
-                TypeFailUpload.NOT_SUPPORT_TYPE, TypeFailUpload.DEFAULT -> customView.bind(
-                    R.string.com_crafttalk_chat_warning_snackbar_not_support_type_title,
-                    R.string.com_crafttalk_chat_warning_snackbar_not_support_type_description,
-                    iconRes,
-                    textColor,
-                    backgroundColor
-                )
-                TypeFailUpload.TIMEOUT -> customView.bind(
-                    R.string.com_crafttalk_chat_warning_snackbar_not_support_type_title,
-                    null,
-                    iconRes,
-                    textColor,
-                    backgroundColor
-                )
-                else -> customView.bind(
-                    title,
-                    description,
-                    iconRes,
-                    textColor,
-                    backgroundColor
-                )
-            }
-
-            return WarningSnackbar(
-                parent,
-                customView
-            )
-        }
-    }
-
-}
\ No newline at end of file
Index: chat/google-services.json
===================================================================
diff --git a/chat/google-services.json b/chat/google-services.json
deleted file mode 100644
--- a/chat/google-services.json	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,47 +0,0 @@
-{
-  "project_info": {
-    "project_number": "368961329931",
-    "firebase_url": "https://crafttalk-2d2f5.firebaseio.com",
-    "project_id": "crafttalk-2d2f5",
-    "storage_bucket": "crafttalk-2d2f5.appspot.com"
-  },
-  "client": [
-    {
-      "client_info": {
-        "mobilesdk_app_id": "1:368961329931:android:0d9e43521693a05c93600e",
-        "android_client_info": {
-          "package_name": "com.crafttalk.chat"
-        }
-      },
-      "oauth_client": [
-        {
-          "client_id": "368961329931-t981esq7devigorvrotmb2t8oc8sfabn.apps.googleusercontent.com",
-          "client_type": 3
-        }
-      ],
-      "api_key": [
-        {
-          "current_key": "AIzaSyByuu_vGQlXPG2X1UkildmgjcTBrwl7A-Q"
-        }
-      ],
-      "services": {
-        "appinvite_service": {
-          "other_platform_oauth_client": [
-            {
-              "client_id": "368961329931-t981esq7devigorvrotmb2t8oc8sfabn.apps.googleusercontent.com",
-              "client_type": 3
-            },
-            {
-              "client_id": "368961329931-us7l44p4joollvpsj24upr9ed6reojgj.apps.googleusercontent.com",
-              "client_type": 2,
-              "ios_info": {
-                "bundle_id": "com.crafttalk.chat"
-              }
-            }
-          ]
-        }
-      }
-    }
-  ],
-  "configuration_version": "1"
-}
\ No newline at end of file
Index: chat/src/main/res/layout/com_crafttalk_chat_item_info_message.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_item_info_message.xml b/chat/src/main/res/layout/com_crafttalk_chat_item_info_message.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_item_info_message.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,25 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content">
-
-    <TextView
-        android:id="@+id/info_message"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:gravity="start"
-        android:paddingStart="36dp"
-        android:paddingTop="22dp"
-        android:paddingEnd="36dp"
-        android:paddingBottom="22dp"
-        android:fontFamily="@font/com_crafttalk_chat_ubuntu_regular"
-        android:textFontWeight="600"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        tools:text="Оператор Тест подключился к диалогу" />
-
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/helper/extensions/ProgressBar.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/helper/extensions/ProgressBar.kt b/chat/src/main/java/com/crafttalk/chat/presentation/helper/extensions/ProgressBar.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/helper/extensions/ProgressBar.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,12 +0,0 @@
-package com.crafttalk.chat.presentation.helper.extensions
-
-import android.view.View
-import android.widget.ProgressBar
-import com.crafttalk.chat.domain.entity.file.TypeDownloadProgress
-
-fun ProgressBar.setProgressDownloadFile(typeDownloadProgress: TypeDownloadProgress) {
-    visibility = when (typeDownloadProgress) {
-        TypeDownloadProgress.NOT_DOWNLOADED, TypeDownloadProgress.DOWNLOADED -> View.INVISIBLE
-        TypeDownloadProgress.DOWNLOADING -> View.VISIBLE
-    }
-}
\ No newline at end of file
Index: chat/src/main/res/layout/com_crafttalk_chat_item_server_text_message.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_item_server_text_message.xml b/chat/src/main/res/layout/com_crafttalk_chat_item_server_text_message.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_item_server_text_message.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,99 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:layout_marginStart="@dimen/com_crafttalk_chat_message_margin_start"
-    android:layout_marginTop="@dimen/com_crafttalk_chat_message_margin_top"
-    android:layout_marginEnd="@dimen/com_crafttalk_chat_message_margin_end"
-    android:layout_marginBottom="@dimen/com_crafttalk_chat_message_margin_bottom">
-
-    <include
-        android:id="@+id/include_date"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        layout="@layout/com_crafttalk_chat_include_date_message" />
-
-    <View
-        android:id="@+id/content_container"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        app:layout_constraintStart_toStartOf="@id/server_message"
-        app:layout_constraintTop_toTopOf="@id/replied_message_container"
-        app:layout_constraintEnd_toEndOf="@id/barrier_content_end"
-        app:layout_constraintBottom_toBottomOf="@id/server_message"
-        tools:background="@drawable/com_crafttalk_chat_background_item_simple_server_message" />
-
-    <include
-        android:id="@+id/replied_message_container"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:visibility="gone"
-        layout="@layout/com_crafttalk_chat_include_replied_message"
-        app:layout_constraintTop_toBottomOf="@id/include_date"
-        app:layout_constraintStart_toStartOf="parent"
-        tools:visibility="visible" />
-
-    <TextView
-        android:id="@+id/server_message"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:gravity="start"
-        android:autoLink="email|web"
-        android:paddingStart="@dimen/com_crafttalk_chat_message_content_padding_start"
-        android:paddingTop="@dimen/com_crafttalk_chat_message_content_padding_top"
-        android:paddingEnd="@dimen/com_crafttalk_chat_message_content_padding_end"
-        android:paddingBottom="@dimen/com_crafttalk_chat_message_content_padding_bottom"
-        android:fontFamily="@font/com_crafttalk_chat_ubuntu_light"
-        android:textFontWeight="300"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/replied_message_container"
-        tools:text="Привет, мое имя Бот" />
-
-    <androidx.constraintlayout.widget.Barrier
-        android:id="@+id/barrier_content_end"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        app:barrierDirection="end"
-        app:constraint_referenced_ids="replied_message_container,server_message" />
-
-    <androidx.recyclerview.widget.RecyclerView
-        android:id="@+id/actions_list"
-        android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="6dp"
-        android:nestedScrollingEnabled="true"
-        app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
-        app:layout_constraintTop_toBottomOf="@id/content_container"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        tools:listitem="@layout/com_crafttalk_chat_item_action"
-        tools:itemCount="3"
-        tools:visibility="visible" />
-
-    <androidx.recyclerview.widget.RecyclerView
-        android:id="@+id/buttons_list"
-        android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="6dp"
-        android:nestedScrollingEnabled="true"
-        app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
-        app:layout_constraintTop_toBottomOf="@id/actions_list"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        tools:listitem="@layout/com_crafttalk_chat_item_action"
-        tools:itemCount="3"
-        tools:visibility="visible" />
-
-    <include
-        android:id="@+id/include_message_info"
-        android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        layout="@layout/com_crafttalk_chat_include_server_message_info"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/buttons_list" />
-
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/di/modules/chat/ViewModelModule.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/di/modules/chat/ViewModelModule.kt b/chat/src/main/java/com/crafttalk/chat/di/modules/chat/ViewModelModule.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/di/modules/chat/ViewModelModule.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,45 +0,0 @@
-package com.crafttalk.chat.di.modules.chat
-
-import android.content.Context
-import androidx.fragment.app.Fragment
-import androidx.lifecycle.ViewModelProvider
-import com.crafttalk.chat.di.ChatScope
-import com.crafttalk.chat.domain.interactors.*
-import com.crafttalk.chat.presentation.ChatViewModel
-import com.crafttalk.chat.presentation.ChatViewModelFactory
-import dagger.Module
-import dagger.Provides
-
-@Module
-class ViewModelModule {
-
-    @Provides
-    @ChatScope
-    fun provideChatViewModelFactory(
-        authChatInteractor: AuthInteractor,
-        messageInteractor: MessageInteractor,
-        searchInteractor: SearchInteractor,
-        fileInteractor: FileInteractor,
-        conditionInteractor: ConditionInteractor,
-        feedbackInteractor: FeedbackInteractor,
-        configurationInteractor: ConfigurationInteractor,
-        context: Context
-    ): ChatViewModelFactory = ChatViewModelFactory(
-        authChatInteractor,
-        messageInteractor,
-        searchInteractor,
-        fileInteractor,
-        conditionInteractor,
-        feedbackInteractor,
-        configurationInteractor,
-        context
-    )
-
-    @Provides
-    @ChatScope
-    fun provideChatViewModel(
-        parentFragment: Fragment,
-        chatViewModelFactory: ChatViewModelFactory
-    ): ChatViewModel = ViewModelProvider(parentFragment, chatViewModelFactory).get(ChatViewModel::class.java)
-
-}
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_ic_refresh.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_ic_refresh.xml b/chat/src/main/res/drawable/com_crafttalk_chat_ic_refresh.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_ic_refresh.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,10 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="24dp"
-    android:height="24dp"
-    android:viewportWidth="24"
-    android:viewportHeight="24"
-    android:tint="?attr/colorControlNormal">
-  <path
-      android:fillColor="@android:color/black"
-      android:pathData="M17.65,6.35C16.2,4.9 14.21,4 12,4c-4.42,0 -7.99,3.58 -7.99,8s3.57,8 7.99,8c3.73,0 6.84,-2.55 7.73,-6h-2.08c-0.82,2.33 -3.04,4 -5.65,4 -3.31,0 -6,-2.69 -6,-6s2.69,-6 6,-6c1.66,0 3.14,0.69 4.22,1.78L13,11h7V4l-2.35,2.35z"/>
-</vector>
Index: chat/src/main/java/com/crafttalk/chat/presentation/model/RepliedMessageModel.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/model/RepliedMessageModel.kt b/chat/src/main/java/com/crafttalk/chat/presentation/model/RepliedMessageModel.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/model/RepliedMessageModel.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,54 +0,0 @@
-package com.crafttalk.chat.presentation.model
-
-import android.content.Context
-import android.text.SpannableString
-import com.crafttalk.chat.data.local.db.entity.MessageEntity
-import com.crafttalk.chat.domain.entity.file.TypeDownloadProgress
-import com.crafttalk.chat.domain.entity.file.TypeFile
-import com.crafttalk.chat.presentation.helper.converters.convertToSpannableString
-
-data class RepliedMessageModel(
-    val id: String,
-    val textMessage: SpannableString? = null,
-    val file: FileModel? = null
-) {
-
-    companion object {
-
-        fun map(localMessage: MessageEntity, context: Context): RepliedMessageModel? {
-            val repliedMessageId = localMessage.repliedMessageId ?: return null
-            val repliedMessageText = localMessage.repliedMessageText?.convertToSpannableString(!localMessage.isReply, localMessage.repliedTextSpanStructureList, context)
-
-            val isNotAttachmentFile = localMessage.repliedMessageAttachmentUrl == null ||
-                    localMessage.repliedMessageAttachmentType == null ||
-                    localMessage.repliedMessageAttachmentName == null
-
-            if (repliedMessageText == null && isNotAttachmentFile) {
-                return null
-            } else {
-                val file = if (isNotAttachmentFile) {
-                    null
-                } else {
-                    FileModel(
-                        url = localMessage.repliedMessageAttachmentUrl!!,
-                        name = SpannableString(localMessage.repliedMessageAttachmentName ?: ""),
-                        size = localMessage.repliedMessageAttachmentSize,
-                        height = localMessage.repliedMessageAttachmentHeight,
-                        width = localMessage.repliedMessageAttachmentWidth,
-                        failLoading = (localMessage.repliedMessageAttachmentType in listOf( TypeFile.IMAGE, TypeFile.GIF)) && (localMessage.height == null || localMessage.height == 0 || localMessage.width == null || localMessage.width == 0),
-                        type = localMessage.repliedMessageAttachmentType,
-                        typeDownloadProgress = localMessage.repliedMessageAttachmentDownloadProgressType ?: TypeDownloadProgress.NOT_DOWNLOADED
-                    )
-                }
-
-                return RepliedMessageModel(
-                    id = repliedMessageId,
-                    textMessage = repliedMessageText,
-                    file = file
-                )
-            }
-        }
-
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/res/layout/com_crafttalk_chat_include_search.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_include_search.xml b/chat/src/main/res/layout/com_crafttalk_chat_include_search.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_include_search.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:paddingTop="8dp"
-    android:paddingStart="8dp"
-    android:paddingBottom="8dp">
-
-    <EditText
-        android:id="@+id/search_input"
-        android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        android:minHeight="40dp"
-        android:hint="@string/com_crafttalk_chat_search_hint"
-        android:drawableStart="@drawable/com_crafttalk_chat_ic_search"
-        android:drawableEnd="@drawable/com_crafttalk_chat_ic_search_close"
-        android:drawablePadding="4dp"
-        android:paddingStart="4dp"
-        android:paddingEnd="4dp"
-        android:background="@drawable/com_crafttalk_chat_background_search_input_field"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toStartOf="@id/search_cancel" />
-
-    <TextView
-        android:id="@+id/search_cancel"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="@string/com_crafttalk_chat_search_cancel"
-        android:textColor="@color/com_crafttalk_chat_blue_005cb2"
-        android:paddingStart="16dp"
-        android:paddingEnd="8dp"
-        android:paddingVertical="8dp"
-        app:layout_constraintTop_toTopOf="@id/search_input"
-        app:layout_constraintBottom_toBottomOf="@id/search_input"
-        app:layout_constraintEnd_toEndOf="parent" />
-
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/helper/converters/file/mediaConverter.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/helper/converters/file/mediaConverter.kt b/chat/src/main/java/com/crafttalk/chat/data/helper/converters/file/mediaConverter.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/helper/converters/file/mediaConverter.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,31 +0,0 @@
-package com.crafttalk.chat.data.helper.converters.file
-
-import android.content.Context
-import android.graphics.Bitmap
-import java.io.*
-
-fun convertToFile(bitmap: Bitmap, context: Context, fileName: String): File {
-    val file = File(context.cacheDir, fileName)
-    file.createNewFile()
-
-    //Convert bitmap to byte array
-    val bos = ByteArrayOutputStream()
-    bitmap.compress(Bitmap.CompressFormat.JPEG, 0 /*ignored for PNG*/, bos)
-    val bitMapData = bos.toByteArray()
-
-    //write the bytes in file
-    var fos: FileOutputStream? = null
-    try {
-        fos = FileOutputStream(file)
-    } catch (e: FileNotFoundException) {
-        e.printStackTrace()
-    }
-    try {
-        fos?.write(bitMapData)
-        fos?.flush()
-        fos?.close()
-    } catch (e: IOException) {
-        e.printStackTrace()
-    }
-    return file
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/helper/file_viewer_helper/gellery/TakePicture.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/helper/file_viewer_helper/gellery/TakePicture.kt b/chat/src/main/java/com/crafttalk/chat/presentation/helper/file_viewer_helper/gellery/TakePicture.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/helper/file_viewer_helper/gellery/TakePicture.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,26 +0,0 @@
-package com.crafttalk.chat.presentation.helper.file_viewer_helper.gellery
-
-import android.app.Activity
-import android.content.Context
-import android.content.Intent
-import android.net.Uri
-import android.provider.MediaStore
-import androidx.activity.result.contract.ActivityResultContract
-import androidx.annotation.CallSuper
-
-internal class TakePicture : ActivityResultContract<Uri, Uri?>() {
-
-    private var uri: Uri? = null
-
-    @CallSuper
-    override fun createIntent(context: Context, input: Uri): Intent {
-        uri = input
-        return Intent(MediaStore.ACTION_IMAGE_CAPTURE).putExtra(MediaStore.EXTRA_OUTPUT, input)
-    }
-
-    override fun parseResult(resultCode: Int, intent: Intent?): Uri? {
-        return if(resultCode == Activity.RESULT_OK) uri
-        else null
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/model/ButtonModel.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/model/ButtonModel.kt b/chat/src/main/java/com/crafttalk/chat/presentation/model/ButtonModel.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/model/ButtonModel.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,34 +0,0 @@
-package com.crafttalk.chat.presentation.model
-
-import androidx.annotation.ColorInt
-import androidx.annotation.DrawableRes
-import com.crafttalk.chat.R
-import com.crafttalk.chat.domain.entity.message.NetworkButtonOperation
-import com.crafttalk.chat.presentation.base.BaseItem
-
-data class ButtonsListItem(
-    val buttons: List<ButtonItem>
-) : BaseItem() {
-    override fun getLayout() = R.layout.com_crafttalk_chat_item_buttons
-
-    override fun <T : BaseItem> isSame(item: T): Boolean {
-        return item is ButtonsListItem && item.buttons.hashCode() == hashCode()
-    }
-}
-
-data class ButtonItem(
-    val id: String,
-    val text: String,
-    val action: String,
-    val typeOperation: NetworkButtonOperation,
-    val isSelected: Boolean,
-    val imageUrl: String?,
-    val imageEmoji: String?,
-    @ColorInt val textColor: Int,
-    @DrawableRes val backgroundRes: Int,
-    val width: Int,
-    val marginTop: Int,
-    val marginBottom: Int,
-    val marginStart: Int,
-    val marginEnd: Int
-)
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderOperatorFileMessage.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderOperatorFileMessage.kt b/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderOperatorFileMessage.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderOperatorFileMessage.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,77 +0,0 @@
-package com.crafttalk.chat.presentation.holders
-
-import android.content.res.ColorStateList
-import android.view.View
-import android.widget.ImageView
-import android.widget.ProgressBar
-import android.widget.TextView
-import androidx.core.view.ViewCompat
-import com.crafttalk.chat.R
-import com.crafttalk.chat.presentation.base.BaseViewHolder
-import com.crafttalk.chat.presentation.helper.extensions.*
-import com.crafttalk.chat.presentation.model.FileMessageItem
-import com.crafttalk.chat.utils.ChatAttr
-
-class HolderOperatorFileMessage(
-    val view: View,
-    private val clickHandler: (id: String, documentName: String, documentUrl: String) -> Unit
-) : BaseViewHolder<FileMessageItem>(view), View.OnClickListener {
-    private val contentContainer: View? = view.findViewById(R.id.content_container)
-
-    private val fileIcon: ImageView? = view.findViewById(R.id.file_icon)
-    private val progressDownload: ProgressBar? = view.findViewById(R.id.progress_download)
-    private val fileName: TextView? = view.findViewById(R.id.file_name)
-    private val fileSize: TextView? = view.findViewById(R.id.file_size)
-    private val authorName: TextView? = view.findViewById(R.id.author_name)
-    private val authorPreview: ImageView? = view.findViewById(R.id.author_preview)
-    private val time: TextView? = view.findViewById(R.id.time)
-    private val status: ImageView? = view.findViewById(R.id.status)
-    private val date: TextView? = view.findViewById(R.id.date)
-
-    private var id: String? = null
-    private var documentName: String? = null
-    private var documentUrl: String? = null
-
-    init {
-        view.setOnClickListener(this)
-    }
-
-    override fun onClick(view: View) {
-        val correctId = id ?: return
-        val correctDocumentName = documentName ?: return
-        val correctDocumentUrl = documentUrl ?: return
-        clickHandler(correctId, correctDocumentName, correctDocumentUrl)
-    }
-
-    override fun bindTo(item: FileMessageItem) {
-        id = item.id
-        documentName = item.document.name.toString()
-        documentUrl = item.document.url
-
-        date?.setDate(item)
-        // set content
-        authorName?.setAuthor(item)
-        authorPreview?.setAuthorIcon(item.authorPreview)
-        time?.setTime(item)
-        status?.setStatusMessage(item)
-        // set width item and content
-        progressDownload?.setProgressDownloadFile(item.document.typeDownloadProgress)
-        fileIcon?.setFileIcon(item.document.typeDownloadProgress)
-        fileName?.setFileName(
-            file = item.document,
-            colorTextFileName = ChatAttr.getInstance().colorOperatorFileName,
-            sizeTextFileName = ChatAttr.getInstance().sizeOperatorFileName
-        )
-        fileSize?.setFileSize(
-            file = item.document,
-            colorTextFileSize = ChatAttr.getInstance().colorOperatorFileSize,
-            sizeTextFileSize = ChatAttr.getInstance().sizeOperatorFileSize
-        )
-        // set bg
-        contentContainer?.apply {
-            setBackgroundResource(ChatAttr.getInstance().bgOperatorMessageResId)
-            ViewCompat.setBackgroundTintList(this, ColorStateList.valueOf(ChatAttr.getInstance().colorBackgroundOperatorMessage))
-        }
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/helper/converters/text/htmlConverter.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/helper/converters/text/htmlConverter.kt b/chat/src/main/java/com/crafttalk/chat/data/helper/converters/text/htmlConverter.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/helper/converters/text/htmlConverter.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,313 +0,0 @@
-package com.crafttalk.chat.data.helper.converters.text
-
-import android.os.Build
-import android.text.Html
-import android.util.Log
-import com.crafttalk.chat.domain.entity.tags.*
-import com.crafttalk.chat.utils.ChatParams
-import com.crafttalk.chat.utils.ClickableLinkMode
-import java.util.regex.Matcher
-import java.util.regex.Pattern
-
-fun String.convertTextToNormalString(listTag: ArrayList<Tag>): String {
-    fun <T: Tag> setTagsByPatterns(text: String, regexs: Array<CharSequence>, factory : (startPosition: Int, endPosition: Int, value: String) -> T, listTag: ArrayList<Tag>) {
-        regexs.forEach { regex ->
-            val pattern: Pattern = Pattern.compile(regex.toString())
-            val matcher: Matcher = pattern.matcher(text)
-            while (matcher.find()) {
-                listTag.add(factory(matcher.start(), matcher.end(), matcher.group()))
-            }
-        }
-    }
-    fun String.selectPhones(): String {
-        setTagsByPatterns(
-            this,
-            ChatParams.phonePatterns!!,
-            { startPosition: Int, endPosition: Int, value: String ->
-                PhoneTag(
-                    startPosition,
-                    endPosition,
-                    value
-                        .replace("(", "")
-                        .replace(")", "")
-                        .replace("-", "")
-                        .replace(" ", "")
-                )
-            },
-            listTag
-        )
-        return this
-    }
-    return when {
-        this.replace("\n", "").let {
-            it.matches(Regex(".*<(strong|i|a|img|ul|li|br|p).*")) ||
-            it.matches(Regex(".*&(nbsp|pound|euro|para|sect|copy|reg|trade|deg|plusmn|frac14|frac12|frac34|times|divide|fnof);.*")) ||
-            it.matches(Regex(".*&(larr|uarr|rarr|darr|harr);.*")) ||
-            it.matches(Regex(".*&(spades|clubs|hearts|diams|quot|amp|lt|gt);.*")) ||
-            it.matches(Regex(".*&(hellip|prime|Prime);.*")) ||
-            it.matches(Regex(".*&(ndash|mdash|lsquo|rsquo|sbquo|ldquo|rdquo|bdquo|laquo|raquo);.*")) ||
-            it.matches(Regex(".*&#[0-9]*;.*"))
-        } -> convertFromHtmlTextToNormalString(listTag).selectPhones()
-        else -> convertFromBaseTextToNormalString(listTag).selectPhones()
-    }
-}
-
-fun String.convertFromBaseTextToNormalString(listTag: ArrayList<Tag>): String {
-    fun selectUrl(input: String, protocol: String) {
-        var startIndex = 0
-        startIndex = input.indexOf(protocol, startIndex, true)
-
-        while (startIndex != -1) {
-            val indexSpace = input.indexOf(' ', startIndex, true)
-            val indexNewLine = input.indexOf("\n", startIndex, true)
-            val indexEndSentence = input.indexOf(".\n", startIndex, true)
-            val endIndex = when {
-                indexSpace != -1 && indexNewLine != -1 && indexEndSentence != -1 -> Math.min(Math.min(indexSpace, indexNewLine), indexEndSentence)
-                indexSpace != -1 && indexNewLine != -1 && indexEndSentence == -1 -> Math.min(indexSpace, indexNewLine)
-                indexSpace != -1 && indexNewLine == -1 && indexEndSentence != -1 -> Math.min(indexSpace, indexEndSentence)
-                indexSpace != -1 && indexNewLine == -1 && indexEndSentence == -1 -> indexSpace
-                indexSpace == -1 && indexNewLine != -1 && indexEndSentence != -1 -> Math.min(indexNewLine, indexEndSentence)
-                indexSpace == -1 && indexNewLine != -1 && indexEndSentence == -1 -> indexNewLine
-                indexSpace == -1 && indexNewLine == -1 && indexEndSentence != -1 -> indexEndSentence
-                else -> -1
-            }
-            var url = if (endIndex == -1) {
-                input.substring(startIndex)
-            } else {
-                input.substring(startIndex, endIndex)
-            }
-            if (protocol == "www") {
-                url = "https://$url"
-            }
-            listTag.add(
-                UrlTag(
-                    startIndex,
-                    if (endIndex == -1) input.length - 1 else endIndex - 1,
-                    url
-                )
-            )
-            startIndex = input.indexOf(protocol, startIndex + 1, true)
-        }
-    }
-    when (ChatParams.clickableLinkMode) {
-        ClickableLinkMode.ALL -> {
-            selectUrl(this, "http")
-            selectUrl(this, "ws")
-        }
-        ClickableLinkMode.SECURE -> {
-            selectUrl(this, "https")
-            selectUrl(this, "wss")
-        }
-    }
-//    selectUrl(this, "www")
-    return this
-}
-
-fun String.convertFromHtmlTextToNormalString(listTag: ArrayList<Tag>): String {
-    // атрибуты должны удовлетворять формату: <attrName>="<value>"
-    fun String.getAttrTag(startIndex: Int, isSingleTag: Boolean): AttrTagInfo? {
-        val endTagIndex =
-            if (isSingleTag) this.indexOf("/>", startIndex, true)
-            else this.indexOf(">", startIndex, true)
-        if (endTagIndex <= startIndex || this.substring(startIndex, endTagIndex).trim().isEmpty()) return null
-
-        val separatorIndex = this.indexOf("=", startIndex, true)
-        val startSingleQuotesValueIndex = this.indexOf("\'", separatorIndex + 1, true)
-        val lastSingleQuotesValueIndex = this.indexOf("\'", startSingleQuotesValueIndex + 1, true)
-        val startDoubleQuotesValueIndex = this.indexOf("\"", separatorIndex + 1, true)
-        val lastDoubleQuotesValueIndex = this.indexOf("\"", startDoubleQuotesValueIndex + 1, true)
-
-        val startResultValueIndex = if (startSingleQuotesValueIndex == -1) startDoubleQuotesValueIndex else startSingleQuotesValueIndex
-        val lastResultValueIndex = if (lastSingleQuotesValueIndex == -1) lastDoubleQuotesValueIndex else lastSingleQuotesValueIndex
-
-        return AttrTagInfo(
-            endIndex = lastResultValueIndex,
-            attrTag = AttrTag(
-                this.substring(startIndex, separatorIndex).trim(),
-                this.substring(startResultValueIndex + 1, lastResultValueIndex).trim()
-            )
-        )
-    }
-
-    fun addTag(tagName: String, listAttrs: List<AttrTag>, startIndex: Int, endIndex: Int) {
-        when (tagName) {
-            "strike" -> listTag.add(StrikeTag(startIndex + 1, endIndex))
-            "strong" -> listTag.add(StrongTag(startIndex + 1, endIndex))
-            "b" -> listTag.add(BTag(startIndex + 1, endIndex))
-            "i" -> listTag.add(ItalicTag(startIndex + 1, endIndex))
-            "em" -> listTag.add(EmTag(startIndex + 1, endIndex))
-            "a" -> listTag.add(UrlTag(startIndex + 1, endIndex, listAttrs.find { it.attrName == "href" }?.value ?: ""))
-            "img" -> {
-                listTag.add(
-                    ImageTag(
-                        startIndex + 1,
-                        endIndex,
-                        listAttrs.find { it.attrName == "src" }?.value ?: "",
-                        listAttrs.find { it.attrName == "width" }?.value?.toInt() ?: 0,
-                        listAttrs.find { it.attrName == "height" }?.value?.toInt() ?: 0
-                    )
-                )
-            }
-            "ul" -> {
-                listTag.add(
-                    HostListTag(
-                        startIndex + 1,
-                        endIndex,
-                        ((listTag.findLast { it.javaClass == HostListTag::class && it.pointEnd == -1 } as? HostListTag)?.countNesting ?: -1) + 1
-                    )
-                )
-            }
-            "li" -> {
-                listTag.add(
-                    ItemListTag(
-                        startIndex + 1,
-                        endIndex,
-                        ((listTag.findLast { it.javaClass == HostListTag::class && it.pointEnd == -1 } as? HostListTag)?.countNesting ?: -1) + 1
-                    )
-                )
-            }
-        }
-    }
-    fun addTag(tagName: String, listAttrs: List<AttrTag>, startIndex: Int) {
-        addTag(tagName, listAttrs, startIndex, -1)
-    }
-    fun updateStateTag(tagName: String, endIndex: Int) {
-        listTag.findLast { it.name == tagName && it.pointEnd == -1 }?.let { it.pointEnd = endIndex }
-    }
-
-    fun checkCloseTag(startIndex: Int): Boolean {
-        val closeTagIndex = this.indexOf(">", startIndex, true)
-        return closeTagIndex > startIndex && closeTagIndex < this.length && this[closeTagIndex - 1] == '/'
-    }
-    fun replyOrExecuteTag(tagName: String, isOpenTag: Boolean, resultString: StringBuilder, block: () -> Unit) {
-        when {
-            tagName == "p" -> {
-                resultString.append("\n\n")
-            }
-            tagName == "br" -> {
-                resultString.append("\n")
-            }
-            tagName == "li" && isOpenTag -> {
-                resultString.append("\n")
-                block()
-            }
-            else -> block()
-        }
-    }
-
-    val result = StringBuilder()
-    val length = this.length
-    val tagName = StringBuilder()
-    val listAttrsTag = mutableListOf<AttrTag>()
-
-    var isSelectTag = false
-    var isSingleTag = false
-    var isCloseTag = false
-    var isReplaceTag = false
-    var isFillAttrTag = false
-    var jumpIndex = -1
-
-    this.forEachIndexed { index, char ->
-        if (jumpIndex != -1 && index <= jumpIndex) {
-            if (index == jumpIndex) {
-                jumpIndex = -1
-            }
-            return@forEachIndexed
-        }
-        when (char) {
-            ' ' -> {
-                if (isSelectTag) {
-                    if ((isSingleTag || !isCloseTag) && !isReplaceTag) {
-                        try {
-                            getAttrTag(index, isSingleTag)?.let {
-                                isFillAttrTag = true
-                                listAttrsTag.add(it.attrTag)
-                                jumpIndex = it.endIndex
-                            }
-                        } catch (ex: StringIndexOutOfBoundsException) {
-                            Log.e("FAIL_PARSE", "getAttrTag fail - ${ex.message}")
-                        }
-                    }
-                } else {
-                    result.append(char)
-                }
-            }
-            '&' -> {
-                isSelectTag = true
-                isSingleTag = false
-                isCloseTag = false
-                isReplaceTag = true
-                isFillAttrTag = false
-                tagName.clear()
-                listAttrsTag.clear()
-            }
-            '<' -> {
-                isSelectTag = true
-                isSingleTag = checkCloseTag(index)
-                isCloseTag = length - index > 1 && (this[index + 1] == '/' || isSingleTag)
-                isReplaceTag = false
-                isFillAttrTag = false
-                tagName.clear()
-                listAttrsTag.clear()
-            }
-            '/' -> {
-                if (isSelectTag) {
-                    return@forEachIndexed
-                } else {
-                    result.append(char)
-                }
-            }
-            ';' -> {
-                if (isReplaceTag) {
-                    result.append(
-                        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {
-                            Html.fromHtml("&${tagName};", Html.FROM_HTML_MODE_LEGACY)
-                        } else {
-                            @Suppress("DEPRECATION")
-                            Html.fromHtml("&${tagName};")
-                        }
-                    )
-                    isSelectTag = false
-                    isSingleTag = false
-                    isCloseTag = false
-                    isReplaceTag = false
-                    isFillAttrTag = false
-                } else {
-                    result.append(char)
-                }
-            }
-            '>' -> {
-                when (true) {
-                    isSingleTag -> {
-                        replyOrExecuteTag(tagName.toString(), true, result) {
-                            addTag(tagName.toString().trim(), listAttrsTag, result.lastIndex, result.lastIndex)
-                        }
-                    }
-                    !isSingleTag && isCloseTag -> {
-                        replyOrExecuteTag(tagName.toString().trim(), false, result) {
-                            updateStateTag(tagName.toString().trim(), result.lastIndex)
-                        }
-                    }
-                    !isSingleTag && !isCloseTag -> {
-                        replyOrExecuteTag(tagName.toString().trim(), true, result) {
-                            addTag(tagName.toString().trim(), listAttrsTag, result.lastIndex)
-                        }
-                    }
-                }
-                isSelectTag = false
-                isSingleTag = false
-                isCloseTag = false
-                isReplaceTag = false
-                isFillAttrTag = false
-            }
-            else -> {
-                when (true) {
-                    isFillAttrTag -> return@forEachIndexed
-                    isSelectTag -> tagName.append(char)
-                    else -> result.append(char)
-                }
-            }
-        }
-    }
-    return result.toString()
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/local/db/entity/deserializers/TagDeserializer.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/deserializers/TagDeserializer.kt b/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/deserializers/TagDeserializer.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/deserializers/TagDeserializer.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,51 +0,0 @@
-package com.crafttalk.chat.data.local.db.entity.deserializers
-
-import com.crafttalk.chat.domain.entity.tags.*
-import com.google.gson.*
-import java.lang.reflect.Type
-
-class TagDeserializer(val gson: Gson): JsonDeserializer<List<Tag>> {
-    override fun deserialize(json: JsonElement, typeOfT: Type?, context: JsonDeserializationContext?): List<Tag> {
-        val result = arrayListOf<Tag>()
-        val jsonArray = json.asJsonArray
-        jsonArray.forEach {
-            val jsonObject = it.asJsonObject
-            if (!jsonObject.has("name")) return@forEach
-            if (!jsonObject.has("pointStart")) return@forEach
-            if (!jsonObject.has("pointEnd")) return@forEach
-            val name: String = jsonObject.get("name").asString
-            val pointStart: Int = jsonObject.get("pointStart").asInt
-            val pointEnd: Int = jsonObject.get("pointEnd").asInt
-            when (name) {
-                "strike" -> result.add(StrikeTag(pointStart, pointEnd))
-                "strong" -> result.add(StrongTag(pointStart, pointEnd))
-                "b" -> result.add(BTag(pointStart, pointEnd))
-                "i" -> result.add(ItalicTag(pointStart, pointEnd))
-                "em" -> result.add(EmTag(pointStart, pointEnd))
-                "a" -> {
-                    if (!jsonObject.has("url")) return@forEach
-                    result.add(UrlTag(pointStart, pointEnd, jsonObject.get("url").asString))
-                }
-                "img" -> {
-                    if (!jsonObject.has("url")) return@forEach
-                    if (!jsonObject.has("width")) return@forEach
-                    if (!jsonObject.has("height")) return@forEach
-                    result.add(ImageTag(pointStart, pointEnd, jsonObject.get("url").asString, jsonObject.get("width").asInt, jsonObject.get("height").asInt))
-                }
-                "li" -> {
-                    if (!jsonObject.has("countNesting")) return@forEach
-                    result.add(ItemListTag(pointStart, pointEnd, jsonObject.get("countNesting").asInt))
-                }
-                "ul" -> {
-                    if (!jsonObject.has("countNesting")) return@forEach
-                    result.add(HostListTag(pointStart, pointEnd, jsonObject.get("countNesting").asInt))
-                }
-                "phone" -> {
-                    if (!jsonObject.has("phone")) return@forEach
-                    result.add(PhoneTag(pointStart, pointEnd, jsonObject.get("phone").asString))
-                }
-            }
-        }
-        return result
-    }
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkAction.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkAction.kt b/chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkAction.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/entity/message/NetworkAction.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,20 +0,0 @@
-package com.crafttalk.chat.domain.entity.message
-
-import com.crafttalk.chat.data.local.db.entity.ActionEntity
-import com.google.gson.annotations.SerializedName
-
-data class NetworkAction (
-    @SerializedName(value = "action_id")
-    val actionId: String,
-    @SerializedName (value = "action_text")
-    val actionText: String
-) {
-
-    companion object {
-
-        fun map(actionEntity: ActionEntity) = NetworkAction(
-            actionId = actionEntity.actionId,
-            actionText = actionEntity.actionText
-        )
-    }
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/custom_views/custom_snackbar/binding/View.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/custom_views/custom_snackbar/binding/View.kt b/chat/src/main/java/com/crafttalk/chat/presentation/custom_views/custom_snackbar/binding/View.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/custom_views/custom_snackbar/binding/View.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,27 +0,0 @@
-package com.crafttalk.chat.presentation.custom_views.custom_snackbar.binding
-
-import android.view.View
-import android.view.ViewGroup
-import android.widget.FrameLayout
-import androidx.coordinatorlayout.widget.CoordinatorLayout
-
-internal fun View?.findSuitableParent(): ViewGroup? {
-    var view = this
-    var fallback: ViewGroup? = null
-    do {
-        if (view is CoordinatorLayout) {
-            return view
-        } else if (view is FrameLayout) {
-            if (view.id == android.R.id.content) {
-                return view
-            } else {
-                fallback = view
-            }
-        }
-        if (view != null) {
-            val parent = view.parent
-            view = if (parent is View) parent else null
-        }
-    } while (view != null)
-    return fallback
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/base/BaseViewModel.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/base/BaseViewModel.kt b/chat/src/main/java/com/crafttalk/chat/presentation/base/BaseViewModel.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/base/BaseViewModel.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,42 +0,0 @@
-package com.crafttalk.chat.presentation.base
-
-import androidx.lifecycle.ViewModel
-import androidx.lifecycle.viewModelScope
-import com.crafttalk.chat.presentation.UploadFileListener
-import com.crafttalk.chat.utils.TypeFailUpload
-import kotlinx.coroutines.CoroutineDispatcher
-import kotlinx.coroutines.Dispatchers
-import kotlinx.coroutines.Job
-import kotlinx.coroutines.launch
-
-abstract class BaseViewModel: ViewModel() {
-
-    fun handleUploadFile(uploadFileListener: UploadFileListener, responseCode: Int, responseMessage: String) {
-        when (responseCode) {
-            200 -> uploadFileListener.successUpload()
-            500 -> uploadFileListener.failUpload(responseMessage, TypeFailUpload.NOT_SUPPORT_TYPE)
-            408 -> uploadFileListener.failUpload(responseMessage, TypeFailUpload.TIMEOUT)
-            413 -> uploadFileListener.failUpload(responseMessage, TypeFailUpload.LARGE)
-            else -> uploadFileListener.failUpload(responseMessage, TypeFailUpload.DEFAULT)
-        }
-    }
-
-    private fun launch(dispatcher: CoroutineDispatcher, action: suspend () -> Unit): Job {
-        return viewModelScope.launch(dispatcher) {
-            action()
-        }
-    }
-
-    fun launchUI(action: suspend () -> Unit) {
-        launch(Dispatchers.Main) {
-            action()
-        }
-    }
-
-    fun launchIO(action: suspend () -> Unit): Job {
-        return launch(Dispatchers.IO) {
-            action()
-        }
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/utils/HashUtils.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/utils/HashUtils.kt b/chat/src/main/java/com/crafttalk/chat/utils/HashUtils.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/utils/HashUtils.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,28 +0,0 @@
-package com.crafttalk.chat.utils
-
-import java.security.MessageDigest
-import java.security.NoSuchAlgorithmException
-
-
-object HashUtils {
-
-    @Throws(NoSuchAlgorithmException::class)
-    fun getHash(type: String, text: String): String {
-        val messageDigest = MessageDigest.getInstance(type)
-        messageDigest.update(text.toByteArray())
-        val digest = messageDigest.digest()
-        return encodeHexString(digest)
-    }
-
-    private fun encodeHexString(bytes: ByteArray): String {
-        val hexChars = "0123456789abcdef"
-        val result = StringBuilder(bytes.size * 2)
-        bytes.forEach {
-            val i = it.toInt()
-            result.append(hexChars[i shr 4 and 0x0f])
-            result.append(hexChars[i and 0x0f])
-        }
-        return result.toString()
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/helper/converters/spanConverter.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/helper/converters/spanConverter.kt b/chat/src/main/java/com/crafttalk/chat/presentation/helper/converters/spanConverter.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/helper/converters/spanConverter.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,125 +0,0 @@
-package com.crafttalk.chat.presentation.helper.converters
-
-import android.content.Context
-import android.content.Intent
-import android.graphics.Typeface
-import android.net.Uri
-import android.os.Build
-import android.text.Spannable
-import android.text.SpannableString
-import android.text.style.*
-import android.util.Log
-import android.view.View
-import com.crafttalk.chat.domain.entity.tags.*
-import com.crafttalk.chat.utils.ChatAttr
-import java.lang.Exception
-
-fun String.convertToSpannableString(authorIsUser: Boolean, spanStructureList: List<Tag>, context: Context): SpannableString {
-    val result = SpannableString(this)
-    spanStructureList.forEach {
-        try {
-            when (it) {
-                is StrikeTag -> result.setSpan(
-                    StrikethroughSpan(),
-                    it.pointStart,
-                    it.pointEnd + 1,
-                    Spannable.SPAN_EXCLUSIVE_EXCLUSIVE
-                )
-                is StrongTag, is BTag -> result.setSpan(
-                    StyleSpan(Typeface.BOLD),
-                    it.pointStart,
-                    it.pointEnd + 1,
-                    Spannable.SPAN_EXCLUSIVE_EXCLUSIVE
-                )
-                is ItalicTag, is EmTag -> result.setSpan(
-                    StyleSpan(Typeface.ITALIC),
-                    it.pointStart,
-                    it.pointEnd + 1,
-                    Spannable.SPAN_EXCLUSIVE_EXCLUSIVE
-                )
-                is UrlTag -> {
-                    result.setSpan(object : ClickableSpan() {
-                        override fun onClick(widget: View) {
-                            val intent = Intent(
-                                Intent.ACTION_VIEW,
-                                Uri.parse(it.url.replaceFirstChar { it.lowercase() })
-                            )
-                            intent.flags = Intent.FLAG_ACTIVITY_NEW_TASK
-                            try {
-                                context.startActivity(intent)
-                            } catch (ex: Exception) {
-                                Log.d("LOG_CONVERTER", "Fail onClick ${it.url};")
-                            }
-                        }
-                    }, it.pointStart, it.pointEnd + 1, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE)
-                    result.setSpan(
-                        ForegroundColorSpan(
-                            if (authorIsUser) ChatAttr.getInstance().colorTextLinkUserMessage
-                            else ChatAttr.getInstance().colorTextLinkOperatorMessage
-                        ),
-                        it.pointStart,
-                        it.pointEnd + 1,
-                        Spannable.SPAN_EXCLUSIVE_EXCLUSIVE
-                    )
-                }
-                is ImageTag -> {
-                    // load bitmap use it.url
-//                ...
-//                result.setSpan(
-//                    ImageSpan(context, bitmap, DynamicDrawableSpan.ALIGN_BASELINE),
-//                    it.pointStart,
-//                    it.pointEnd + 1,
-//                    Spannable.SPAN_EXCLUSIVE_EXCLUSIVE
-//                )
-                }
-                is ItemListTag -> {
-                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {
-                        result.setSpan(
-                            BulletSpan(
-                                10,
-                                ChatAttr.getInstance().colorTextOperatorMessage,
-                                6
-                            ), it.pointStart, it.pointEnd + 1, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE
-                        )
-                    } else {
-                        result.setSpan(
-                            BulletSpan(),
-                            it.pointStart,
-                            it.pointEnd + 1,
-                            Spannable.SPAN_EXCLUSIVE_EXCLUSIVE
-                        )
-                    }
-                }
-                is HostListTag -> {
-                    result.setSpan(
-                        LeadingMarginSpan.Standard(80),
-                        it.pointStart,
-                        it.pointEnd + 1,
-                        Spannable.SPAN_EXCLUSIVE_EXCLUSIVE
-                    )
-                }
-                is PhoneTag -> {
-                    result.setSpan(object : ClickableSpan() {
-                        override fun onClick(widget: View) {
-                            val intent = Intent(Intent.ACTION_DIAL, Uri.parse("tel:${it.phone}"))
-                            intent.flags = Intent.FLAG_ACTIVITY_NEW_TASK
-                            context.startActivity(intent)
-                        }
-                    }, it.pointStart, it.pointEnd, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE)
-                    result.setSpan(
-                        ForegroundColorSpan(
-                            if (authorIsUser) ChatAttr.getInstance().colorTextPhoneUserMessage
-                            else ChatAttr.getInstance().colorTextPhoneOperatorMessage
-                        ),
-                        it.pointStart,
-                        it.pointEnd,
-                        Spannable.SPAN_EXCLUSIVE_EXCLUSIVE
-                    )
-                }
-            }
-        } catch(ex: IndexOutOfBoundsException) {
-            Log.e("ERROR_IN_CONVERTER", "msg: ${this}, authorIsUser: ${authorIsUser}; spanStructureList: ${spanStructureList};")
-        }
-    }
-    return result
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderInfoMessage.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderInfoMessage.kt b/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderInfoMessage.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderInfoMessage.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,27 +0,0 @@
-package com.crafttalk.chat.presentation.holders
-
-import android.annotation.SuppressLint
-import android.view.View
-import android.widget.TextView
-import com.crafttalk.chat.R
-import com.crafttalk.chat.presentation.base.BaseViewHolder
-import com.crafttalk.chat.presentation.helper.extensions.setMessageText
-import com.crafttalk.chat.presentation.model.InfoMessageItem
-import com.crafttalk.chat.utils.ChatAttr
-
-class HolderInfoMessage(
-    view: View
-) : BaseViewHolder<InfoMessageItem>(view) {
-
-    private val message: TextView? = view.findViewById(R.id.info_message)
-
-    @SuppressLint("StringFormatInvalid")
-    override fun bindTo(item: InfoMessageItem) {
-        // set content
-        message?.setMessageText(
-            textMessage = item.message,
-            colorTextMessage = ChatAttr.getInstance().colorTextInfo,
-            sizeTextMessage = ChatAttr.getInstance().sizeTextOperatorMessage
-        )
-    }
-}
\ No newline at end of file
Index: chat/src/main/res/layout/com_crafttalk_chat_layout_user_feedback.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_layout_user_feedback.xml b/chat/src/main/res/layout/com_crafttalk_chat_layout_user_feedback.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_layout_user_feedback.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,89 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:paddingHorizontal="40dp"
-    android:background="@color/com_crafttalk_chat_gray_f5f5f5">
-
-    <TextView
-        android:id="@+id/feedback_title"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:text="@string/com_crafttalk_chat_feedback_title"
-        android:gravity="center"
-        android:layout_marginTop="8dp"
-        android:layout_marginBottom="16dp"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintBottom_toTopOf="@id/feedback_star_1" />
-
-    <ImageView
-        android:id="@+id/feedback_star_1"
-        android:layout_width="40dp"
-        android:layout_height="40dp"
-        android:src="@drawable/com_crafttalk_chat_ic_star_outline"
-        android:tint="@color/com_crafttalk_chat_black"
-        android:layout_marginBottom="40dp"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toStartOf="@+id/feedback_star_2"
-        app:layout_constraintBottom_toTopOf="@id/close_feedback" />
-
-    <ImageView
-        android:id="@+id/feedback_star_2"
-        android:layout_width="40dp"
-        android:layout_height="40dp"
-        android:src="@drawable/com_crafttalk_chat_ic_star_outline"
-        android:tint="@color/com_crafttalk_chat_black"
-        android:layout_marginBottom="40dp"
-        app:layout_constraintStart_toEndOf="@id/feedback_star_1"
-        app:layout_constraintEnd_toStartOf="@+id/feedback_star_3"
-        app:layout_constraintBottom_toTopOf="@id/close_feedback" />
-
-    <ImageView
-        android:id="@+id/feedback_star_3"
-        android:layout_width="40dp"
-        android:layout_height="40dp"
-        android:src="@drawable/com_crafttalk_chat_ic_star_outline"
-        android:tint="@color/com_crafttalk_chat_black"
-        android:layout_marginBottom="40dp"
-        app:layout_constraintStart_toEndOf="@id/feedback_star_2"
-        app:layout_constraintEnd_toStartOf="@+id/feedback_star_4"
-        app:layout_constraintBottom_toTopOf="@id/close_feedback" />
-
-    <ImageView
-        android:id="@+id/feedback_star_4"
-        android:layout_width="40dp"
-        android:layout_height="40dp"
-        android:src="@drawable/com_crafttalk_chat_ic_star_outline"
-        android:tint="@color/com_crafttalk_chat_black"
-        android:layout_marginBottom="40dp"
-        app:layout_constraintStart_toEndOf="@id/feedback_star_3"
-        app:layout_constraintEnd_toStartOf="@+id/feedback_star_5"
-        app:layout_constraintBottom_toTopOf="@id/close_feedback" />
-
-    <ImageView
-        android:id="@+id/feedback_star_5"
-        android:layout_width="40dp"
-        android:layout_height="40dp"
-        android:src="@drawable/com_crafttalk_chat_ic_star_outline"
-        android:tint="@color/com_crafttalk_chat_black"
-        android:layout_marginBottom="40dp"
-        app:layout_constraintStart_toEndOf="@id/feedback_star_4"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintBottom_toTopOf="@id/close_feedback" />
-
-    <ImageView
-        android:id="@+id/close_feedback"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:padding="16dp"
-        android:src="@drawable/com_crafttalk_chat_ic_arrow_down"
-        android:tint="@color/com_crafttalk_chat_gray_8d8d8d"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintBottom_toBottomOf="parent" />
-
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/entity/notification/NetworkSubscription.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/entity/notification/NetworkSubscription.kt b/chat/src/main/java/com/crafttalk/chat/domain/entity/notification/NetworkSubscription.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/entity/notification/NetworkSubscription.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,6 +0,0 @@
-package com.crafttalk.chat.domain.entity.notification
-
-class NetworkSubscription(
-    val subscription: String,
-    val uuid: String
-)
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_ic_close.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_ic_close.xml b/chat/src/main/res/drawable/com_crafttalk_chat_ic_close.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_ic_close.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,5 +0,0 @@
-<vector android:height="24dp" android:tint="#FF231E"
-    android:viewportHeight="24.0" android:viewportWidth="24.0"
-    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
-    <path android:fillColor="#FF000000" android:pathData="M19,6.41L17.59,5 12,10.59 6.41,5 5,6.41 10.59,12 5,17.59 6.41,19 12,13.41 17.59,19 19,17.59 13.41,12z"/>
-</vector>
Index: chat/src/main/res/layout/com_crafttalk_chat_item_user_text_message.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_item_user_text_message.xml b/chat/src/main/res/layout/com_crafttalk_chat_item_user_text_message.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_item_user_text_message.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,72 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:layout_marginStart="@dimen/com_crafttalk_chat_message_margin_start"
-    android:layout_marginTop="@dimen/com_crafttalk_chat_message_margin_top"
-    android:layout_marginEnd="@dimen/com_crafttalk_chat_message_margin_end"
-    android:layout_marginBottom="@dimen/com_crafttalk_chat_message_margin_bottom">
-
-    <include
-        android:id="@+id/include_date"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        layout="@layout/com_crafttalk_chat_include_date_message" />
-
-    <View
-        android:id="@+id/content_container"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        app:layout_constraintStart_toStartOf="@id/barrier_content_start"
-        app:layout_constraintTop_toTopOf="@id/replied_message_container"
-        app:layout_constraintEnd_toEndOf="@id/user_message"
-        app:layout_constraintBottom_toBottomOf="@id/user_message"
-        tools:background="@drawable/com_crafttalk_chat_background_item_simple_user_message" />
-
-    <include
-        android:id="@+id/replied_message_container"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:visibility="gone"
-        layout="@layout/com_crafttalk_chat_include_replied_message"
-        app:layout_constraintTop_toBottomOf="@id/include_date"
-        app:layout_constraintEnd_toEndOf="parent"
-        tools:visibility="visible" />
-
-    <TextView
-        android:id="@+id/user_message"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:gravity="end"
-        android:autoLink="email|web"
-        android:fontFamily="@font/com_crafttalk_chat_ubuntu_light"
-        android:textFontWeight="300"
-        android:paddingStart="@dimen/com_crafttalk_chat_message_content_padding_start"
-        android:paddingTop="@dimen/com_crafttalk_chat_message_content_padding_top"
-        android:paddingEnd="@dimen/com_crafttalk_chat_message_content_padding_end"
-        android:paddingBottom="@dimen/com_crafttalk_chat_message_content_padding_bottom"
-        app:layout_constraintTop_toBottomOf="@id/replied_message_container"
-        app:layout_constraintEnd_toEndOf="parent"
-        tools:text="Привет, мое имя Тест"
-        tools:textColor="@color/com_crafttalk_chat_white" />
-
-    <androidx.constraintlayout.widget.Barrier
-        android:id="@+id/barrier_content_start"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        app:barrierDirection="start"
-        app:constraint_referenced_ids="replied_message_container,user_message" />
-
-    <include
-        android:id="@+id/include_message_info"
-        android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        layout="@layout/com_crafttalk_chat_include_user_message_info"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/content_container" />
-
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/api/socket/SocketApi.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/api/socket/SocketApi.kt b/chat/src/main/java/com/crafttalk/chat/data/api/socket/SocketApi.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/api/socket/SocketApi.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,530 +0,0 @@
-package com.crafttalk.chat.data.api.socket
-
-import android.content.Context
-import android.util.Log
-import com.crafttalk.chat.data.local.db.dao.MessagesDao
-import com.crafttalk.chat.data.local.db.entity.MessageEntity
-import com.crafttalk.chat.domain.entity.auth.Visitor
-import com.crafttalk.chat.domain.entity.message.MessageType
-import com.crafttalk.chat.domain.entity.message.NetworkMessage
-import com.crafttalk.chat.domain.entity.message.NetworkWidget
-import com.crafttalk.chat.domain.entity.message.NetworkWidgetDeserializer
-import com.crafttalk.chat.initialization.ChatMessageListener
-import com.crafttalk.chat.presentation.ChatEventListener
-import com.crafttalk.chat.presentation.ChatInternetConnectionListener
-import com.crafttalk.chat.presentation.helper.ui.getSizeMediaFile
-import com.crafttalk.chat.presentation.helper.ui.getWeightFile
-import com.crafttalk.chat.presentation.helper.ui.getWeightMediaFile
-import com.crafttalk.chat.utils.*
-import com.crafttalk.chat.utils.ConstantsUtils.TAG_SOCKET
-import com.crafttalk.chat.utils.ConstantsUtils.TAG_SOCKET_EVENT
-import com.google.gson.Gson
-import com.google.gson.GsonBuilder
-import io.socket.client.IO
-import io.socket.client.Manager
-import io.socket.client.Socket
-import kotlinx.coroutines.*
-import kotlinx.coroutines.channels.Channel
-import org.json.JSONObject
-import java.net.URI
-import java.net.URISyntaxException
-import okhttp3.OkHttpClient
-
-class SocketApi constructor(
-    private val okHttpClient: OkHttpClient,
-    private val messageDao: MessagesDao,
-    private val gson: Gson,
-    private val context: Context
-) {
-
-    private var socket: Socket? = null
-    private lateinit var visitor: Visitor
-    private var successAuthUiFun: () -> Unit = {}
-    private var failAuthUiFun: () -> Unit = {}
-    private var successAuthUxFun: suspend () -> Unit = {}
-    private var failAuthUxFun: suspend () -> Unit = {}
-    private var syncMessages: suspend () -> Unit = {}
-    private var updateCurrentReadMessageTime: (newReadPoints: List<Pair<String, Long>>) -> Unit = {}
-    private var updateCountUnreadMessages: (countNewMessages: Int, hasUserMessage: Boolean) -> Unit = { _,_ -> }
-    private var updateSearchMessagePosition: suspend (insertedMessages: List<MessageEntity>) -> Unit = {}
-    private var getPersonPreview: suspend (personId: String) -> String? = { null }
-    private var updatePersonName: suspend (personId: String?, currentPersonName: String?) -> Unit = { _,_ -> }
-    private var isAuthorized: Boolean = false
-    private var isSynchronized: Boolean = false
-    private val bufferNewMessages = mutableListOf<MessageEntity>()
-
-    private var chatInternetConnectionListener: ChatInternetConnectionListener? = null
-    private var chatMessageListener: ChatMessageListener? = null
-    private var chatEventListener: ChatEventListener? = null
-
-    var chatStatus = ChatStatus.NOT_ON_CHAT_SCREEN_BACKGROUND_APP
-    private var countNewMessages = 0
-
-    private val viewModelJob = Job()
-    private val viewModelScope = CoroutineScope(Dispatchers.IO + viewModelJob)
-    private var isSendGreet = false
-
-    fun initSocket() {
-        if (socket == null) {
-            socket = try {
-                val opt: IO.Options = IO.Options().apply {
-                    callFactory = okHttpClient
-                    webSocketFactory = okHttpClient
-                }
-                val manager = Manager(
-                    URI("${ChatParams.urlChatScheme}://${ChatParams.urlChatHost}"),
-                    opt
-                )
-                manager.socket("/${ChatParams.urlChatNameSpace}", opt).apply {
-                    setAllListeners(this)
-                }
-            } catch (e: URISyntaxException) {
-                failAuthUiFun()
-                viewModelScope.launch {
-                    failAuthUxFun()
-                }
-                isAuthorized = false
-                isSynchronized = false
-                null
-            }
-        }
-    }
-
-    fun destroySocket() {
-        isSendGreet = false
-        socket?.off()
-        socket = null
-    }
-
-    fun dropChat() {
-        socket?.disconnect()
-    }
-
-    fun setInternetConnectionListener(listener: ChatInternetConnectionListener) {
-        this.chatInternetConnectionListener = listener
-    }
-
-    fun setMessageListener(listener: ChatMessageListener) {
-        this.chatMessageListener = listener
-    }
-
-    fun setUpdateSearchMessagePosition(updateSearchMessagePosition: suspend (insertedMessages: List<MessageEntity>) -> Unit) {
-        this.updateSearchMessagePosition = updateSearchMessagePosition
-    }
-
-    fun resetNewMessagesCounter() {
-        countNewMessages = 0
-    }
-
-    fun setVisitor(
-        visitor: Visitor,
-        successAuthUi: () -> Unit,
-        failAuthUi: () -> Unit,
-        successAuthUx: suspend () -> Unit,
-        failAuthUx: suspend () -> Unit,
-        sync: suspend () -> Unit,
-        updateCurrentReadMessageTime: (newTimeMarks: List<Pair<String, Long>>) -> Unit,
-        updateCountUnreadMessages: (countNewMessages: Int, hasUserMessage: Boolean) -> Unit,
-        getPersonPreview: suspend (personId: String) -> String?,
-        updatePersonName: suspend (personId: String?, currentPersonName: String?) -> Unit,
-        chatEventListener: ChatEventListener?
-    ) {
-        this.successAuthUiFun = successAuthUi
-        this.successAuthUxFun = successAuthUx
-        this.failAuthUiFun = failAuthUi
-        this.failAuthUxFun = failAuthUx
-        this.syncMessages = sync
-        this.updateCurrentReadMessageTime = updateCurrentReadMessageTime
-        this.updateCountUnreadMessages = updateCountUnreadMessages
-        this.getPersonPreview = getPersonPreview
-        this.updatePersonName = updatePersonName
-        chatEventListener?.let { this.chatEventListener = it }
-        this.visitor = visitor
-        socket?.run(::connectUser)
-    }
-
-    private fun setAllListeners(socket: Socket) {
-
-        socket.on("connect") {
-            Log.d(TAG_SOCKET_EVENT, "connect connecting - ${socket.connected()}")
-            authenticationUser(socket)
-        }
-
-        socket.on("reconnect") {
-            Log.d(TAG_SOCKET_EVENT, "reconnect")
-            chatInternetConnectionListener?.reconnect()
-        }
-
-        socket.on("hide") {
-            Log.d(TAG_SOCKET_EVENT, "hide")
-            isAuthorized = false
-            isSynchronized = false
-            failAuthUiFun()
-            viewModelScope.launch {
-                failAuthUxFun()
-            }
-        }
-
-        socket.on("authorized") {
-            Log.d(TAG_SOCKET_EVENT, "authorized")
-            isAuthorized = true
-            successAuthUiFun()
-            viewModelScope.launch {
-                successAuthUxFun()
-            }
-            syncChat {
-                if (ChatParams.showInitialMessage == false) {
-                    messageDao.deleteAllMessageByType(MessageType.INITIAL_MESSAGE.valueType)
-                    if (
-                        (ChatParams.sendInitialMessageOnStartDialog == true) ||
-                        (ChatParams.sendInitialMessageOnOpen == true && chatStatus == ChatStatus.ON_CHAT_SCREEN_FOREGROUND_APP)
-                    ) {
-                        greet()
-                    }
-                }
-//                ChatParams.startMessage?.let {
-//                    sendMessage(it, null)
-//                    ChatParams.startMessage = null
-//                }
-            }
-        }
-
-        socket.on("authorization-required") {
-            Log.d(TAG_SOCKET_EVENT, "authorization-required")
-            if (it[0] as Boolean) {
-                socket.emit(
-                    "authorize",
-                    visitor.getJsonObject(),
-                    visitor.phone?.length ?: 0
-                )
-            }
-        }
-
-        socket.on("message") {
-            viewModelScope.launch {
-                Log.d(TAG_SOCKET, "message, size = ${it.size}; it = $it")
-                val messageJson = it[0] as JSONObject
-                val currentTimestamp = System.currentTimeMillis()
-                Log.d(TAG_SOCKET_EVENT, "json message___ methon message - $messageJson")
-
-                val gson = GsonBuilder()
-                    .registerTypeAdapter(NetworkWidget::class.java, NetworkWidgetDeserializer())
-                    .create()
-                val messageSocket = gson.fromJson(
-                    messageJson.toString().replace("&amp;", "&"),
-                    NetworkMessage::class.java
-                ) ?: return@launch
-
-                if (messageSocket.messageType == MessageType.INITIAL_MESSAGE.valueType) {
-                    messageDao.deleteAllMessageByType(MessageType.INITIAL_MESSAGE.valueType)
-                    if (ChatParams.showInitialMessage == false) {
-                        return@launch
-                    }
-                }
-
-                when (messageSocket.messageType) {
-                    MessageType.OPERATOR_IS_TYPING.valueType -> chatEventListener?.operatorStartWriteMessage()
-                    MessageType.OPERATOR_STOPPED_TYPING.valueType -> chatEventListener?.operatorStopWriteMessage()
-                    MessageType.VISITOR_MESSAGE.valueType -> chatEventListener?.operatorStopWriteMessage()
-                    MessageType.INITIAL_MESSAGE.valueType -> chatEventListener?.operatorStopWriteMessage()
-                    MessageType.FINISH_DIALOG.valueType -> chatEventListener?.finishDialog()
-                    MessageType.MERGE_HISTORY.valueType -> chatEventListener?.showUploadHistoryBtn()
-                }
-                if (
-                    (!messageJson.toString().contains(""""message":"\/start"""") && !messageJson.toString().contains(""""message":"/start"""")) &&
-                    (messageSocket.id != null || !messageDao.isNotEmpty())
-                ) {
-                    when {
-                        (chatStatus == ChatStatus.NOT_ON_CHAT_SCREEN_FOREGROUND_APP) && (messageSocket.messageType in listOf(
-                            MessageType.VISITOR_MESSAGE.valueType,
-                            MessageType.INITIAL_MESSAGE.valueType,
-                            MessageType.TRANSFER_TO_OPERATOR.valueType
-                        )) -> {
-                            countNewMessages++
-                            chatMessageListener?.getNewMessages(countNewMessages)
-                        }
-                    }
-                    if (messageSocket.id == null) {
-                        messageSocket.id = System.currentTimeMillis().toString()
-                    }
-                    updateDataInDatabase(messageSocket, currentTimestamp)
-                }
-            }
-        }
-
-        socket.on(Socket.EVENT_CONNECT) {
-            Log.d(TAG_SOCKET_EVENT, "EVENT_CONNECT")
-            chatInternetConnectionListener?.connect()
-        }
-        socket.on(Socket.EVENT_DISCONNECT) {
-            Log.d(TAG_SOCKET_EVENT, "EVENT_DISCONNECT")
-            isAuthorized = false
-            isSynchronized = false
-            chatInternetConnectionListener?.lossConnection()
-        }
-        socket.on(Socket.EVENT_CONNECT_ERROR) {
-            Log.d(TAG_SOCKET_EVENT, "EVENT_CONNECT_ERROR")
-            isAuthorized = false
-            isSynchronized = false
-            chatInternetConnectionListener?.failConnect()
-        }
-    }
-
-    private fun connectUser(socket: Socket) {
-        if (!socket.connected()) {
-            socket.connect()
-        } else {
-            authenticationUser(socket)
-        }
-    }
-
-    private fun authenticationUser(socket: Socket) {
-        if (isAuthorized && socket.connected()) {
-            successAuthUiFun()
-            viewModelScope.launch {
-                successAuthUxFun()
-            }
-            syncChat {
-                if (ChatParams.showInitialMessage == false) {
-                    messageDao.deleteAllMessageByType(MessageType.INITIAL_MESSAGE.valueType)
-                    if (
-                        ChatParams.sendInitialMessageOnOpen == true &&
-                        chatStatus == ChatStatus.ON_CHAT_SCREEN_FOREGROUND_APP
-                    ) {
-                        greet()
-                    }
-                }
-//                ChatParams.startMessage?.let {
-//                    sendMessage(it, null)
-//                    ChatParams.startMessage = null
-//                }
-            }
-        } else {
-            try {
-                socket.emit(
-                    "me",
-                    visitor.getJsonObject(),
-                    ChatParams.authMode == AuthType.AUTH_WITHOUT_FORM
-                )
-            } catch (ex: Throwable) {
-                failAuthUiFun()
-                viewModelScope.launch {
-                    failAuthUxFun()
-                }
-            }
-        }
-    }
-
-    private fun greet() {
-        if (socket != null && socket!!.connected() && !isSendGreet) {
-            isSendGreet = true
-            socket?.emit("visitor-message", "/start", MessageType.VISITOR_MESSAGE.valueType, null, 0, null, null, null)
-        }
-    }
-
-    fun sendMessage(message: String, repliedMessage: NetworkMessage?) {
-        if (ChatAttr.getInstance().replyEnable) {
-            val repliedMessageJSONObject = repliedMessage?.let {
-                JSONObject(gson.toJson(it))
-            }
-            socket?.emit(
-                "visitor-message",
-                message,
-                MessageType.VISITOR_MESSAGE.valueType,
-                null,
-                0,
-                null,
-                null,
-                repliedMessageJSONObject,
-                null
-            )
-        } else {
-            socket?.emit(
-                "visitor-message",
-                message,
-                MessageType.VISITOR_MESSAGE.valueType,
-                null,
-                0,
-                null,
-                null,
-                null
-            )
-        }
-    }
-
-    fun readMessage(messageId: String) {
-        socket?.emit(
-            "visitor-message",
-            "",
-            MessageType.READING_CONFIRMATION.valueType,
-            messageId,
-            0,
-            null,
-            null,
-            null,
-            null
-        )
-    }
-
-    fun selectAction(actionId: String) {
-        socket?.emit("visitor-action", actionId)
-    }
-
-    fun giveFeedbackOnOperator(countStars: Int) {
-        socket?.emit("visitor-message", "", MessageType.UPDATE_DIALOG_SCORE.valueType, null, countStars, null, null)
-    }
-
-    fun mergeNewMessages() {
-        isSynchronized = true
-        val maxUserTimestamp = bufferNewMessages.filter { !it.isReply }.maxByOrNull { it.timestamp }?.timestamp
-        if (maxUserTimestamp != null) {
-            val messagesForUpdateReadPoint = bufferNewMessages.filter { it.timestamp <= maxUserTimestamp }
-                .map { Pair(it.id, it.timestamp) }
-            updateCurrentReadMessageTime(messagesForUpdateReadPoint)
-        }
-        updateCountUnreadMessages(bufferNewMessages.filter { it.timestamp > (maxUserTimestamp ?: 0) }.size, maxUserTimestamp != null)
-        bufferNewMessages.distinctBy { it.id }.filter { !messageDao.hasThisMessage(it.id) }.let { messages ->
-            viewModelScope.launch {
-                updateSearchMessagePosition(messages)
-            }
-            messageDao.insertMessages(messages)
-        }
-        bufferNewMessages.clear()
-        chatEventListener?.synchronized()
-    }
-
-    suspend fun uploadMessages(
-        timestamp: Long
-    ): List<NetworkMessage>? {
-        val channel = Channel<List<NetworkMessage>?>()
-
-        socket?.on("history-messages-loaded") {
-            viewModelScope.launch {
-                val listMessages = gson.fromJson(
-                    it[0].toString().replace("&amp;", "&"),
-                    Array<NetworkMessage>::class.java
-                ) ?: arrayOf()
-                channel.send(listMessages.toList())
-            }
-        }
-        socket?.emit("history-messages-requested", timestamp, visitor.token, ChatParams.urlChatHost) ?: channel.send(null)
-
-        return viewModelScope.async {
-            channel.receive()
-        }.await()
-    }
-
-    fun closeHistoryListener() {
-        socket?.off("history-messages-loaded")
-    }
-
-    private fun syncChat(actionAfter: () -> Unit) {
-        viewModelScope.launch {
-            syncMessages()
-            actionAfter()
-        }
-    }
-
-    private suspend fun updateDataInDatabase(messageSocket: NetworkMessage, currentTimestamp: Long) {
-        val operatorPreview = messageSocket.operatorId?.let { getPersonPreview(it) }
-        when {
-            (MessageType.VISITOR_MESSAGE.valueType == messageSocket.messageType) && (messageSocket.isImage || messageSocket.isGif) -> {
-                messageSocket.correctAttachmentUrl?.let { url ->
-                    getSizeMediaFile(context, url) { height, width ->
-                        viewModelScope.launch {
-                            insertMessage(MessageEntity.map(
-                                uuid = visitor.uuid,
-                                networkMessage = messageSocket,
-                                arrivalTime = currentTimestamp,
-                                operatorPreview = operatorPreview,
-                                mediaFileHeight = height,
-                                mediaFileWidth = width
-                            ))
-                        }
-                    }
-                }
-            }
-            (MessageType.VISITOR_MESSAGE.valueType == messageSocket.messageType) && (messageSocket.isFile || messageSocket.isUnknownType) -> {
-                messageSocket.correctAttachmentUrl?.let { url ->
-                    insertMessage(MessageEntity.map(
-                        uuid = visitor.uuid,
-                        networkMessage = messageSocket,
-                        arrivalTime = currentTimestamp,
-                        operatorPreview = operatorPreview,
-                        fileSize = getWeightFile(url) ?: getWeightMediaFile(context, url)
-                    ))
-                }
-            }
-            (messageSocket.messageType in listOf(MessageType.VISITOR_MESSAGE.valueType, MessageType.INITIAL_MESSAGE.valueType)) && messageSocket.isText -> {
-                val repliedMessageUrl = messageSocket.replyToMessage?.correctAttachmentUrl
-                when {
-                    repliedMessageUrl != null && messageSocket.replyToMessage.isFile -> {
-                        insertMessage(MessageEntity.map(
-                            uuid = visitor.uuid,
-                            networkMessage = messageSocket,
-                            arrivalTime = currentTimestamp,
-                            operatorPreview = operatorPreview,
-                            repliedMessageFileSize = getWeightFile(repliedMessageUrl) ?: getWeightMediaFile(context, repliedMessageUrl)
-                        ))
-                    }
-                    repliedMessageUrl != null && (messageSocket.replyToMessage.isImage || messageSocket.replyToMessage.isGif) -> {
-                        getSizeMediaFile(context, repliedMessageUrl) { height, width ->
-                            viewModelScope.launch {
-                                insertMessage(MessageEntity.map(
-                                    uuid = visitor.uuid,
-                                    networkMessage = messageSocket,
-                                    arrivalTime = currentTimestamp,
-                                    operatorPreview = operatorPreview,
-                                    repliedMessageMediaFileHeight = height,
-                                    repliedMessageMediaFileWidth = width
-                                ))
-                            }
-                        }
-                    }
-                    else -> {
-                        insertMessage(MessageEntity.map(
-                            uuid = visitor.uuid,
-                            networkMessage = messageSocket,
-                            arrivalTime = currentTimestamp,
-                            operatorPreview = operatorPreview
-                        ))
-                    }
-                }
-            }
-            (MessageType.RECEIVED_BY_MEDIATO.valueType == messageSocket.messageType) || (MessageType.RECEIVED_BY_OPERATOR.valueType == messageSocket.messageType) -> {
-                messageSocket.parentMessageId?.let { parentId ->
-                    messageDao.updateMessage(parentId, messageSocket.messageType)
-                }
-            }
-            (MessageType.TRANSFER_TO_OPERATOR.valueType == messageSocket.messageType) -> {
-                insertMessage(MessageEntity.mapOperatorJoinMessage(
-                    uuid = visitor.uuid,
-                    networkMessage = messageSocket,
-                    arrivalTime = currentTimestamp,
-                    operatorPreview = operatorPreview
-                ))
-            }
-        }
-        updatePersonName(messageSocket.operatorId, messageSocket.operatorName)
-    }
-
-    private fun insertMessage(message: MessageEntity) {
-        if (isSynchronized) {
-            if (!message.isReply) {
-//                Log.d("TEST_DATA_LOP_S", "insertMessage")
-                updateCountUnreadMessages(0, true)
-            } else {
-                updateCountUnreadMessages(1, false)
-            }
-            if (!messageDao.hasThisMessage(message.id)) {
-                viewModelScope.launch {
-                    updateSearchMessagePosition(listOf(message))
-                }
-                messageDao.insertMessage(message)
-            }
-        } else {
-            bufferNewMessages.add(message)
-        }
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/repository/INotificationRepository.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/repository/INotificationRepository.kt b/chat/src/main/java/com/crafttalk/chat/domain/repository/INotificationRepository.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/repository/INotificationRepository.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,7 +0,0 @@
-package com.crafttalk.chat.domain.repository
-
-interface INotificationRepository {
-     fun subscribe(uuid: String)
-     fun unSubscribe(uuid: String)
-     fun getToken(success: (token: String) -> Unit)
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/repository/FileRepository.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/repository/FileRepository.kt b/chat/src/main/java/com/crafttalk/chat/data/repository/FileRepository.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/repository/FileRepository.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,172 +0,0 @@
-package com.crafttalk.chat.data.repository
-
-import android.graphics.Bitmap
-import android.util.Log
-import com.crafttalk.chat.data.ApiParams
-import com.crafttalk.chat.data.ContentTypeValue
-import com.crafttalk.chat.data.api.rest.FileApi
-import com.crafttalk.chat.data.helper.file.FileInfoHelper
-import com.crafttalk.chat.data.helper.file.RequestHelper
-import com.crafttalk.chat.data.local.db.dao.FileDao
-import com.crafttalk.chat.data.local.db.entity.FileEntity
-import com.crafttalk.chat.domain.entity.auth.Visitor
-import com.crafttalk.chat.domain.entity.file.NetworkBodyStructureUploadFile
-import com.crafttalk.chat.domain.entity.file.TypeUpload
-import com.crafttalk.chat.domain.repository.IFileRepository
-import com.crafttalk.chat.utils.ChatParams
-import okhttp3.MediaType.Companion.toMediaTypeOrNull
-import okhttp3.MultipartBody
-import okhttp3.RequestBody
-import retrofit2.Call
-import retrofit2.Callback
-import retrofit2.Response
-import java.io.*
-import java.net.HttpURLConnection
-import java.net.MalformedURLException
-import java.net.URL
-import javax.inject.Inject
-import com.crafttalk.chat.domain.entity.file.File as FileModel
-
-class FileRepository
-@Inject constructor(
-    private val fileApi: FileApi,
-    private val fileDao: FileDao,
-    private val fileInfoHelper: FileInfoHelper,
-    private val fileRequestHelper: RequestHelper
-) : IFileRepository {
-
-    private fun uploadFile(uuid: String, fileName: String, fileRequestBody: String, handleUploadFile: (responseCode: Int, responseMessage: String) -> Unit) {
-        val request = fileApi.uploadFile(
-            networkBody = NetworkBodyStructureUploadFile(
-                fileName = fileName,
-                uuid = uuid,
-                fileB64 = fileRequestBody
-            )
-        )
-
-        request.enqueue(object : Callback<String> {
-            override fun onResponse(call: Call<String>, response: Response<String>) {
-                handleUploadFile(response.code(), response.message())
-                Log.d("UPLOAD_TEST", "Success upload - ${response.message()} ${response.body()}; ${response.code()}; ${request.request().url}")
-            }
-            override fun onFailure(call: Call<String>, t: Throwable) {
-                when (t.message) {
-                    TIMEOUT_CONST -> handleUploadFile(TIMEOUT_CODE, "")
-                }
-                Log.d("UPLOAD_TEST", "Fail upload! - ${t.message};")
-            }
-        })
-    }
-
-    private fun uploadFile(uuid: String, fileName: String, fileRequestBody: RequestBody, handleUploadFile: (responseCode: Int, responseMessage: String) -> Unit) {
-        val body: MultipartBody.Part = MultipartBody.Part.createFormData(ApiParams.FILE_FIELD_NAME, fileName, fileRequestBody)
-        val fileNameRequestBody = RequestBody.create(
-            ContentTypeValue.TEXT_PLAIN.value.toMediaTypeOrNull(),
-            fileName
-        )
-        val uuidRequestBody = RequestBody.create(
-            ContentTypeValue.TEXT_PLAIN.value.toMediaTypeOrNull(),
-            uuid
-        )
-
-        val request = fileApi.uploadFile(
-            fileName = fileNameRequestBody,
-            uuid = uuidRequestBody,
-            fileB64 = body
-        )
-
-        request.enqueue(object : Callback<String> {
-            override fun onResponse(call: Call<String>, response: Response<String>) {
-                handleUploadFile(response.code(), response.message())
-                Log.d("UPLOAD_TEST", "Success upload - ${response.message()} ${response.body()}; ${response.code()}; ${request.request().url}")
-            }
-            override fun onFailure(call: Call<String>, t: Throwable) {
-                when (t.message) {
-                    TIMEOUT_CONST -> handleUploadFile(TIMEOUT_CODE, "")
-                }
-                Log.d("UPLOAD_TEST", "Fail upload! - ${t.message};")
-            }
-        })
-    }
-
-    override fun uploadFile(visitor: Visitor, file: FileModel, type: TypeUpload, handleUploadFile: (responseCode: Int, responseMessage: String) -> Unit) {
-        val fileName = fileInfoHelper.getFileName(file.uri) ?: return
-        fileDao.addFile(FileEntity(visitor.uuid, fileName))
-        when (type) {
-            TypeUpload.JSON -> {
-                val fileRequestBody = fileRequestHelper.generateJsonRequestBody(file.uri, file.type) ?: return
-                uploadFile(visitor.uuid, fileName, fileRequestBody, handleUploadFile)
-            }
-            TypeUpload.MULTIPART -> {
-                val fileRequestBody = fileRequestHelper.generateMultipartRequestBody(file.uri) ?: return
-                uploadFile(visitor.uuid, fileName, fileRequestBody, handleUploadFile)
-            }
-        }
-    }
-
-    override fun uploadMediaFile(visitor: Visitor, bitmap: Bitmap, type: TypeUpload, handleUploadFile: (responseCode: Int, responseMessage: String) -> Unit) {
-        val fileName = "createPhoto${System.currentTimeMillis()}.jpg"
-        Log.d("TEST_DAYA_M", "uploadMediaFile t - ${type}; ")
-        when (type) {
-            TypeUpload.JSON -> {
-                val fileRequestBody = fileRequestHelper.generateJsonRequestBody(bitmap)
-                Log.d("TEST_DAYA_M", "uploadMediaFile fileRequestBody1 - ${fileRequestBody}; ")
-                uploadFile(visitor.uuid, fileName, fileRequestBody, handleUploadFile)
-            }
-            TypeUpload.MULTIPART -> {
-                val fileRequestBody = fileRequestHelper.generateMultipartRequestBody(bitmap, fileName)
-                Log.d("TEST_DAYA_M", "uploadMediaFile fileRequestBody2 - ${fileRequestBody}; ")
-                uploadFile(visitor.uuid, fileName, fileRequestBody, handleUploadFile)
-            }
-        }
-    }
-
-    override suspend fun downloadDocument(documentUrl: String, documentFile: File, alternativeFile: File, downloadedSuccess: suspend () -> Unit, downloadedFail: () -> Unit) {
-        val correctFile = try {
-            documentFile.createNewFile()
-            documentFile
-        } catch (ex: IOException) {
-            try {
-                alternativeFile.createNewFile()
-                alternativeFile
-            } catch (ex: IOException) {
-                downloadedFail()
-                return
-            }
-        }
-        try {
-            val url = URL(documentUrl)
-            val urlConnection = url.openConnection() as HttpURLConnection
-            urlConnection.setRequestProperty("Cookie", "webchat-${ChatParams.urlChatNameSpace}-uuid=${ChatParams.visitorUuid}")
-            urlConnection.setRequestProperty("ct-webchat-client-id", ChatParams.visitorUuid)
-            urlConnection.connect()
-            val inputStream = urlConnection.inputStream
-            val fileOutputStream = FileOutputStream(correctFile)
-
-            val buffer = ByteArray(MEGABYTE)
-            var bufferLength: Int
-            while (inputStream.read(buffer).also { bufferLength = it } > 0) {
-                fileOutputStream.write(buffer, 0, bufferLength)
-            }
-            fileOutputStream.close()
-
-            downloadedSuccess()
-        } catch (ex: FileNotFoundException) {
-            correctFile.delete()
-            downloadedFail()
-        } catch (ex: MalformedURLException) {
-            correctFile.delete()
-            downloadedFail()
-        } catch (ex: IOException) {
-            correctFile.delete()
-            downloadedFail()
-        }
-    }
-
-    companion object {
-        private const val TIMEOUT_CODE = 408
-        private const val TIMEOUT_CONST = "timeout"
-        private const val MEGABYTE = 1024 * 1024
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/entity/configuration/NetworkResultConfiguration.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/entity/configuration/NetworkResultConfiguration.kt b/chat/src/main/java/com/crafttalk/chat/domain/entity/configuration/NetworkResultConfiguration.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/entity/configuration/NetworkResultConfiguration.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,10 +0,0 @@
-package com.crafttalk.chat.domain.entity.configuration
-
-import java.io.Serializable
-
-data class NetworkResultConfiguration(
-    val chatAnnouncement: String,
-    val showInitialMessage: Boolean,
-    val sendInitialMessageOnOpen: Boolean = true,
-    val sendInitialMessageOnStartDialog: Boolean = false
-): Serializable
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/data/repository/NotificationRepository.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/repository/NotificationRepository.kt b/chat/src/main/java/com/crafttalk/chat/data/repository/NotificationRepository.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/repository/NotificationRepository.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,83 +0,0 @@
-package com.crafttalk.chat.data.repository
-
-import com.crafttalk.chat.data.api.rest.NotificationApi
-import com.crafttalk.chat.domain.entity.notification.NetworkCheckSubscription
-import com.crafttalk.chat.domain.entity.notification.NetworkResultCheckSubscription
-import com.crafttalk.chat.domain.entity.notification.NetworkSubscription
-import com.crafttalk.chat.domain.entity.notification.NetworkUnsubscription
-import com.crafttalk.chat.domain.repository.INotificationRepository
-import com.crafttalk.chat.utils.ChatParams
-import com.google.android.gms.tasks.OnCompleteListener
-import com.google.firebase.messaging.FirebaseMessaging
-import retrofit2.Call
-import retrofit2.Callback
-import retrofit2.Response
-import javax.inject.Inject
-
-class NotificationRepository
-@Inject constructor(
-    private val notificationApi: NotificationApi
-) : INotificationRepository {
-
-    private fun checkSubscription(uuid: String, hasSubscription: Boolean, success: () -> Unit) {
-        notificationApi.checkSubscription(
-            body = NetworkCheckSubscription(uuid)
-        ).enqueue(object : Callback<NetworkResultCheckSubscription> {
-            override fun onResponse(call: Call<NetworkResultCheckSubscription>, response: Response<NetworkResultCheckSubscription>) {
-                if (response.isSuccessful && response.body()?.result == hasSubscription) {
-                    success()
-                }
-            }
-            override fun onFailure(call: Call<NetworkResultCheckSubscription>, t: Throwable) {}
-        })
-    }
-
-    override fun subscribe(uuid: String) {
-        val pushToken = ChatParams.firebasePushToken
-        if (pushToken != null) {
-            checkSubscription(uuid, false) {
-                notificationApi.subscribe(
-                    body = NetworkSubscription(pushToken, uuid)
-                )
-                    .enqueue(object : Callback<Unit> {
-                        override fun onResponse(call: Call<Unit>, response: Response<Unit>) {}
-                        override fun onFailure(call: Call<Unit>, t: Throwable) {}
-                    })
-            }
-        } else {
-            getToken { token ->
-                checkSubscription(uuid, false) {
-                    notificationApi.subscribe(
-                        body = NetworkSubscription(token, uuid)
-                    )
-                        .enqueue(object : Callback<Unit> {
-                            override fun onResponse(call: Call<Unit>, response: Response<Unit>) {}
-                            override fun onFailure(call: Call<Unit>, t: Throwable) {}
-                        })
-                }
-            }
-        }
-    }
-
-    override fun unSubscribe(uuid: String) {
-        checkSubscription(uuid, true) {
-            notificationApi.unsubscribe(
-                body = NetworkUnsubscription(uuid)
-            ).enqueue(object : Callback<Unit> {
-                override fun onResponse(call: Call<Unit>, response: Response<Unit>) {}
-                override fun onFailure(call: Call<Unit>, t: Throwable) {}
-            })
-        }
-    }
-
-    override fun getToken(success: (token: String) -> Unit) {
-        FirebaseMessaging.getInstance().token
-            .addOnCompleteListener(OnCompleteListener { task ->
-                if (!task.isSuccessful) {
-                    return@OnCompleteListener
-                }
-                val token = task.result
-                token?.let(success)
-            })
-    }
-}
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_background_single_item_action.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_background_single_item_action.xml b/chat/src/main/res/drawable/com_crafttalk_chat_background_single_item_action.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_background_single_item_action.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,10 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<shape
-    android:shape="rectangle"
-    xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <solid android:color="@color/com_crafttalk_chat_default_color_bg_server_action"/>
-    <stroke android:color="@color/com_crafttalk_chat_default_color_borders_server_action" android:width="1dp"/>
-    <corners android:radius="5dp"/>
-
-</shape>
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/domain/entity/message/MessageType.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/entity/message/MessageType.kt b/chat/src/main/java/com/crafttalk/chat/domain/entity/message/MessageType.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/entity/message/MessageType.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,44 +0,0 @@
-package com.crafttalk.chat.domain.entity.message
-
-enum class MessageType(val valueType: Int) {
-    VISITOR_MESSAGE(1), //сообщение клиента
-    INITIAL_MESSAGE(30), //сообщение, которое регулируется полем showInitialMessage
-    OPERATOR_IS_TYPING(13), // оператор набирает сообщение
-    OPERATOR_STOPPED_TYPING(14), // оператор закончил набирать сообщение
-    READING_CONFIRMATION(4), // подтверждение прочтения сообщения клиентом
-    RECEIVED_BY_MEDIATO(11), // подтверждение получения сообщения
-    RECEIVED_BY_OPERATOR(12), // подтверждение прочтения сообщения клиента оператором
-    UPDATE_DIALOG_SCORE(15), // обновление оценки оператора в диалоге
-    CLOSE_DIALOG_INTENTION(17), // уведомление о намерении клиента завершить диалог
-    FINISH_DIALOG(16), // завершение диалога
-    UPDATE_NEGATIVE_REASON(19), // обновление негативной причины завершения диалога
-    CLIENT_HOLD(23), // оператор отправил сообщение удержания (hold)   - ?
-    TRANSFER_TO_OPERATOR(18), // техническое сообщение о подключении оператора
-    MERGE_HISTORY(25), // синхронизация сообщений до и после перехода на новую авторизацию
-    DEFAULT(-1),
-    INFO_MESSAGE(-2);
-
-    companion object {
-        fun getMessageTypeByValueType(valueType: Int): MessageType {
-            return when(valueType) {
-                1 -> VISITOR_MESSAGE
-                30 -> INITIAL_MESSAGE
-                13 -> OPERATOR_IS_TYPING
-                14 -> OPERATOR_STOPPED_TYPING
-                4 -> READING_CONFIRMATION
-                11 -> RECEIVED_BY_MEDIATO
-                12 -> RECEIVED_BY_OPERATOR
-                15 -> UPDATE_DIALOG_SCORE
-                17 -> CLOSE_DIALOG_INTENTION
-                16 -> FINISH_DIALOG
-                19 -> UPDATE_NEGATIVE_REASON
-                23 -> CLIENT_HOLD
-                18 -> TRANSFER_TO_OPERATOR
-                25 -> MERGE_HISTORY
-                -2 -> INFO_MESSAGE
-                else -> DEFAULT
-            }
-        }
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/helper/file_viewer_helper/FileViewerHelper.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/helper/file_viewer_helper/FileViewerHelper.kt b/chat/src/main/java/com/crafttalk/chat/presentation/helper/file_viewer_helper/FileViewerHelper.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/helper/file_viewer_helper/FileViewerHelper.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,102 +0,0 @@
-package com.crafttalk.chat.presentation.helper.file_viewer_helper
-
-import android.Manifest
-import android.annotation.SuppressLint
-import android.content.Context
-import android.content.res.Resources
-import android.net.Uri
-import android.os.Build
-import android.os.Build.VERSION_CODES.TIRAMISU
-import android.widget.Toast
-import androidx.activity.result.ActivityResultLauncher
-import androidx.core.content.FileProvider
-import androidx.fragment.app.Fragment
-import com.crafttalk.chat.R
-import com.crafttalk.chat.domain.entity.file.TypeFile
-import com.crafttalk.chat.presentation.helper.permission.checkPermission
-import com.crafttalk.chat.presentation.model.TypeMultiple
-import com.crafttalk.chat.utils.ChatParams
-import java.io.File
-import java.text.SimpleDateFormat
-import java.util.*
-
-class FileViewerHelper {
-
-    fun pickFiles(
-        pickFile: ActivityResultLauncher<Pair<TypeFile, TypeMultiple>>?,
-        pickSettings: Pair<TypeFile, TypeMultiple>,
-        noPermission: (permissions: Array<String>, actionsAfterObtainingPermission: () -> Unit) -> Unit,
-        fragment: Fragment
-    ) {
-        fun pickFile() {
-            pickFile?.launch(pickSettings)
-        }
-        val permissions = if (Build.VERSION.SDK_INT >= TIRAMISU) {
-            arrayOf(Manifest.permission.READ_MEDIA_IMAGES)
-        } else {
-            arrayOf(Manifest.permission.READ_EXTERNAL_STORAGE)
-        }
-        checkPermission(
-            permissions,
-            fragment.requireContext(),
-            { noPermission(permissions) { pickFile() } }
-        ) { pickFile() }
-    }
-
-    fun pickImageFromCamera(
-        takePicture: ActivityResultLauncher<Uri>?,
-        noPermission: (permissions: Array<String>, actionsAfterObtainingPermission: () -> Unit) -> Unit,
-        fragment: Fragment
-    ) {
-        fun pickImage() {
-            ChatParams.fileProviderAuthorities ?: throw Resources.NotFoundException("You haven't set the value of the fileProviderAuthorities attribute!")
-            val fileUri = FileProvider.getUriForFile(
-                fragment.requireContext(),
-                ChatParams.fileProviderAuthorities!!,
-                createImageFile(fragment.requireContext(), IMAGE_JPG_FORMAT)
-            )
-            takePicture?.launch(fileUri)
-        }
-        val permissions = arrayOf(Manifest.permission.CAMERA)
-        checkPermission(
-            permissions,
-            fragment.requireContext(),
-            { noPermission(permissions) { pickImage() } }
-        ) { pickImage() }
-    }
-
-    fun getUriForFile(context: Context, file: File): Uri = FileProvider
-        .getUriForFile(
-            context,
-            ChatParams.fileProviderAuthorities!!,
-            file
-        )
-
-    fun getMimeType(context: Context, uri: Uri): String? = context.contentResolver.getType(uri)
-
-    @SuppressLint("SimpleDateFormat")
-    private fun createImageFile(context: Context, format: String): File {
-        val timeStamp: String = SimpleDateFormat("yyyyMMdd_HHmmss").format(Date())
-        return File.createTempFile("MEDIA_${timeStamp}_", format, context.filesDir)
-    }
-
-    companion object {
-        const val PHOTOS_LIMIT_EXCEEDED = 1
-        const val DOCUMENTS_LIMIT_EXCEEDED = 1
-        const val PHOTOS_LIMIT = 5
-        const val DOCUMENTS_LIMIT = 5
-        private const val IMAGE_JPG_FORMAT = ".jpg"
-
-        fun showFileLimitExceededMessage(fragment: Fragment, limit: Int) {
-            Toast.makeText(
-                fragment.requireContext(),
-                fragment.resources.getString(
-                    R.string.com_crafttalk_chat_bottom_sheet_file_viewer_warning,
-                    limit
-                ),
-                Toast.LENGTH_SHORT
-            ).show()
-        }
-
-    }
-}
\ No newline at end of file
Index: chat/src/main/res/layout/com_crafttalk_chat_item_transfer_message.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_item_transfer_message.xml b/chat/src/main/res/layout/com_crafttalk_chat_item_transfer_message.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_item_transfer_message.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,53 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:layout_marginStart="@dimen/com_crafttalk_chat_message_margin_start"
-    android:layout_marginTop="@dimen/com_crafttalk_chat_message_margin_top"
-    android:layout_marginEnd="@dimen/com_crafttalk_chat_message_margin_end"
-    android:layout_marginBottom="@dimen/com_crafttalk_chat_message_margin_bottom">
-
-    <include
-        android:id="@+id/include_date"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        layout="@layout/com_crafttalk_chat_include_date_message" />
-
-    <View
-        android:id="@+id/content_container"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        app:layout_constraintStart_toStartOf="@id/server_message"
-        app:layout_constraintTop_toTopOf="@id/server_message"
-        app:layout_constraintEnd_toEndOf="@id/server_message"
-        app:layout_constraintBottom_toBottomOf="@id/server_message"
-        tools:background="@drawable/com_crafttalk_chat_background_item_simple_server_message" />
-
-    <TextView
-        android:id="@+id/server_message"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:gravity="start"
-        android:paddingStart="16dp"
-        android:paddingTop="12dp"
-        android:paddingEnd="12dp"
-        android:paddingBottom="12dp"
-        android:fontFamily="@font/com_crafttalk_chat_ubuntu_light"
-        android:textFontWeight="300"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/include_date"
-        tools:text="Оператор Тест подключился к диалогу" />
-
-    <include
-        android:id="@+id/include_message_info"
-        android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        layout="@layout/com_crafttalk_chat_include_server_message_info"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/content_container" />
-
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_ic_file.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_ic_file.xml b/chat/src/main/res/drawable/com_crafttalk_chat_ic_file.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_ic_file.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,9 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-        android:width="24dp"
-        android:height="24dp"
-        android:viewportWidth="24.0"
-        android:viewportHeight="24.0">
-    <path
-        android:fillColor="#FF000000"
-        android:pathData="M6,2c-1.1,0 -1.99,0.9 -1.99,2L4,20c0,1.1 0.89,2 1.99,2L18,22c1.1,0 2,-0.9 2,-2L20,8l-6,-6L6,2zM13,9L13,3.5L18.5,9L13,9z"/>
-</vector>
Index: chat/src/main/res/drawable/com_crafttalk_chat_ic_warning.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_ic_warning.xml b/chat/src/main/res/drawable/com_crafttalk_chat_ic_warning.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_ic_warning.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,5 +0,0 @@
-<vector android:height="24dp" android:tint="#FFFFFF"
-    android:viewportHeight="24" android:viewportWidth="24"
-    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
-    <path android:fillColor="@android:color/white" android:pathData="M1,21h22L12,2 1,21zM13,18h-2v-2h2v2zM13,14h-2v-4h2v4z"/>
-</vector>
Index: chat/src/main/res/layout/com_crafttalk_chat_item_server_union_message.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_item_server_union_message.xml b/chat/src/main/res/layout/com_crafttalk_chat_item_server_union_message.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_item_server_union_message.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,188 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:layout_marginStart="@dimen/com_crafttalk_chat_message_margin_start"
-    android:layout_marginTop="@dimen/com_crafttalk_chat_message_margin_top"
-    android:layout_marginEnd="@dimen/com_crafttalk_chat_message_margin_end"
-    android:layout_marginBottom="@dimen/com_crafttalk_chat_message_margin_bottom">
-
-    <include
-        android:id="@+id/include_date"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        layout="@layout/com_crafttalk_chat_include_date_message" />
-
-    <View
-        android:id="@+id/content_container"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        app:layout_constraintStart_toStartOf="@id/server_message"
-        app:layout_constraintTop_toTopOf="@id/server_message"
-        app:layout_constraintEnd_toEndOf="@id/border_content_end"
-        app:layout_constraintBottom_toBottomOf="@+id/border_content_bottom"
-        tools:background="@drawable/com_crafttalk_chat_background_item_simple_server_message" />
-
-    <TextView
-        android:id="@+id/server_message"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:gravity="start"
-        android:autoLink="email|web"
-        android:fontFamily="@font/com_crafttalk_chat_ubuntu_light"
-        android:textFontWeight="300"
-        android:paddingStart="@dimen/com_crafttalk_chat_message_content_padding_start"
-        android:paddingTop="@dimen/com_crafttalk_chat_message_content_padding_top"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/include_date"
-        tools:text="Hello, my name is Bot" />
-
-    <View
-        android:id="@+id/border"
-        android:layout_width="0dp"
-        android:layout_height="1dp"
-        android:background="@color/com_crafttalk_chat_gray"
-        android:layout_marginStart="@dimen/com_crafttalk_chat_message_content_padding_start"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="@id/barrier_content_end"
-        app:layout_constraintTop_toBottomOf="@id/server_message"
-        app:layout_constraintBottom_toTopOf="@id/barrier_attach_top" />
-
-    <ImageView
-        android:id="@+id/server_media"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        android:scaleType="fitXY"
-        android:visibility="gone"
-        android:layout_marginTop="16dp"
-        android:layout_marginStart="@dimen/com_crafttalk_chat_message_content_padding_start"
-        app:layout_constraintHorizontal_bias="0"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/server_message"
-        tools:layout_width="200dp"
-        tools:layout_height="200dp"
-        tools:src="@tools:sample/avatars"
-        tools:visibility="gone" />
-
-    <TextView
-        android:id="@+id/download_file"
-        android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        android:text="@string/com_crafttalk_chat_download"
-        android:gravity="center"
-        android:padding="8dp"
-        android:layout_marginTop="@dimen/com_crafttalk_chat_download_btn_margin_top"
-        android:visibility="gone"
-        app:layout_constraintStart_toStartOf="@id/server_media"
-        app:layout_constraintEnd_toEndOf="@id/server_media"
-        app:layout_constraintTop_toBottomOf="@id/server_media"
-        tools:visibility="gone" />
-
-    <include
-        android:id="@+id/server_media_warning"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        layout="@layout/com_crafttalk_chat_include_media_warning"
-        android:visibility="gone"
-        android:layout_marginTop="16dp"
-        android:layout_marginStart="@dimen/com_crafttalk_chat_message_content_padding_start"
-        app:layout_constraintHorizontal_bias="0"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/server_message"
-        tools:layout_width="200dp"
-        tools:layout_height="200dp"
-        tools:visibility="gone" />
-
-    <include
-        android:id="@+id/file_info"
-        android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        layout="@layout/com_crafttalk_chat_include_file_info"
-        android:visibility="gone"
-        android:layout_marginTop="16dp"
-        android:layout_marginStart="@dimen/com_crafttalk_chat_message_content_padding_start"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/server_message"
-        tools:visibility="visible" />
-
-    <androidx.recyclerview.widget.RecyclerView
-        android:id="@+id/actions_list"
-        android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="6dp"
-        android:nestedScrollingEnabled="true"
-        app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
-        app:layout_constraintTop_toBottomOf="@id/content_container"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        tools:listitem="@layout/com_crafttalk_chat_item_action"
-        tools:itemCount="3"
-        tools:visibility="visible" />
-
-    <androidx.recyclerview.widget.RecyclerView
-        android:id="@+id/buttons_list"
-        android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="6dp"
-        android:nestedScrollingEnabled="true"
-        app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
-        app:layout_constraintTop_toBottomOf="@id/actions_list"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        tools:listitem="@layout/com_crafttalk_chat_item_action"
-        tools:itemCount="3"
-        tools:visibility="visible" />
-
-    <androidx.constraintlayout.widget.Barrier
-        android:id="@+id/barrier_content_end"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        app:barrierDirection="end"
-        app:barrierAllowsGoneWidgets="false"
-        app:constraint_referenced_ids="server_message,server_media,download_file,server_media_warning,file_info" />
-
-    <androidx.constraintlayout.widget.Barrier
-        android:id="@+id/barrier_attach_top"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        app:barrierDirection="top"
-        app:barrierAllowsGoneWidgets="false"
-        app:constraint_referenced_ids="server_media,download_file,server_media_warning,file_info" />
-
-    <androidx.constraintlayout.widget.Barrier
-        android:id="@+id/barrier_attach_bottom"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        app:barrierDirection="bottom"
-        app:barrierAllowsGoneWidgets="false"
-        app:constraint_referenced_ids="server_media,download_file,server_media_warning,file_info" />
-
-    <View
-        android:id="@+id/border_content_bottom"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        android:layout_marginTop="@dimen/com_crafttalk_chat_message_content_padding_bottom"
-        app:layout_constraintTop_toBottomOf="@id/barrier_attach_bottom" />
-
-    <View
-        android:id="@+id/border_content_end"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        android:layout_marginStart="@dimen/com_crafttalk_chat_message_content_padding_end"
-        app:layout_constraintStart_toEndOf="@id/barrier_content_end" />
-
-    <include
-        android:id="@+id/include_message_info"
-        android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        layout="@layout/com_crafttalk_chat_include_server_message_info"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/buttons_list" />
-
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: chat/src/main/res/layout/com_crafttalk_chat_include_replied_message.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_include_replied_message.xml b/chat/src/main/res/layout/com_crafttalk_chat_include_replied_message.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_include_replied_message.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,95 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="wrap_content"
-    android:layout_height="wrap_content"
-    android:paddingStart="@dimen/com_crafttalk_chat_message_content_padding_start"
-    android:paddingTop="@dimen/com_crafttalk_chat_message_content_padding_top"
-    android:paddingEnd="@dimen/com_crafttalk_chat_message_content_padding_end">
-
-    <TextView
-        android:id="@+id/replied_message"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:maxLines="1"
-        android:ellipsize="end"
-        android:singleLine="true"
-        android:fontFamily="@font/com_crafttalk_chat_ubuntu_light"
-        android:gravity="start"
-        android:textFontWeight="300"
-        android:visibility="gone"
-        android:layout_marginTop="@dimen/com_crafttalk_chat_message_replied_content_padding_top"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        tools:maxWidth="230dp"
-        tools:text="Пожалуйста, переформулируйте ваш вопрос 🙃"
-        tools:textColor="@color/com_crafttalk_chat_white"
-        tools:visibility="gone" />
-
-    <include
-        android:id="@+id/replied_file_info"
-        layout="@layout/com_crafttalk_chat_include_file_info"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="@dimen/com_crafttalk_chat_message_replied_content_padding_top"
-        android:visibility="gone"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        tools:visibility="visible" />
-
-    <ImageView
-        android:id="@+id/replied_media_file"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        android:layout_marginTop="@dimen/com_crafttalk_chat_message_replied_content_padding_top"
-        android:scaleType="fitXY"
-        android:visibility="gone"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        tools:layout_height="150dp"
-        tools:layout_width="150dp"
-        tools:src="@tools:sample/avatars"
-        tools:visibility="gone" />
-
-    <include
-        android:id="@+id/replied_media_file_warning"
-        layout="@layout/com_crafttalk_chat_include_media_warning"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        android:layout_marginTop="@dimen/com_crafttalk_chat_message_replied_content_padding_top"
-        android:visibility="gone"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        tools:layout_height="150dp"
-        tools:layout_width="150dp"
-        tools:visibility="gone" />
-
-    <androidx.constraintlayout.widget.Barrier
-        android:id="@+id/barrier_content_start"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        app:barrierDirection="start"
-        app:barrierMargin="@dimen/com_crafttalk_chat_message_replied_content_barrier_indent_start"
-        app:constraint_referenced_ids="replied_message,replied_file_info,replied_media_file,replied_media_file_warning" />
-
-    <androidx.constraintlayout.widget.Barrier
-        android:id="@+id/barrier_content_bottom"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        app:barrierDirection="bottom"
-        app:barrierMargin="@dimen/com_crafttalk_chat_message_replied_content_barrier_indent_bottom"
-        app:constraint_referenced_ids="replied_message,replied_file_info,replied_media_file,replied_media_file_warning" />
-
-    <View
-        android:id="@+id/replied_barrier"
-        android:layout_width="2dp"
-        android:layout_height="0dp"
-        android:background="@color/com_crafttalk_chat_white"
-        app:layout_constraintBottom_toBottomOf="@+id/barrier_content_bottom"
-        app:layout_constraintEnd_toStartOf="@+id/barrier_content_start"
-        app:layout_constraintTop_toTopOf="parent"
-        tools:background="@color/com_crafttalk_chat_white" />
-
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: chat/src/androidTest/java/com/crafttalk/chat/ExampleInstrumentedTest.kt
===================================================================
diff --git a/chat/src/androidTest/java/com/crafttalk/chat/ExampleInstrumentedTest.kt b/chat/src/androidTest/java/com/crafttalk/chat/ExampleInstrumentedTest.kt
deleted file mode 100644
--- a/chat/src/androidTest/java/com/crafttalk/chat/ExampleInstrumentedTest.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,24 +0,0 @@
-package com.crafttalk.chat
-
-import androidx.test.platform.app.InstrumentationRegistry
-import androidx.test.runner.AndroidJUnit4
-
-import org.junit.Test
-import org.junit.runner.RunWith
-
-import org.junit.Assert.*
-
-/**
- * Instrumented test, which will execute on an Android device.
- *
- * See [testing documentation](http://d.android.com/tools/testing).
- */
-@RunWith(AndroidJUnit4::class)
-class ExampleInstrumentedTest {
-    @Test
-    fun useAppContext() {
-        // Context of the app under test.
-        val appContext = InstrumentationRegistry.getInstrumentation().targetContext
-        assertEquals("com.crafttalk.chat.test", appContext.packageName)
-    }
-}
Index: chat/src/main/java/com/crafttalk/chat/data/local/db/entity/converters/MessageTypeConverter.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/converters/MessageTypeConverter.kt b/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/converters/MessageTypeConverter.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/data/local/db/entity/converters/MessageTypeConverter.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,19 +0,0 @@
-package com.crafttalk.chat.data.local.db.entity.converters
-
-import androidx.room.TypeConverter
-import com.crafttalk.chat.domain.entity.message.MessageType
-import com.crafttalk.chat.domain.entity.message.MessageType.Companion.getMessageTypeByValueType
-
-class MessageTypeConverter {
-
-    @TypeConverter
-    fun fromMessageType(messageType: MessageType): Int {
-        return messageType.valueType
-    }
-
-    @TypeConverter
-    fun toMessageType(messageType: Int): MessageType {
-        return getMessageTypeByValueType(messageType)
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_background_item_action.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_background_item_action.xml b/chat/src/main/res/drawable/com_crafttalk_chat_background_item_action.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_background_item_action.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,11 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <item android:top="-2dp" >
-        <shape android:shape="rectangle">
-            <solid android:color="@color/com_crafttalk_chat_default_color_bg_server_action"/>
-            <stroke android:color="@color/com_crafttalk_chat_default_color_borders_server_action" android:width="1dp"/>
-        </shape>
-    </item>
-
-</layer-list>
\ No newline at end of file
Index: chat/src/main/res/drawable/com_crafttalk_chat_ic_search_top.xml
===================================================================
diff --git a/chat/src/main/res/drawable/com_crafttalk_chat_ic_search_top.xml b/chat/src/main/res/drawable/com_crafttalk_chat_ic_search_top.xml
deleted file mode 100644
--- a/chat/src/main/res/drawable/com_crafttalk_chat_ic_search_top.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,10 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="24dp"
-    android:height="24dp"
-    android:viewportWidth="24"
-    android:viewportHeight="24"
-    android:tint="?attr/colorControlNormal">
-  <path
-      android:fillColor="@android:color/black"
-      android:pathData="M12,8l-6,6 1.41,1.41L12,10.83l4.59,4.58L18,14z"/>
-</vector>
Index: chat/src/main/java/com/crafttalk/chat/domain/interactors/ConditionInteractor.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/domain/interactors/ConditionInteractor.kt b/chat/src/main/java/com/crafttalk/chat/domain/interactors/ConditionInteractor.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/domain/interactors/ConditionInteractor.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,93 +0,0 @@
-package com.crafttalk.chat.domain.interactors
-
-import com.crafttalk.chat.domain.repository.IConditionRepository
-import com.crafttalk.chat.initialization.ChatMessageListener
-import com.crafttalk.chat.presentation.ChatInternetConnectionListener
-import com.crafttalk.chat.utils.ChatStatus
-import javax.inject.Inject
-
-class ConditionInteractor
-@Inject constructor(
-    private val conditionRepository: IConditionRepository
-) {
-
-    fun setInternetConnectionListener(listener: ChatInternetConnectionListener) {
-        conditionRepository.setInternetConnectionListener(listener)
-    }
-
-    fun setMessageListener(listener: ChatMessageListener) {
-        conditionRepository.setMessageListener(listener)
-    }
-
-    fun leaveChatScreen() {
-        conditionRepository.setStatusChat(ChatStatus.NOT_ON_CHAT_SCREEN_FOREGROUND_APP)
-    }
-
-    fun goToChatScreen() {
-        conditionRepository.setStatusChat(ChatStatus.ON_CHAT_SCREEN_FOREGROUND_APP)
-    }
-
-    fun openApp() {
-        conditionRepository.setStatusChat(
-            when (conditionRepository.getStatusChat()) {
-                ChatStatus.ON_CHAT_SCREEN_FOREGROUND_APP, ChatStatus.ON_CHAT_SCREEN_BACKGROUND_APP -> ChatStatus.ON_CHAT_SCREEN_FOREGROUND_APP
-                ChatStatus.NOT_ON_CHAT_SCREEN_FOREGROUND_APP, ChatStatus.NOT_ON_CHAT_SCREEN_BACKGROUND_APP -> ChatStatus.NOT_ON_CHAT_SCREEN_FOREGROUND_APP
-            }
-        )
-    }
-
-    fun closeApp() {
-        conditionRepository.setStatusChat(
-            when (conditionRepository.getStatusChat()) {
-                ChatStatus.ON_CHAT_SCREEN_FOREGROUND_APP, ChatStatus.ON_CHAT_SCREEN_BACKGROUND_APP -> ChatStatus.ON_CHAT_SCREEN_BACKGROUND_APP
-                ChatStatus.NOT_ON_CHAT_SCREEN_FOREGROUND_APP, ChatStatus.NOT_ON_CHAT_SCREEN_BACKGROUND_APP -> ChatStatus.NOT_ON_CHAT_SCREEN_BACKGROUND_APP
-            }
-        )
-    }
-
-    fun getStatusChat() = conditionRepository.getStatusChat()
-
-    fun createSessionChat() {
-        conditionRepository.createSessionChat()
-    }
-
-    fun destroySessionChat() {
-        conditionRepository.destroySessionChat()
-    }
-
-    fun dropChat() {
-        conditionRepository.dropChat()
-    }
-
-    fun checkFlagAllHistoryLoaded() =
-        conditionRepository.getFlagAllHistoryLoaded()
-
-    fun getCurrentReadMessageTime() =
-        conditionRepository.getCurrentReadMessageTime()
-
-    fun getCountUnreadMessages() =
-        conditionRepository.getCountUnreadMessages()
-
-    fun getInitialLoadKey(): Int {
-        val countUnreadMessages = conditionRepository.getCountUnreadMessages()
-        return if (countUnreadMessages > 0) {
-            countUnreadMessages - 1
-        } else {
-            0
-        }
-    }
-
-    fun saveCurrentReadMessageTime(currentReadMessageTime: Long) {
-        conditionRepository.saveCurrentReadMessageTime(currentReadMessageTime)
-    }
-
-    fun saveCountUnreadMessages(countUnreadMessages: Int) {
-        conditionRepository.saveCountUnreadMessages(countUnreadMessages)
-    }
-
-    fun clearDataChatState() {
-        conditionRepository.deleteFlagAllHistoryLoaded()
-        conditionRepository.deleteCurrentReadMessageTime()
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/model/ActionModel.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/model/ActionModel.kt b/chat/src/main/java/com/crafttalk/chat/presentation/model/ActionModel.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/model/ActionModel.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,24 +0,0 @@
-package com.crafttalk.chat.presentation.model
-
-import androidx.annotation.DrawableRes
-import com.crafttalk.chat.R
-import com.crafttalk.chat.presentation.base.BaseItem
-
-sealed class ActionModel(
-    open val id: String,
-    open val actionText: String,
-    open val isSelected: Boolean
-) : BaseItem()
-
-data class ActionItem(
-    override val id: String,
-    override val actionText: String,
-    override val isSelected: Boolean,
-    @DrawableRes val backgroundRes: Int
-) : ActionModel(id, actionText, isSelected) {
-    override fun getLayout() = R.layout.com_crafttalk_chat_item_action
-
-    override fun <T : BaseItem> isSame(item: T): Boolean {
-        return item is ActionItem && item.id == id
-    }
-}
\ No newline at end of file
Index: chat/src/main/res/layout/com_crafttalk_chat_bottom_sheet_file_viewer.xml
===================================================================
diff --git a/chat/src/main/res/layout/com_crafttalk_chat_bottom_sheet_file_viewer.xml b/chat/src/main/res/layout/com_crafttalk_chat_bottom_sheet_file_viewer.xml
deleted file mode 100644
--- a/chat/src/main/res/layout/com_crafttalk_chat_bottom_sheet_file_viewer.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,9 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<androidx.recyclerview.widget.RecyclerView
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    android:id="@+id/list"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager" />
-
Index: chat/src/main/java/com/crafttalk/chat/utils/MediaFileDownloadMode.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/utils/MediaFileDownloadMode.kt b/chat/src/main/java/com/crafttalk/chat/utils/MediaFileDownloadMode.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/utils/MediaFileDownloadMode.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,7 +0,0 @@
-package com.crafttalk.chat.utils
-
-enum class MediaFileDownloadMode {
-    ONLY_IN_VIEWER,
-    ONLY_IN_CHAT,
-    All_PLACES
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/helper/extensions/ViewGroup.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/helper/extensions/ViewGroup.kt b/chat/src/main/java/com/crafttalk/chat/presentation/helper/extensions/ViewGroup.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/helper/extensions/ViewGroup.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,8 +0,0 @@
-package com.crafttalk.chat.presentation.helper.extensions
-
-import android.view.LayoutInflater
-import android.view.View
-import android.view.ViewGroup
-import androidx.annotation.LayoutRes
-
-fun ViewGroup.inflate(@LayoutRes layout: Int): View = LayoutInflater.from(this.context).inflate(layout, this, false)
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderOperatorUnionMessage.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderOperatorUnionMessage.kt b/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderOperatorUnionMessage.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/presentation/holders/HolderOperatorUnionMessage.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,186 +0,0 @@
-package com.crafttalk.chat.presentation.holders
-
-import android.content.res.ColorStateList
-import android.view.View
-import android.view.ViewGroup
-import android.widget.ImageView
-import android.widget.ProgressBar
-import android.widget.TextView
-import androidx.core.view.ViewCompat
-import androidx.recyclerview.widget.RecyclerView
-import com.crafttalk.chat.R
-import com.crafttalk.chat.domain.entity.file.TypeFile
-import com.crafttalk.chat.presentation.adapters.AdapterAction
-import com.crafttalk.chat.presentation.adapters.AdapterButton
-import com.crafttalk.chat.presentation.base.BaseViewHolder
-import com.crafttalk.chat.presentation.helper.extensions.*
-import com.crafttalk.chat.presentation.model.UnionMessageItem
-import com.crafttalk.chat.utils.ChatAttr
-
-class HolderOperatorUnionMessage(
-    view: View,
-    private val selectAction: (messageId: String, actionId: String) -> Unit,
-    private val selectButton: (messageId: String, actionId: String, buttonId: String) -> Unit,
-    private val download: (fileName: String, fileUrl: String, fileType: TypeFile) -> Unit,
-    private val updateData: (id: String, height: Int, width: Int) -> Unit,
-    private val clickGifHandler: (gifName: String, gifUrl: String) -> Unit,
-    private val clickImageHandler: (imageName: String, imageUrl: String) -> Unit,
-    private val clickDocumentHandler: (id: String, documentName: String, documentUrl: String) -> Unit
-) : BaseViewHolder<UnionMessageItem>(view), View.OnClickListener {
-    private val contentContainer: View? = view.findViewById(R.id.content_container)
-    private val warningContainer: ViewGroup? = view.findViewById(R.id.server_media_warning)
-    private val fileInfo: ViewGroup? = view.findViewById(R.id.file_info)
-
-    private val message: TextView? = view.findViewById(R.id.server_message)
-    private val listActions: RecyclerView? = view.findViewById(R.id.actions_list)
-    private val listButtons: RecyclerView? = view.findViewById(R.id.buttons_list)
-
-    private val fileIcon: ImageView? = view.findViewById(R.id.file_icon)
-    private val progressDownload: ProgressBar? = view.findViewById(R.id.progress_download)
-    private val fileName: TextView? = view.findViewById(R.id.file_name)
-    private val fileSize: TextView? = view.findViewById(R.id.file_size)
-    private val media: ImageView? = view.findViewById(R.id.server_media)
-    private val downloadMediaFile: TextView? = view.findViewById(R.id.download_file)
-    private val authorName: TextView? = view.findViewById(R.id.author_name)
-    private val authorPreview: ImageView? = view.findViewById(R.id.author_preview)
-    private val time: TextView? = view.findViewById(R.id.time)
-    private val status: ImageView? = view.findViewById(R.id.status)
-    private val date: TextView? = view.findViewById(R.id.date)
-
-    private var id: String? = null
-    private var attachmentFileName: String? = null
-    private var attachmentFileUrl: String? = null
-    private var mediaFileName: String? = null
-    private var fileType: TypeFile? = null
-    private var failLoading: Boolean = false
-
-    init {
-        fileIcon?.setOnClickListener(this)
-        media?.setOnClickListener(this)
-        downloadMediaFile?.setOnClickListener(this)
-    }
-
-    override fun onClick(view: View) {
-        when (view.id) {
-            R.id.file_icon -> {
-                val correctId = id ?: return
-                val correctDocumentName = attachmentFileName ?: return
-                val correctDocumentUrl = attachmentFileUrl ?: return
-                if (!failLoading)
-                    clickDocumentHandler(correctId, correctDocumentName, correctDocumentUrl)
-            }
-            R.id.server_media -> {
-                if (!failLoading) {
-                    val name = mediaFileName ?: return
-                    val url = attachmentFileUrl ?: return
-                    when (fileType) {
-                        TypeFile.IMAGE -> clickImageHandler(name, url)
-                        TypeFile.GIF -> clickGifHandler(name, url)
-                    }
-                }
-            }
-            R.id.download_file -> {
-                val name = mediaFileName ?: return
-                val url = attachmentFileUrl ?: return
-                download(name, url, fileType ?: TypeFile.IMAGE)
-            }
-        }
-    }
-
-    override fun bindTo(item: UnionMessageItem) {
-        id = item.id
-        attachmentFileName = item.file.name.toString()
-        attachmentFileUrl = item.file.url
-        mediaFileName = item.file.name.toString()
-        fileType = item.file.type
-        failLoading = item.file.failLoading
-
-        date?.setDate(item)
-        // set content
-        authorName?.setAuthor(item)
-        authorPreview?.setAuthorIcon(item.authorPreview)
-        time?.setTime(item)
-        status?.setStatusMessage(item)
-        message?.setMessageText(
-            textMessage = item.message,
-            maxWidthTextMessage = ChatAttr.getInstance().widthItemOperatorTextMessage,
-            colorTextMessage = ChatAttr.getInstance().colorTextOperatorMessage,
-            colorTextLinkMessage = ChatAttr.getInstance().colorTextLinkOperatorMessage,
-            sizeTextMessage = ChatAttr.getInstance().sizeTextOperatorMessage,
-            resFontFamilyMessage = ChatAttr.getInstance().resFontFamilyOperatorMessage,
-            isClickableLink = true,
-            isSelectableText = true,
-            bindContinue = {
-                listActions?.apply {
-                    if (item.actions == null) {
-                        visibility = View.GONE
-                    } else {
-                        adapter = AdapterAction(item.id, item.hasSelectedAction, selectAction).apply {
-                            this.data = item.actions
-                        }
-                        visibility = View.VISIBLE
-                    }
-                }
-                listButtons?.apply {
-                    if (item.buttons == null) {
-                        visibility = View.GONE
-                    } else {
-                        adapter = AdapterButton(item.id, item.hasSelectedButton, selectButton).apply {
-                            this.data = item.buttons
-                        }
-                        visibility = View.VISIBLE
-                    }
-                }
-            }
-        )
-        downloadMediaFile?.apply {
-            if (fileType in listOf(TypeFile.IMAGE, TypeFile.GIF)) {
-                settingDownloadBtn(false, failLoading)
-            } else {
-                visibility = View.GONE
-            }
-        }
-        // set bg
-        contentContainer?.apply {
-            setBackgroundResource(ChatAttr.getInstance().bgOperatorMessageResId)
-            ViewCompat.setBackgroundTintList(this, ColorStateList.valueOf(ChatAttr.getInstance().colorBackgroundOperatorMessage))
-        }
-
-        when (fileType) {
-            TypeFile.FILE -> {
-                media?.visibility = View.GONE
-                warningContainer?.visibility = View.GONE
-                fileInfo?.visibility = View.VISIBLE
-                progressDownload?.setProgressDownloadFile(item.file.typeDownloadProgress)
-                fileIcon?.setFileIcon(item.file.typeDownloadProgress)
-                fileName?.setFileName(
-                    file = item.file,
-                    colorTextFileName = ChatAttr.getInstance().colorOperatorFileName,
-                    sizeTextFileName = ChatAttr.getInstance().sizeOperatorFileName
-                )
-                fileSize?.setFileSize(
-                    file = item.file,
-                    colorTextFileSize = ChatAttr.getInstance().colorOperatorFileSize,
-                    sizeTextFileSize = ChatAttr.getInstance().sizeOperatorFileSize
-                )
-            }
-            TypeFile.IMAGE -> {
-                fileInfo?.visibility = View.GONE
-                media?.apply {
-                    visibility = View.VISIBLE
-                    settingMediaFile(true)
-                    loadMediaFile(item.id, item.file, updateData, false, true, warningContainer)
-                }
-            }
-            TypeFile.GIF -> {
-                fileInfo?.visibility = View.GONE
-                media?.apply {
-                    visibility = View.VISIBLE
-                    settingMediaFile(true)
-                    loadMediaFile(item.id, item.file, updateData, false, true, warningContainer, true)
-                }
-            }
-        }
-    }
-
-}
\ No newline at end of file
Index: chat/src/main/java/com/crafttalk/chat/utils/ChatParams.kt
===================================================================
diff --git a/chat/src/main/java/com/crafttalk/chat/utils/ChatParams.kt b/chat/src/main/java/com/crafttalk/chat/utils/ChatParams.kt
deleted file mode 100644
--- a/chat/src/main/java/com/crafttalk/chat/utils/ChatParams.kt	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ /dev/null	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
@@ -1,38 +0,0 @@
-package com.crafttalk.chat.utils
-
-import java.util.*
-import java.util.concurrent.TimeUnit
-
-object ChatParams {
-    internal var visitorUuid: String = ""
-    internal var authMode: AuthType? = null
-    internal var enableSearch: Boolean? = null
-    internal var pageSize = 20
-    internal var countDownloadedMessages = 20
-    internal var urlChatScheme: String? = null
-    internal var urlChatHost: String? = null
-    internal var urlChatNameSpace: String? = null
-    internal var operatorPreviewMode: OperatorPreviewMode? = null
-    internal var operatorNameMode: OperatorNameMode? = null
-    internal var clickableLinkMode: ClickableLinkMode? = null
-    internal var firebasePushToken: String? = null
-    internal var locale: Locale? = null
-    internal var phonePatterns: Array<CharSequence>? = null
-    internal var uploadPoolMessagesTimeout: Long = 5000
-    internal var fileProviderAuthorities: String? = null
-    internal var certificatePinning: String? = null
-    internal var fileConnectTimeout: Long? = null
-    internal var fileReadTimeout: Long? = null
-    internal var fileWriteTimeout: Long? = null
-    internal var fileCallTimeout: Long? = null
-    internal var timeUnitTimeout: TimeUnit = TimeUnit.SECONDS
-
-    internal var addedFieldsForRegistrationVisitor: HashMap<String, Any>? = null
-
-    internal var glueMessage: String? = null
-    internal var sendInitialMessageOnOpen: Boolean? = null
-    internal var sendInitialMessageOnStartDialog: Boolean? = null
-    internal var showInitialMessage: Boolean? = null
-
-    internal var methodGetPayloadTypeWidget: (widgetId: String) -> Class<out Any>? = { null }
-}
\ No newline at end of file
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"delegatedBuild\" value=\"false\" />\r\n        <option name=\"testRunner\" value=\"GRADLE\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n            <option value=\"$PROJECT_DIR$/chat\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
--- a/.idea/gradle.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ b/.idea/gradle.xml	(date 1701165429717)
@@ -4,10 +4,10 @@
   <component name="GradleSettings">
     <option name="linkedExternalProjectsSettings">
       <GradleProjectSettings>
-        <option name="delegatedBuild" value="false" />
         <option name="testRunner" value="GRADLE" />
         <option name="distributionType" value="DEFAULT_WRAPPED" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
+        <option name="gradleJvm" value="1.8" />
         <option name="modules">
           <set>
             <option value="$PROJECT_DIR$" />
@@ -15,7 +15,6 @@
             <option value="$PROJECT_DIR$/chat" />
           </set>
         </option>
-        <option name="resolveModulePerSourceSet" value="false" />
       </GradleProjectSettings>
     </option>
   </component>
Index: .idea/kotlinc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/kotlinc.xml b/.idea/kotlinc.xml
new file mode 100644
--- /dev/null	(date 1701126077853)
+++ b/.idea/kotlinc.xml	(date 1701126077853)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="KotlinJpsPluginSettings">
+    <option name="version" value="1.6.21" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" default=\"true\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ b/.idea/misc.xml	(date 1702282786286)
@@ -1,4 +1,3 @@
-<?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.crafttalk.sampleChat\">\r\n\r\n    <uses-permission android:name=\"android.permission.INTERNET\"/>\r\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\"/>\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\r\n    <uses-permission android:name=\"android.permission.CAMERA\"/>\r\n    <uses-permission android:name=\"android.permission.RECORD_AUDIO\"/>\r\n\r\n    <application\r\n        android:allowBackup=\"false\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\"\r\n        android:name=\"androidx.multidex.MultiDexApplication\"\r\n        android:usesCleartextTraffic=\"true\">\r\n        <meta-data\r\n            android:name=\"com.google.firebase.messaging.default_notification_channel_id\"\r\n            android:value=\"@string/default_notification_channel_id\" />\r\n        <activity\r\n            android:screenOrientation=\"portrait\"\r\n            android:name=\".auth.AuthActivity\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:screenOrientation=\"portrait\"\r\n            android:name=\".chat.ChatActivity\"\r\n            android:windowSoftInputMode=\"adjustPan|stateAlwaysHidden\" />\r\n        <activity\r\n            android:screenOrientation=\"portrait\"\r\n            android:name=\".chat_with_counter.ChatActivity\"\r\n            android:windowSoftInputMode=\"adjustPan|stateAlwaysHidden\" />\r\n        <activity\r\n            android:screenOrientation=\"portrait\"\r\n            android:name=\".web_view.WebViewActivity\"\r\n            android:windowSoftInputMode=\"adjustResize|stateAlwaysHidden\" />\r\n        <service\r\n            android:name=\"com.crafttalk.chat.data.push.ChatPushService\"\r\n            android:exported=\"false\">\r\n            <intent-filter>\r\n                <action android:name=\"com.google.firebase.MESSAGING_EVENT\" />\r\n            </intent-filter>\r\n        </service>\r\n        <provider\r\n            android:name=\"androidx.core.content.FileProvider\"\r\n            android:authorities=\"com.crafttalk.chat.fileprovider\"\r\n            android:exported=\"false\"\r\n            android:grantUriPermissions=\"true\">\r\n            <meta-data\r\n                android:name=\"android.support.FILE_PROVIDER_PATHS\"\r\n                android:resource=\"@xml/file_paths\" />\r\n        </provider>\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ b/app/src/main/AndroidManifest.xml	(date 1701341778469)
@@ -1,10 +1,17 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
     package="com.crafttalk.sampleChat">
 
+    <uses-feature
+        android:name="android.hardware.camera"
+        android:required="false" />
+
     <uses-permission android:name="android.permission.INTERNET"/>
-    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
-    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
+    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"
+        android:maxSdkVersion="32" />
+    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"
+        android:maxSdkVersion="32" />
     <uses-permission android:name="android.permission.CAMERA"/>
     <uses-permission android:name="android.permission.RECORD_AUDIO"/>
 
@@ -16,13 +23,15 @@
         android:supportsRtl="true"
         android:theme="@style/AppTheme"
         android:name="androidx.multidex.MultiDexApplication"
-        android:usesCleartextTraffic="true">
+        android:usesCleartextTraffic="true"
+        tools:targetApi="m">
         <meta-data
             android:name="com.google.firebase.messaging.default_notification_channel_id"
             android:value="@string/default_notification_channel_id" />
         <activity
             android:screenOrientation="portrait"
-            android:name=".auth.AuthActivity">
+            android:name=".auth.AuthActivity"
+            android:exported="true">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
                 <category android:name="android.intent.category.LAUNCHER" />
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\n\r\nbuildscript {\r\n    ext.kotlin_version = '1.5.30'\r\n    repositories {\r\n        google()\r\n        mavenCentral()\r\n\r\n    }\r\n    dependencies {\r\n        classpath 'com.android.tools.build:gradle:4.0.0'\r\n        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'\r\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\r\n        classpath 'com.google.gms:google-services:4.3.3'\r\n        // NOTE: Do not place your application dependencies here; they belong\r\n        // in the individual module build.gradle files\r\n    }\r\n}\r\n\r\nallprojects {\r\n    repositories {\r\n        google()\r\n        mavenCentral()\r\n        maven { url \"https://jitpack.io\" }\r\n    }\r\n}\r\n\r\ntask clean(type: Delete) {\r\n    delete rootProject.buildDir\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle b/build.gradle
--- a/build.gradle	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ b/build.gradle	(date 1701870548152)
@@ -11,7 +11,7 @@
         classpath 'com.android.tools.build:gradle:4.0.0'
         classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
         classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
-        classpath 'com.google.gms:google-services:4.3.3'
+        classpath 'com.google.gms:google-services:4.3.2'
         // NOTE: Do not place your application dependencies here; they belong
         // in the individual module build.gradle files
     }
Index: .idea/deploymentTargetDropDown.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
new file mode 100644
--- /dev/null	(date 1701864845440)
+++ b/.idea/deploymentTargetDropDown.xml	(date 1701864845440)
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="deploymentTargetDropDown">
+    <targetSelectedWithDropDown>
+      <Target>
+        <type value="QUICK_BOOT_TARGET" />
+        <deviceKey>
+          <Key>
+            <type value="VIRTUAL_DEVICE_PATH" />
+            <value value="C:\Users\Philipok\.android\avd\Pixel_2_API_29.avd" />
+          </Key>
+        </deviceKey>
+      </Target>
+    </targetSelectedWithDropDown>
+    <timeTargetWasSelectedWithDropDown value="2023-12-06T12:11:51.050016Z" />
+  </component>
+</project>
\ No newline at end of file
Index: app/src/main/res/values-en/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n    <string name=\"app_name\">SampleChat</string>\r\n    <string name=\"title_home\">Home</string>\r\n    <string name=\"title_settings\">Settings</string>\r\n\r\n    <string name=\"menu_item_1\">Home</string>\r\n    <string name=\"menu_item_2\">Chat</string>\r\n    <string name=\"menu_item_3\">Settings</string>\r\n\r\n<!--    <string name=\"urlChatScheme\">https</string>-->\r\n<!--    <string name=\"urlChatHost\">presale.craft-talk.com</string>-->\r\n<!--    <string name=\"urlChatNameSpace\">webchat_presale</string>-->\r\n\r\n    <string name=\"chat_bottom_sheet_file_viewer_image_from_gallery\">Image</string>\r\n    <string name=\"chat_bottom_sheet_file_viewer_image_from_camera\">Camera</string>\r\n    <string name=\"chat_bottom_sheet_file_viewer_document_from_gallery\">Document</string>\r\n\r\n    <string name=\"urlChatScheme\">https</string>\r\n    <string name=\"urlChatHost\">release.craft-talk.com</string>\r\n    <string name=\"urlChatNameSpace\">webchat_ASDK</string>\r\n\r\n    <string name=\"webUrlChatScheme\">https</string>\r\n    <string name=\"webUrlChatHost\">release.craft-talk.com</string>\r\n    <string name=\"webUrlChatNameSpace\">wwebchat_test</string>\r\n\r\n    <string name=\"salt\">C~kW]cq76(a?m[UbJ)drw+Wh6>W[3Wsj</string>\r\n    <string name=\"default_notification_channel_id\">0</string>\r\n    <string name=\"internet_connection_warning\">Waiting for network…</string>\r\n    <string name=\"synchronization\">Synchronization</string>\r\n\r\n    <string name=\"chat_file_provider_authorities\">com.crafttalk.chat.fileprovider</string>\r\n\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values-en/strings.xml b/app/src/main/res/values-en/strings.xml
--- a/app/src/main/res/values-en/strings.xml	(revision 2253c6c09a66557a20753376f11bdde24d79590f)
+++ b/app/src/main/res/values-en/strings.xml	(date 1701678983800)
@@ -16,12 +16,12 @@
     <string name="chat_bottom_sheet_file_viewer_document_from_gallery">Document</string>
 
     <string name="urlChatScheme">https</string>
-    <string name="urlChatHost">release.craft-talk.com</string>
-    <string name="urlChatNameSpace">webchat_ASDK</string>
+    <string name="urlChatHost">cloud-dev-external.craft-talk.com</string>
+    <string name="urlChatNameSpace">channel_ce93c1</string>
 
     <string name="webUrlChatScheme">https</string>
-    <string name="webUrlChatHost">release.craft-talk.com</string>
-    <string name="webUrlChatNameSpace">wwebchat_test</string>
+    <string name="webUrlChatHost">cloud-dev-external.craft-talk.com</string>
+    <string name="webUrlChatNameSpace">channel_ce93c1</string>
 
     <string name="salt">C~kW]cq76(a?m[UbJ)drw+Wh6>W[3Wsj</string>
     <string name="default_notification_channel_id">0</string>
diff --git a/chat/consumer-rules.pro b/chat/consumer-rules.pro
deleted file mode 100644
